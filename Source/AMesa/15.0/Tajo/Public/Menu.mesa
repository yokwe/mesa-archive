-- File: Menu.mesa - last modified by:-- SXW   ,	 9-Jul-81 22:02:42-- PXK    ,	 8-Nov-82 18:18:19-- JGS,		13-Aug-81 10:52:12-- Mark,	Jul 2, 1980 4:48 PM-- AXD    ,	30-Sep-82 22:49:57-- Copyright (C) Xerox Corporation 1982. All rights reserved.DIRECTORY  WindowFont USING [Handle],  Window USING [Handle, Place];Menu: DEFINITIONS =  BEGIN  -- TYPEs and constants   MCRType: TYPE = PROCEDURE [    window: Window.Handle ¬ NIL, menu: Handle ¬ NIL,    index: CARDINAL ¬ LAST[CARDINAL]];  EnumerateProcType: TYPE = PROCEDURE [window: Window.Handle, menu: Handle]    RETURNS [stop: BOOLEAN];  Object: TYPE = RECORD [    permanent: BOOLEAN,    nInstances: CARDINAL [0..77777B],    name: LONG STRING,    items: Items];  Handle: TYPE = LONG POINTER TO Object;  Items: TYPE = LONG DESCRIPTOR FOR ARRAY OF ItemObject;  ItemObject: TYPE = RECORD [keyword: LONG STRING, mcrProc: MCRType];  ItemHandle: TYPE = LONG POINTER TO ItemObject;  EnumerateFor: TYPE = {all, inSW, availableInSW};  --  Menus procedural interface  Create: PROCEDURE [    items: Items, name: LONG STRING, permanent: BOOLEAN ¬ FALSE]    RETURNS [Handle];  Destroy: PROCEDURE [Handle];  Instantiate: PROCEDURE [menu: Handle, window: Window.Handle];  Uninstantiate: PROCEDURE [menu: Handle, window: Window.Handle];  Enumerate: PROCEDURE [    window: Window.Handle, which: EnumerateFor, proc: EnumerateProcType];  MCRForKeyword: PROCEDURE [sw: Window.Handle, menuName, keyword: LONG STRING]    RETURNS [mcr: MCRType, menu: Handle, index: CARDINAL];  SetPNR: PROCEDURE [Window.Handle];  GetFont: PROCEDURE RETURNS [font: WindowFont.Handle];  SetFont: PROCEDURE [font: WindowFont.Handle];  Invoke: PROCEDURE [window: Window.Handle, place: Window.Place];  --  making and freeing menu stuff   MakeItem: PROCEDURE [keyword: LONG STRING, mcrProc: MCRType]    RETURNS [ItemObject];  FreeItem: PROCEDURE [ItemObject];  Make: PROCEDURE [    name: LONG STRING, strings: LONG DESCRIPTOR FOR ARRAY OF LONG STRING,    mcrProc: MCRType, copyStrings: BOOLEAN ¬ TRUE, permanent: BOOLEAN ¬ FALSE]    RETURNS [Handle];  Free: PROCEDURE [menu: Handle, freeStrings: BOOLEAN ¬ TRUE];  --  Menus signals and errors  ErrorCode: TYPE = {    isInstantiated, alreadyInstantiated, notInstantiated, contextNotAvailable,    isPermanent, other};  Error: ERROR [code: ErrorCode];  END.