-- Copyright (C) 1981, 1982, 1983, 1984  by Xerox Corporation. All rights reserved. -- File: TajoOps.mesa - last edit-- SXW   	10-Jul-81 15:20:37-- Mark		19-May-81 15:03:05-- JGS		19-Aug-81 14:45:08-- PXK    	15-Oct-82 11:54:09-- BXM  	 8-Oct-81 11:56:48 -- SXS   	22-Sep-82 11:34:12 -- LXR    	25-Aug-82 15:12:50 -- CXH   	 7-Jul-83 13:53:34 -- BJD    	28-Aug-84 10:30:50 DIRECTORY  Cursor USING [Defined, Handle],  Profile USING [Place],  System USING [Switches],  TemporaryBooting USING [BootLocation],  ToolWindow USING [State],  Window USING [Dims, Handle, Object];TajoOps: DEFINITIONS =  BEGIN  ContextHandle: TYPE = LONG POINTER TO ContextObject;  ContextObject: TYPE;    WindowObject: TYPE = MACHINE DEPENDENT RECORD [    window: Window.Object,    contexts: ContextHandle ¬ NIL,    aborted, allocated: BOOLEAN ¬ FALSE,    cookieVariant, underVariant: BOOLEAN ¬ FALSE,    extra0, extra1, extra2: BOOLEAN ¬ FALSE,    pad: [0..777B] ¬ 0];  WindowHandle: TYPE = LONG POINTER TO WindowObject;  OutloadProcType: TYPE = PROCEDURE [    boot: TemporaryBooting.BootLocation, switches: System.Switches];  tinyHeight: INTEGER = 30;  tinyWidth: INTEGER = 60;  tinyDims: Window.Dims = [tinyWidth, tinyHeight];  ProcessUserActions: PROCEDURE;  Notifier: PROCEDURE [resetOnRestart: BOOLEAN ¬ TRUE];  StartStimulusLevel: PROCEDURE;  StartToolManager: PROCEDURE;  AllocateWindow: PROCEDURE [    bitmapUnder: BOOLEAN ¬ FALSE, cookie: BOOLEAN ¬ FALSE]    RETURNS [Window.Handle];  DeallocateWindow: PROCEDURE [window: Window.Handle];  DestroyWindow: PROCEDURE [Window.Handle];  IsWindowValid: PROCEDURE [Window.Handle] RETURNS [BOOLEAN];  FetchColdCursorFromType: PROCEDURE [    cursor: Cursor.Handle, type: Cursor.Defined];  -- Control module aids  StartPhase1: PROCEDURE [short, long: CARDINAL ¬ 0];  StartPhase2: PROCEDURE;  SetInitialToolStateDefault: PROCEDURE [ToolWindow.State];  SetPlace: PROCEDURE [Profile.Place];  ProcessUserCm: PROCEDURE;  StartHerald: PROCEDURE [systemName: LONG STRING, tinyName: LONG STRING];  SetOutloadProc: PROCEDURE [proc: OutloadProcType];  ProcessInitialCommandLine: PROCEDURE;  RunCascadeNub: PROCEDURE;  StartProfiles: PROCEDURE;  END.  