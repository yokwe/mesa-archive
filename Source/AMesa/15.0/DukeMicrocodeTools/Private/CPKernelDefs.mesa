-- Copyright (C) 1983, 1985  by Xerox Corporation. All rights reserved. -- Last edit by JAC  31-May-85  9:52:07-- CPKernel.mesa, HGM, 13-Nov-83  0:55:17DIRECTORY  CPDefs USING [    Bank, Cycle, IOReg, Link, Map, OtherReg, RealCS, RealMemory, RReg,    UReg, VirturalMemory, Task],  CPMIFormat USING [MI],    Format USING [StringProc];CPKernelDefs: DEFINITIONS =  BEGIN    Error: ERROR [reason: LONG STRING];    Nibble: TYPE = [0..0FH];  Byte: TYPE = [0..0FFH];      maxBreaks: CARDINAL;    State: TYPE = {dead, halted, running, cpBreak, booted};    InKernel: PROCEDURE RETURNS [BOOLEAN];  DebuggeeReady: PROCEDURE;    ProbeForStateChange: PROCEDURE [Format.StringProc, LONG POINTER];  PollCP: PROCEDURE [Format.StringProc, LONG POINTER] RETURNS [BOOLEAN];  StopCP: PROCEDURE;  ContinueCP: PROCEDURE;      Boot: PROCEDURE;  LoadKernel: PROCEDURE;  LoadKernelHigh: PROCEDURE [CPDefs.Bank];  StartKernel: PROCEDURE;  FindBanks: PROCEDURE RETURNS [CPDefs.Bank];  Reset: PROCEDURE;  HalfBoot: PROCEDURE;  Start: PROCEDURE;  Stop: PROCEDURE [Format.StringProc, LONG POINTER];  ContinueAfterStop: PROCEDURE [Format.StringProc, LONG POINTER];    SetBreak: PROCEDURE [pc: CPDefs.RealCS, cycle: CPDefs.Cycle, id: Byte];  AtBreak: PROCEDURE RETURNS [BOOLEAN];  GetBreakID: PROCEDURE RETURNS [CARDINAL];  ContinueAfterBreak: PROCEDURE [Format.StringProc, LONG POINTER, CPMIFormat.MI, CPDefs.Cycle, CPDefs.Task];  ReadTpc: PROCEDURE [CPDefs.Task] RETURNS [CPDefs.RealCS];  WriteTpc: PROCEDURE [CPDefs.Task, CPDefs.RealCS];  WriteTpcInternal: PROCEDURE [CPDefs.Task, CPDefs.RealCS];  ReadLink: PROCEDURE [CPDefs.Link] RETURNS [Nibble];  WriteLink: PROCEDURE [CPDefs.Link, Nibble];  ReadCS: PROCEDURE [CPDefs.RealCS] RETURNS [data: CPMIFormat.MI];  ReadControlStore: PROCEDURE [CPDefs.RealCS] RETURNS [data: CPMIFormat.MI];  WriteControlStore: PROCEDURE [CPDefs.RealCS, CPMIFormat.MI];  WriteCS: PROCEDURE [CPDefs.RealCS, CPMIFormat.MI];  WriteCSBad: PROCEDURE [CPDefs.RealCS, CPMIFormat.MI];  ReadBank: PROCEDURE RETURNS [CPDefs.Bank];  WriteBank: PROCEDURE [CPDefs.Bank];  ReadRReg: PROCEDURE [CPDefs.RReg] RETURNS [WORD];  WriteRReg: PROCEDURE [CPDefs.RReg, WORD];  ReadRH: PROCEDURE [CPDefs.RReg] RETURNS [WORD];  WriteRH: PROCEDURE [CPDefs.RReg, WORD];  ReadRAndRH: PROCEDURE [CPDefs.RReg] RETURNS [LONG POINTER];  WriteRAndRH: PROCEDURE [CPDefs.RReg, LONG POINTER];  ReadUReg: PROCEDURE [CPDefs.UReg] RETURNS [WORD];  WriteUReg: PROCEDURE [CPDefs.UReg, WORD];  ReadIOIn: PROCEDURE [CPDefs.IOReg] RETURNS [WORD];  WriteIOOut: PROCEDURE [CPDefs.IOReg, WORD];  ReadMap: PROCEDURE [CPDefs.Map] RETURNS [WORD];  WriteMap: PROCEDURE [CPDefs.Map, WORD];  ReadRealMemory: PROCEDURE [CPDefs.RealMemory] RETURNS [WORD];  ReadRealMemoryInternal: PROCEDURE [CPDefs.RealMemory] RETURNS [WORD];  WriteRealMemory: PROCEDURE [CPDefs.RealMemory, WORD];  WriteRealMemoryInternal: PROCEDURE [CPDefs.RealMemory, WORD];  ReadVirturalMemory: PROCEDURE [CPDefs.VirturalMemory] RETURNS[WORD];  WriteVirturalMemory: PROCEDURE [CPDefs.VirturalMemory, WORD];  ReadOther: PROCEDURE [CPDefs.OtherReg] RETURNS [WORD];  WriteOther: PROCEDURE [CPDefs.OtherReg, WORD];  ReadPC: PROCEDURE RETURNS [CARDINAL];  WritePC: PROCEDURE [CARDINAL];  OneMI: TYPE = RECORD [real: CPDefs.RealCS, mi: CPMIFormat.MI];  CSBlock: TYPE = ARRAY [0..0) OF OneMI;  WriteCSBlock: PROCEDURE [CARDINAL, LONG POINTER TO CSBlock];    WriteMemoryBlock: PROCEDURE [to: CPDefs.RealMemory, count: CARDINAL, data: LONG POINTER];  END.-- Log of last edits-- JAC	30-May-85 16:42:36	CP renamed to CPDefs-- JAC	31-May-85  9:46:06	CPKernel renamed to CPKernelDefs; CPMI renamed to CPMIFormat