-- Copyright (C) 1983, 1985  by Xerox Corporation. All rights reserved. -- Last edit by JAC  31-May-85  9:53:18-- from CPKernelMesa.mesa, HGM, 13-Nov-83  1:37:54DIRECTORY  Inline USING [BITAND],  String USING [AppendString],  CPKernelDefs USING [Error, ReadOther, ReadRReg, ReadUReg],  CPKernelOp USING [CantWriteThatRegister],  CPSymbl USING [Error, Eval, Symbol];CPKernelMesa: PROGRAM  IMPORTS Inline, String, CPKernelDefs, CPKernelOp, CPSymbl  EXPORTS CPKernelDefs =  BEGIN    ReadPC: PUBLIC PROCEDURE RETURNS [pc: CARDINAL] =    BEGIN    pc ¬ Inline.BITAND[Read["PC"L], 0FFH];    IF Read["uPCCross"L] # 0 AND pc # 0 THEN pc ¬ pc - 100H;    pc ¬ pc + (Read["UvPCpage"L]-Read["UvC"L]);    pc ¬ pc * 2;    pc ¬ pc + CPKernelDefs.ReadOther[pc16];    END;      WritePC: PUBLIC PROCEDURE [pc: CARDINAL] =    BEGIN    CPKernelOp.CantWriteThatRegister[];    END;      Read: PROCEDURE [s: LONG STRING] RETURNS [CARDINAL] =    BEGIN    value: CPSymbl.Symbol;    value ¬ CPSymbl.Eval[s !      CPSymbl.Error =>        BEGIN	temp: STRING = [200];        String.AppendString[temp, "Can't find "L];        String.AppendString[temp, s];        String.AppendString[temp, " in symbol table: "L];        String.AppendString[temp, reason];	ERROR CPKernelDefs.Error[temp];        END];    WITH value SELECT FROM      rReg => RETURN[CPKernelDefs.ReadRReg[r]];      uReg => RETURN[CPKernelDefs.ReadUReg[u]];      ENDCASE => ERROR CPKernelDefs.Error["Unexpected type of register from Symbol table"L];    END;  END.-- Log of last edits-- JAC	30-May-85 16:42:36	didn't use CPDefs-- JAC	31-May-85  9:46:06	CPKernel renamed to CPKernelDefs; CPSymbols renamed to CPSymbl; CPKernelOps renamed to CPKernelOp