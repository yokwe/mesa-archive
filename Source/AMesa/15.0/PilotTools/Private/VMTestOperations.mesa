-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- VMTestOperations.mesa      10-Mar-83 12:58:22 by CAJ -- Virtual memory test program.-- Each operation in VMTest invokes parallel operations on both Pilot's-- VM management and VMTest's own model of VM.  In addition, VMTest's own-- BackingStore sits under (Pilot) VM to check transfer requests.  Each-- operation involves the following steps:--   + generate expected results--   + do the Pilot version of the operation--   + update the model VM--   + check the model against Pilot.-- These operation routines are called from the test script.DIRECTORY  BackingStore USING [Operation],  Environment USING [PageCount, PageNumber],  Space USING [Access, Class, defaultSwapUnitOption, Life, SwapUnitOption,    unknownUsage, Usage],  VM USING [BackingStoreRuns, Interval, ReturnWait, Swappability];VMTestOperations: DEFINITIONS =  BEGIN  ------------  -- PUBLIC types, constants, variables: none  ------------  -- PUBLIC procedures - VM Operations:  Activate: PROCEDURE [interval: VM.Interval, returnWait: VM.ReturnWait];  CopyIn: PROCEDURE [    interval: VM.Interval, runLength: Environment.PageCount,    returnWait: VM.ReturnWait];  CopyOut: PROCEDURE [    interval: VM.Interval, runLength: Environment.PageCount,    returnWait: VM.ReturnWait];  Deactivate: PROCEDURE [interval: VM.Interval, returnWait: VM.ReturnWait];  ForceOut: PROCEDURE [interval: VM.Interval, returnWait: VM.ReturnWait];  GetMapUnitAttributes: PROCEDURE [page: Environment.PageNumber];  GetSwapUnitAttributes: PROCEDURE [page: Environment.PageNumber];  Kill: PROCEDURE [interval: VM.Interval];  MakeReadOnly: PROCEDURE [interval: VM.Interval];  MakeResident: PROCEDURE [interval: VM.Interval, returnWait: VM.ReturnWait];  MakeSwappable: PROCEDURE [interval: VM.Interval];  MakeWritable: PROCEDURE [interval: VM.Interval];  Map: PROCEDURE [    id: LONG STRING ¬ NIL, interval: VM.Interval,    backed: BOOLEAN ¬ TRUE, runs: VM.BackingStoreRuns,    usage: Space.Usage ¬ Space.unknownUsage,    class: Space.Class ¬ unknown, access: Space.Access ¬ readWrite,    swapUnits: Space.SwapUnitOption ¬ Space.defaultSwapUnitOption,    life: Space.Life ¬ alive, swappability: VM.Swappability ¬ swappable];  Relocate: PROCEDURE [from: Environment.PageNumber, to: Environment.PageNumber];  -- SetAccess is superseded by MakeReadOnly and MakeWritable.  -- SetSwappability is superseded by MakeResident and MakeSwappable.  SupplyBackingStore: PROCEDURE [    page: Environment.PageNumber, backed: BOOLEAN,    backingStoreRuns: VM.BackingStoreRuns];  Unmap: PROCEDURE [page: Environment.PageNumber];  ------------  -- The following VM operations are currently unimplemented in the test program.  --AdjustReservedRealMemory: PROCEDURE [  --  count: Environment.PageCount, addSub: AddSub];  --AddSub: TYPE = {add, subtract};  --DeclareHelperProcess: PROCEDURE [process: ++GENERIC++ PROCESS];  --DeleteHelperProcess: PROCEDURE [process: ++GENERIC++ PROCESS];  --GuardStateVector: PROCEDURE [priorityReserved: Process.Priority]  --  RETURNS [priorityPrev: Process.Priority] = INLINE {  --  priorityPrev ¬ GetPriority[]; SetPriority[priorityReserved]};  --DoneWithStateVector: PROCEDURE [priorityPrev: Process.Priority] = INLINE {  --  SetPriority[priorityPrev]};  --Wait: PROCEDURE [interval: VM.Interval];  --AwaitAddressFault: PROCEDURE[]  --  RETURNS [process: ++GENERIC++ PROCESS, address: LONG POINTER];  --AwaitWriteFault: PROCEDURE[]  --  RETURNS [process: ++GENERIC++ PROCESS, address: LONG POINTER];  --AbortFaultedProcess: PROCEDURE [  --  process: ++GENERIC++ PROCESS, faultType: FaultType, error: ++GENERIC++ ERROR,  --  errorArgs: LONG DESCRIPTOR FOR ARRAY OF WORD];  --ReportFaultedProcess: PROCEDURE [  --  process: ++GENERIC++ PROCESS, faultType: FaultType];  --RestartFaultedProcess: PROCEDURE [  --  process: ++GENERIC++ PROCESS, faultType: FaultType];  ------------  -- PUBLIC procedures - Other operations:  -- Touch causes a read or write on the specified page(s)  Touch: PROCEDURE [    interval: VM.Interval, operation: BackingStore.Operation ¬ read];  ------------  -- PUBLIC SIGNALs and ERRORs:  CannotTouch: SIGNAL;  CannotWrite: SIGNAL;  END.LOG16-Aug-82 16:05:14   CAJ    Created file.