-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- PostDefs.mesa    last edited by: CAJ     25-Apr-83 14:16:52-- Test software for Klamath Pilot.-- PostDefs defines some procedures for simple I/O to the display and keyboard.  It serializes the messages, and should be the central manager of the display.  Post can post up to 5 strings in a single procedure call.  It also deals with some predefined messages in custom ways.-- See also PostAuxDefs, which uses the same monitor lock and is implemented by the same module as PostDefs.  PostAuxDefs defines the fancier features, some control procedures, and other stuff that changes more frequently.DIRECTORY  TTY USING [CharStatus];PostDefs: DEFINITIONS =BEGIN------------------------------------------ Public types and constantsLRString: TYPE = LONG POINTER TO READONLY StringBody;RString: TYPE = LONG POINTER TO READONLY StringBody;cr: CHARACTER = 'M - 100B;del: CHARACTER = 177C;sp: CHARACTER = ' ;NumberFormat: TYPE = RECORD [  base: [2..36],  zerofill, unsigned: BOOLEAN,  columns: [0..255]];cardinalFormat: NumberFormat =  [base: 10, zerofill: FALSE, unsigned: TRUE, columns: 0];decimalFormat: NumberFormat =  [base: 10, zerofill: FALSE, unsigned: FALSE, columns: 0];octalFormat: NumberFormat =  [base: 8, zerofill: FALSE, unsigned: TRUE, columns: 0];------------------------------------------ Public exported variables  -- crString is an (unchanging) string containing only a CR character.  -- Be sure to START PostAuxDefs.PostPack before using crString!crString: READONLY RString;------------------------------------------ Public string & character output procedures-- Post, Post1String, PostChar, and PostLine are the basic procedures for posting a bunch of messages.  Post will post up to 5 messages.  Post1String will only take one message;  it is useful when a procedure of this TYPE is required, e.g., to pass as an argument in a procedure call.  PostChar takes only one character.  PostLine appends a carriage return to the messages.  RemoveCharacter erases a character from the window.Post: PROCEDURE [m1, m2, m3, m4, m5: LRString ¬ NIL];Post1LString: PROCEDURE [m: LRString];Post1String: PROCEDURE [m: RString];PostChar: PROCEDURE [c: CHARACTER];PostLine: PROCEDURE [m1, m2, m3, m4, m5: LRString ¬ NIL];RemoveCharacter: PROCEDURE;------------------------------------------ Public Trace procedures-- These procedures are like their like-named Post procedures, except they are noops if the global "trace flag" is FALSE.Trace: PROCEDURE [m1, m2, m3, m4, m5: LRString ¬ NIL];Trace1LString: PROCEDURE [m: LRString];Trace1String: PROCEDURE [m: RString];TraceChar: PROCEDURE [c: CHARACTER];TraceLine: PROCEDURE [m1, m2, m3, m4, m5: LRString ¬ NIL];------------------------------------------ Public numeric output procedures-- These procedures interact properly with other Post procs.  They are very similar to their analagous procedures in IODefs.  The string is padded out to the number of columns specified in the NumberFormat, if necessary.-- Set "trace" to TRUE for trace messages, FALSE for post messages.PostNumber: PROCEDURE [n: UNSPECIFIED, fmt: NumberFormat,  trace: BOOLEAN ¬ FALSE];PostCardinal: PROCEDURE [n: CARDINAL, trace: BOOLEAN ¬ FALSE] =  INLINE {PostNumber[n, cardinalFormat]; RETURN}; -- Base 10, 0 extra columns.PostDecimal: PROCEDURE [n: INTEGER, trace: BOOLEAN ¬ FALSE] =  INLINE {PostNumber[n, decimalFormat]; RETURN}; -- Base 10, 0 extra columns.PostOctal: PROCEDURE [n: UNSPECIFIED, trace: BOOLEAN ¬ FALSE] =  INLINE {PostNumber[n, octalFormat]; RETURN}; -- Base 8, ends with a "B".PostLongNumber: PROCEDURE [n: LONG UNSPECIFIED, fmt: NumberFormat,  trace: BOOLEAN ¬ FALSE];PostLongCardinal: PROCEDURE [n: LONG CARDINAL, trace: BOOLEAN ¬ FALSE] =  INLINE {PostLongNumber[n, cardinalFormat]; RETURN};PostLongDecimal: PROCEDURE [n: LONG INTEGER, trace: BOOLEAN ¬ FALSE] =  INLINE {PostLongNumber[n, decimalFormat]; RETURN};PostLongOctal: PROCEDURE [n: LONG UNSPECIFIED, trace: BOOLEAN ¬ FALSE] =  INLINE {PostLongNumber[n, octalFormat]; RETURN};------------------------------------------ Public input procedures-- These procedures read input from the teletype-style window.  If a tick line is outstanding, it will be terminated (with a CR) before reading input.GetChar: PROCEDURE RETURNS [CHARACTER];GetID, GetLine: PROCEDURE [bfr: LONG STRING];GetEditedString: PROCEDURE [bfr: LONG STRING,    t: PROCEDURE [c: CHARACTER] RETURNS [status: TTY.CharStatus],    newString: BOOLEAN]  RETURNS [CHARACTER];GetString: PROCEDURE [bfr: LONG STRING,  t: PROCEDURE [c: CHARACTER] RETURNS [status: TTY.CharStatus]];-- Numeric input procedures:GetNumber: PROCEDURE [default: UNSPECIFIED, radix: CARDINAL]  RETURNS [UNSPECIFIED];GetDecimal: PROCEDURE RETURNS [INTEGER];GetOctal: PROCEDURE RETURNS [UNSPECIFIED];GetLongNumber: PROCEDURE [default: LONG UNSPECIFIED, radix: CARDINAL]  RETURNS [LONG UNSPECIFIED];GetLongDecimal: PROCEDURE RETURNS [LONG INTEGER];GetLongOctal: PROCEDURE RETURNS [LONG UNSPECIFIED];------------------------------------------ Public signals--> NOTE:  PostPack's MONITOR LOCK IS HELD WHILE THESE SIGNALS ARE RAISED, hence any attempt to call most any PostDefs or PostAuxDefs procedure from within a catch phrase for these signals WILL CAUSE A DEADLOCK!-- These two signals may be raised by the edited input procedures, i.e., by any of the input procedures EXCEPT GetChar.  -- LineOverflow occurs when the input is too much for the string buffer.LineOverflow: SIGNAL [s: LONG STRING] RETURNS [ns: LONG STRING];  -- Rubout occurs when the user types a Rubout.Rubout: SIGNAL;----------------------------------------END.LOG OF SIGNIFICANT CHANGESDate: August 17, 1979, By: JHM, Action: Created file.Date: February 5, 1980, By: JHM, Action: Split off PostAuxDefs, to isolate  compilation dependencies, while PostAuxDefs is in a state of flux.Date: September 17, 1980, By: JHM, Action: Moved a bunch of things here from  PostAuxDefs.Date: September 29, 1980, By: JHM, Action: Made the strings LONG, except for  input strings (which require TTY to handle LONG STRINGs first).  Moved  signals here from PostAuxDefs.Date: 25-Apr-83 13:18:06, By: CAJ , Action: Convert to Klamath, make  remaining STRINGs LONG, add RemoveCharacter.