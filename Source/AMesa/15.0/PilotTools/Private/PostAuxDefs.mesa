-- Copyright (C) 1982  by Xerox Corporation. All rights reserved. -- PostAuxDefs.mesa    last edited by: CAJ     23-Sep-82 15:27:49-- Test software for Pilot 6.0b.-- PostAuxDefs defines a "ticker", which counts test steps.  The ticker posts the test step numbers (see PostDefs), and allows the user to stop test execution at any test step and single step thru a test.  The debugger may be used for these control operations.-- See also PostDefs, which uses the same monitor lock and is implemented by the same module that implements PostAuxDefs.DIRECTORY PostDefs;PostAuxDefs: DEFINITIONS =BEGIN------------------------------------------ Public types and constantsinfinity: CARDINAL = LAST[CARDINAL]; -- Used by Create.Tick: TYPE = LONG CARDINAL;------------------------------------------ Public procedures:  Main control stuff.  -- Create creates a window and typescript file, and initializes the tick  -- counter and the other global flags.  Currently, THERE CAN ONLY BE ONE  -- WINDOW AND TYPESCRIPT at a time per instance of PostPack.  "wraparoundAt"  -- specifies the max number of log pages, Post will wraparound after that.   -- If "wraparoundAt = infinity", Post won't wraparound at all.Create: PROCEDURE [toolName: LONG STRING, wraparoundAt: CARDINAL ¬ infinity];  -- Checkpoint checkpoints the log file, by causing the internal buffers  -- to be written out to the disk.Checkpoint: PROCEDURE;  -- Destroy cleans up the typescript, makes sure that the buffers are  -- emptied, closes the log file, and destroys the window.  After this, don't  -- try to Post anything until a new window and typescript are created.Destroy: PROCEDURE;  -- RegisterWithRestore makes PostPack register with RestoreDefs.  Call this  -- IFF you want PostPack to save some global state [those parameters that  -- are settable in the next section of procedures] in the restorable heap  -- "RestorageDefs".  This should be done AFTER calling Create, and  -- preferably before any other modules register with RestoreDefs.  -- STARTING SEQUENCE (skip the *'d lines if you're not using Restorage):  --   PostAuxDefs.Create[...]; Process.Detach[FORK[Run]];  -- Where Run does:  --   START RestoreDefs.RestoragePack[]; *  --   START the various modules, which call RestoreDefs.Register[...]; *  --   RegisterWithRestore[]; *  --   RestoreDefs.Initialize[...]; *  -- Run the main code.  Much later:  --   RestoreDefs.FinalFinish[]; *  --   PostAuxDefs.Destroy[];  --> ************************************************************  --> NOTE:  If you don't call this proc, i.e., if you don't care about the  -->   restorable storage heap, then PostPack won't call RestorageDefs or  -->   RestoreDefs AT ALL, so the RestorageDefs and RestoreDefs imports  -->   need not be satisfied.  --> ************************************************************RegisterWithRestore: PROCEDURE;------------------------------------------ Public Tick and global state control procedures  -- GetCurrentTick returns the current value of the tick counter  -- (see SetCurrentTick, Ticker).GetCurrentTick: PROCEDURE RETURNS [Tick];  -- GetPauseAtTick returns "tickPauseAt" (see SetPauseAtTick).GetPauseAtTick: PROCEDURE RETURNS [Tick];  -- GetSingleStep returns "singleStepFlag" (see SetSingleStep).GetSingleStep: PROCEDURE RETURNS [BOOLEAN];  -- GetTraceAtTick returns "tickTraceAt" (see SetTraceAtTick).GetTraceAtTick: PROCEDURE RETURNS [Tick];  -- GetTraceFlag returns "traceFlag" (see SetTraceFlag).GetTraceFlag: PROCEDURE RETURNS [BOOLEAN];  -- SetCurrentTick sets the tick counter.  It is initialized to 0 by Create.SetCurrentTick: PROCEDURE [tick: Tick ¬ 0];  -- SetPauseAtTick sets the global variable "tickPauseAt".  The user may  -- set this variable via the debugger.  When the ticker reaches this value,  -- it will call the debugger with the message "Tick counter pause".  The  -- flag is initialized by Create to the default value.SetPauseAtTick: PROCEDURE [tick: Tick ¬ LAST[Tick]];  -- SetSingleStep sets the global variable "singleStepFlag", which controls  -- single stepping of the test.  The user may set this variable via the  -- debugger.  Single stepping is accomplished by calling the debugger with  -- the message "Ready for next step" at each new tick (i.e., when Ticker is  -- called at the beginning of each new test step).  The flag is initialized  -- to FALSE by Create.SetSingleStep: PROCEDURE [bv: BOOLEAN];  -- SetTraceAtTick sets the global variable "tickTraceAt".  The user may set  -- this variable via the debugger.  When the ticker reaches this value, the  -- trace flag (see SetTraceFlag) will automatically be turned on.SetTraceAtTick: PROCEDURE [tick: Tick ¬ LAST[Tick]];  -- SetTraceFlag sets the state of the global variable "traceFlag" (init to  -- FALSE by Create).  If TRUE, trace messages go to the display & log.SetTraceFlag: PROCEDURE [bv: BOOLEAN];  -- Ticker should be called once per "test step".  It increments the tick  -- counter (see Create, GetCurrentTick, & SetCurrentTick), and reports the  -- count in the log.  Ticker separates tick messages from other messages.   -- A line of ticks looks something like:  --   Tick: ...2000....!....!....!....2020....!....!....!....2040...Ticker: PROCEDURE;------------------------------------------ Public interaction procedures  -- CharsAvailable returns the number of chars available in the input buffer.CharsAvailable: PROCEDURE RETURNS [number: CARDINAL];  -- Confirm asks the user for confirmation.  It accepts <cr>, "y", & "Y"  -- affirmatively;  <del>, "n", and "N" negatively;  anything else causes it  -- to soak up chars until a <del>.Confirm: PROCEDURE RETURNS [BOOLEAN];  -- PutBackChar puts a character back into the input buffer.PutBackChar: PROCEDURE [c: CHARACTER];------------------------------------------ Public program PostPackPostPack: PROGRAM;END.LOG OF SIGNIFICANT CHANGESDate: February 5, 1980, By: JHM, Action: Created file.Date: August 20, 1980, By: JHM, Action: Made Tick LONG, added GetCurrentTick,  changed default arg for SetPauseAtTick.Date: September 17, 1980, By: JHM, Action: Moved the common I/O stuff off to  PostDefs.  Redefined the global-state get/set procs.Date: September 29, 1980, By: JHM, Action: Made the strings LONG, except for  input strings (which require TTY to handle LONG STRINGs first).  Moved  signals to PostDefs.Date: October 1, 1980, By: JHM, Action: Added stuff to allow PostPack to keep  some data in the Restorage heap.Date: 23-Sep-82 15:27:09, By: CAJ , Action: STRING -> LONG STRING.