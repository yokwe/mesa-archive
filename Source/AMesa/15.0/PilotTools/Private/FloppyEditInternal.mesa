-- Copyright (C) 1984, 1985  by Xerox Corporation. All rights reserved. -- FloppyEditInternal.mesa   23-Apr-85 16:12:39 by CAJ DIRECTORY  FloppyChannel USING [DiskAddress, Drive, Handle, SectorCount],  FloppyFormat USING [Sector],  FormSW USING [ClientItemsProcType],  Window USING [Handle],  WindowSwap USING [Key];FloppyEditInternal: DEFINITIONS =  BEGIN  --//////////////////  -- TYPEs, constants, variables  maxSectorWords: CARDINAL = 512;  -- assumes no Troy  SectorBuffer: TYPE = LONG POINTER TO ARRAY [0..maxSectorWords) OF WORD;  --  The following is the dynamically allocated space for tool variables  Data: TYPE = LONG POINTER TO DataObject;  DataObject: TYPE = RECORD [    -- all items are forced to be on word boundaries    contextSW: Window.Handle,    dataSW: Window.Handle,    msgSW: Window.Handle,    ioSW: Window.Handle,    ioData: LONG POINTER,    contextData: LONG POINTER,    sectorBuffer: SectorBuffer,    handle: FloppyChannel.Handle,    writesDisallowed: BOOLEAN];  data: Data;  heap: UNCOUNTED ZONE;  swapWindowKey: WindowSwap.Key;  -- The following is the handle for the tool as a whole  toolWindow: Window.Handle;  --//////////////////  -- Startup/Shutdown routines  -- Routines supplied by subwindows for their creation and initialization  -- at tool startup and activate time, and for cleanup at deactivate time.  -- Initialization of context subwindow state and floppy context (precedes  -- subwindow creation)  InitContext: PROCEDURE;  -- The following is the routine for setting up the data subwindow as a view  -- swapping window. It is exported (only) by the default view implementor.  InitializeViewSwappingWindow: PROCEDURE;  -- Initialization of I/O subwindow and I/O world (precedes subwindow creation)  InitIO: PROCEDURE;  -- Permanent window creation  MakeContextSW: FormSW.ClientItemsProcType;  MakeDataSW: FormSW.ClientItemsProcType;  MakeIOSW: FormSW.ClientItemsProcType;  -- Clean finish and cleanup at tool deactivation/demise  ShutdownIO: PROCEDURE;  --//////////////////  -- Utility procedures  -- Determines whether context items in context window match context last set.  ContextMatchesContextInEffect: PROCEDURE RETURNS [BOOLEAN];  -- Convert cylinder/head/sector type address to disk-sequential sector number  DiskAddressToSectorNumber: PROCEDURE [diskAddress: FloppyChannel.DiskAddress]    RETURNS [sector: FloppyFormat.Sector];  GetDrive: PROCEDURE RETURNS [FloppyChannel.Drive];  -- Sets appropriate tool data state  InvalidateHandle: PROCEDURE;  -- Convert disk-sequential sector number to cylinder/head/sector type address  SectorNumberToDiskAddress: PROCEDURE [sector: FloppyFormat.Sector]    RETURNS [diskAddress: FloppyChannel.DiskAddress];  -- How many words in the current context sector  SectorWords: PROCEDURE RETURNS [FloppyChannel.SectorCount];  -- Print message, if any, in message subwindow and blink if desired.  Msg: PROCEDURE [string: LONG STRING ¬ NIL, blink: BOOLEAN ¬ FALSE];  -- Ensure disk address is valid for disk which is currently active  ValidateDiskAddress: PROCEDURE [addr: FloppyChannel.DiskAddress]    RETURNS [BOOLEAN];  -- Ensure sector specified is valid for currently active disk  ValidateSectorNumber: PROCEDURE [sector: FloppyFormat.Sector] RETURNS [BOOLEAN];  END.LOG24-Sep-84 16:47:36   CAJ	Created file.23-Apr-85 16:11:34   CAJ	Remove dataSWData from Data.