-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- VMTestScriptImpl.mesa       12-Jan-83 16:46:59 by CAJ -- Virtual memory test program.-- VMTestScript implements operations for used to create a predetermined-- script of tests.  Scripts are normally written or expanded by test users.DIRECTORY  Environment USING [PageCount],  PostAuxDefs USING [Ticker],  ScriptOps USING [RegisterScript],  Space USING [SwapUnitOption, SwapUnitSize],  TryDefs USING [SetLoggingNonRecoverable],  VM USING [BackingStoreRuns, Interval],  VMTestBackingStore USING [MakeBackingData],  VMTestDatabase USING [GetTestVMSize, MakeIrregularSwapData,    MakeUniformSwapData, MakeUnitarySwapData],  VMTestOperations --USING [all the operations]--,  VMTestScript,  VMTestSpace USING [GetHeap, GiveBackHeap];VMTestScriptImpl: PROGRAM  IMPORTS PostAuxDefs, ScriptOps, TryDefs, VMTestBackingStore, VMTestDatabase,    VMTestOperations, VMTestSpace  EXPORTS VMTestScript =  BEGIN  ------------  -- PUBLIC types, constants, variables:  ------------  -- PUBLIC procedures:  -- DefaultScript is a script of tests using VMTestOperations procedures  DefaultScript: PUBLIC PROCEDURE =    BEGIN OPEN VMTestOperations;        -- Make as many arrayPointers as needed    arrayPointer1: LONG POINTER;    heap: UNCOUNTED ZONE ¬ GetHeap[];    arrayPointer1 ¬ heap.NEW[ARRAY[0..3) OF WORD ¬ [5, 1, 4]];    Map[id: "irregular swap units, matching backing runs"L,      interval: [0, 10],      backed: TRUE,      runs:  MakeBackingData[DESCRIPTOR[arrayPointer1, 3]],      access: readWrite,      swapUnits: MakeIrregularSwapData[        DESCRIPTOR[arrayPointer1, 3]],      life: alive,      swappability: swappable];    Ticker[];    MakeReadOnly[[7, 15]];    Ticker[];    MakeWritable[[5, 2]];    Ticker[];    MakeResident[[0, 15], wait];    Ticker[];    MakeSwappable[[1, 4]];    Ticker[];    Touch[[0, 10], read];    Ticker[];    Unmap[page: 2];    Ticker[];    heap.FREE[@arrayPointer1];    heap ¬ GiveBackHeap[heap];    END;  -- Get a heap for script temporary storage  GetHeap: PUBLIC PROCEDURE RETURNS [UNCOUNTED ZONE] =    {RETURN[VMTestSpace.GetHeap[]]};  -- Get the number of pages in test VM.  GetTestVMSize: PUBLIC PROCEDURE RETURNS [Environment.PageCount] =    {RETURN[VMTestDatabase.GetTestVMSize[]]};  -- Return the heap acquired via GetHeap  GiveBackHeap: PUBLIC PROCEDURE [heap: UNCOUNTED ZONE] RETURNS [UNCOUNTED ZONE] =    {RETURN[VMTestSpace.GiveBackHeap[heap]]};  -- Log message when test is skipped due to prediction of nonRecoverable outcome.  LogNonRecoverable: PUBLIC PROCEDURE [doLog: BOOLEAN] =    {TryDefs.SetLoggingNonRecoverable[doLog]};  -- Construct the data structure used by (and known only to) the backing store  MakeBackingData: PUBLIC PROCEDURE [runSizes: VMTestScript.ArrayDescriptor]    RETURNS [backingData: VM.BackingStoreRuns] =    {RETURN[VMTestBackingStore.MakeBackingData[runSizes]]};  -- Construct swap unit data for irregular swap units  MakeIrregularSwapData: PUBLIC PROCEDURE [sizes: VMTestScript.ArrayDescriptor]    RETURNS [option: Space.SwapUnitOption] =    {RETURN[VMTestDatabase.MakeIrregularSwapData[sizes]]};  -- Construct swap unit data for uniform swap units  MakeUniformSwapData: PUBLIC PROCEDURE [size: Space.SwapUnitSize]    RETURNS [option: Space.SwapUnitOption] =    {RETURN[VMTestDatabase.MakeUniformSwapData[size]]};  -- Construct swap unit data for a unitary swap unit  MakeUnitarySwapData: PUBLIC PROCEDURE RETURNS [option: Space.SwapUnitOption] =    {RETURN[VMTestDatabase.MakeUnitarySwapData[]]};  -- Ticker is called after each test step  Ticker: PUBLIC PROCEDURE = {PostAuxDefs.Ticker[]};  ------------  -- PUBLIC SIGNALs and ERRORs: none  ------------  -- Initialization:  ScriptOps.RegisterScript[DefaultScript, "(default test script: type CR)"L];  END.LOG31-Aug-82 14:59:21   CAJ    Created file.