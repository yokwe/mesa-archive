-- BSMemCache.mesaDIRECTORYEnvironment, Space, VM, PageMap,DebugUsefulDefs;BSMemCache: PROGRAM   IMPORTS Environment, Space, VM, PageMap  EXPORTS DebugUsefulDefs   SHARES PageMap = PUBLIC {  OPEN DebugUsefulDefs;  InvalidAddress: ERROR [address: LONG POINTER] = CODE;    LongREAD: PROC [loc: LongClientSource] RETURNS [val: UNSPECIFIED] = {    LongCopyREAD[from: loc, nwords: 1, to: @val]};  LongCopyREAD: PROC [from: LongClientSource, nwords: CARDINAL, to: LocalDest] = {    access: Space.Access;    swapUnit: VM.Interval;    mempage: Environment.PageNumber = Environment.PageFromLongPointer[LOOPHOLE[from]];    [swapUnit,access,,] ¬ VM.GetSwapUnitAttributes[mempage ! Space.Error => ERROR InvalidAddress[LOOPHOLE[from]]];    IF PageMap.IsVacant[mempage] AND swapUnit = VM.nullInterval THEN ERROR InvalidAddress[LOOPHOLE[from]];    FOR i: CARDINAL IN [0..nwords) DO        to­ ¬ from­;      to ¬ to+1; from ¬ from+1;      ENDLOOP  };        Lengthen: PROC [a: ClientSource] RETURNS [LongClientDest] = {RETURN[LOOPHOLE[LONG[a]]]};  }.