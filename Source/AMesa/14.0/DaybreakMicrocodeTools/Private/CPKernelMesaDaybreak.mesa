-- Copyright (C) 1983, 1985  by Xerox Corporation. All rights reserved.-- Last edit by JAC	 7-Jun-85 12:26:52	copyrighted -- CPKernelMesaDaybreak.mesa, JoM    , 11-Jan-85 15:09:46-- from CPKernelMesa.mesa, HGM, 13-Nov-83  1:37:54DIRECTORY  Inline USING [BITAND],  String USING [AppendString],  CP USING [RReg, UReg],  CPKernel USING [Error, ReadOther, ReadRReg, ReadUReg],  CPKernelOps USING [CantWriteThatRegister],  CPSymbols USING [Error, Eval, Symbol];CPKernelMesaDaybreak: PROGRAM  IMPORTS Inline, String, CPKernel, CPKernelOps, CPSymbols  EXPORTS CPKernel =  BEGIN    ReadPC: PUBLIC PROCEDURE RETURNS [pc: CARDINAL] =    BEGIN    pc _ Inline.BITAND[Read["PC"L], 0FFH];    IF Read["uPCCross"L] # 0 AND pc # 0 THEN pc _ pc - 100H;    pc _ pc + (Read["UvPCpage"L]-Read["UvC"L]);    pc _ pc * 2;    pc _ pc + CPKernel.ReadOther[pc16];    END;      WritePC: PUBLIC PROCEDURE [pc: CARDINAL] =    BEGIN    CPKernelOps.CantWriteThatRegister[];    END;      Read: PROCEDURE [s: LONG STRING] RETURNS [CARDINAL] =    BEGIN    value: CPSymbols.Symbol;    value _ CPSymbols.Eval[s !      CPSymbols.Error =>        BEGIN	temp: STRING = [200];        String.AppendString[temp, "Can't find "L];        String.AppendString[temp, s];        String.AppendString[temp, " in symbol table: "L];        String.AppendString[temp, reason];	ERROR CPKernel.Error[temp];        END];    WITH value SELECT FROM      rReg => RETURN[CPKernel.ReadRReg[r]];      uReg => RETURN[CPKernel.ReadUReg[u]];      ENDCASE => ERROR CPKernel.Error["Unexpected type of register from Symbol table"L];    END;  END.