-- Copyright (C) 1982  by Xerox Corporation. All rights reserved. -- File: TmCharImpl.mesa    -- Last edit: JoM     7-May-85 13:17:43-- Last edit: DEG      26-Sep-84 20:25:38-- Last edit: ETN   16-Jul-82 13:07:21DIRECTORY  Ascii USING [CR, ControlZ],  Environment USING [Byte],  Stream USING [PutChar],  String USING [AppendNumber, AppendString],  TmAssembler,  TmFile USING [erStream, LogErrAndSrcLines, LogLine],  TmLabel USING [curLineLab, curLineNum],  TmModule;TmCharImpl: PROGRAM IMPORTS Stream, String, TmLabel, TmFile EXPORTS TmModule =  BEGIN OPEN TmAssembler;  -- global variables  char: CHARACTER;  -- current (most recently scanned) character  tB: LONG POINTER TO PACKED ARRAY [0..0) OF CHARACTER;  tCur, tMax: CARDINAL;  -- procedures  GetNextProcessChar: PUBLIC PROCEDURE RETURNS [charX: CHARACTER] =    BEGIN    squiggleLevel: CARDINAL ¬ 0;    DO  --main get character loop      char ¬ IF tCur >= tMax THEN EofChar ELSE tB[tCur];      tCur ¬ tCur + 1;      SELECT char FROM        Ascii.CR => NULL;        EofChar => {          IF squiggleLevel # 0 THEN            TmFile.LogErrAndSrcLines["End of file encountered within Comment "L];          RETURN[char];          };        Ascii.ControlZ => {          UNTIL char = Ascii.CR DO            -- insure that Bravo Looks don't get into Line Buffer            char ¬ IF tCur >= tMax THEN EofChar ELSE tB[tCur];            tCur ¬ tCur + 1;            IF char = EofChar THEN {              TmFile.LogErrAndSrcLines[                "End of file encountered within Bravo Look "L];              RETURN[char];              };            ENDLOOP;          };        '{ => squiggleLevel ¬ squiggleLevel + 1;        '} =>          IF squiggleLevel > 0 THEN squiggleLevel ¬ squiggleLevel - 1          ELSE TmFile.LogErrAndSrcLines["Unmatched comment character"L];        '_ => IF squiggleLevel = 0 THEN RETURN['¬]; -- backward compatibility	ENDCASE => IF squiggleLevel = 0 THEN RETURN[char];      ENDLOOP;  -- end main get character loop    END;  -- end GetNextProcessChar  LogSourceLine: PUBLIC PROCEDURE =    BEGIN    tLog: CARDINAL;    char: CHARACTER;    n: [1..100];    str: LONG STRING ¬ [100];    str.length ¬ 0;    String.AppendString[str, "At location: "L];    String.AppendString[str, TmLabel.curLineLab];    IF TmLabel.curLineNum # 0 THEN {      String.AppendString[str, " + "L];      String.AppendNumber[str, TmLabel.curLineNum, 16];      IF TmLabel.curLineNum > 9 THEN {        String.AppendString[str, "'x ("L];        String.AppendNumber[str, TmLabel.curLineNum, 10];        String.AppendString[str, ")"L];        };      };    TmFile.LogLine[str];    IF tCur = 0 THEN ERROR ELSE tLog ¬ tCur - 1;    FOR n IN [1..100] DO      IF tLog = 0 THEN EXIT;      IF tB[tLog ¬ tLog - 1] = Ascii.CR THEN {tLog ¬ tLog + 1; EXIT};      ENDLOOP;    FOR n IN [1..100] DO      char ¬ IF tLog >= tMax THEN EofChar ELSE tB[tLog];      SELECT char FROM        EofChar, Ascii.CR, Ascii.ControlZ => EXIT;        ENDCASE => Stream.PutChar[TmFile.erStream, char];      tLog ¬ tLog + 1;      ENDLOOP;    Stream.PutChar[TmFile.erStream, Ascii.CR];    Stream.PutChar[TmFile.erStream, Ascii.CR];    END;  -- end PrintTextLine  ScanInit: PUBLIC PROCEDURE [    segmentAddress: LONG POINTER, sourceLength: CARDINAL] =    BEGIN tCur ¬ 0; tB ¬ segmentAddress; tMax ¬ sourceLength; END;  -- of ScanInit proc  END...    -- Log  -- 16-Jul-82 13:07:43 - ETN        - TrinityMass Version 1.  -- 26-Sep-84 20:25:34 DEG     	Action: Added copyright notice and rebuild for 11.1 release.  --  7-May-85 13:17:43 - JoM     - Handle both old and new arrows.