-- Copyright (C) 1983  by Xerox Corporation. All rights reserved.-- Last edit by JAC	 7-Jun-85 12:26:52	copyrighted -- CPMI.mesa, HGM, 26-May-83 16:36:47-- This lives here (rather than in CP) to minimize clutter.-- Note that this is the virtural microinstruction.-- When it gets stored into CS, various fields are scrambled.DIRECTORY  CP USING [wordsPerBank];CPMI: DEFINITIONS =  BEGIN  Nibble: TYPE = CARDINAL [0..17B];    AD: TYPE = MACHINE DEPENDENT {   wrQ(0), noWr(1), aPass(2), wrB(3) };  AF: TYPE = MACHINE DEPENDENT {   rPlusS(0), sMinusR(1), rMinusS(2), rOrS(3), rAndS(4), notRAndS(5), rXorS(6), notRXorS(7) };  AS: TYPE = MACHINE DEPENDENT {   aq(0), ab(1), zq(2), zb(3), za(4), da(5), dq(6), dz(7) };  FS01: TYPE = MACHINE DEPENDENT {   dispBr(0), fyNorm(1), ioOut(2), byte(3) };  FS23: TYPE = MACHINE DEPENDENT {   fzNorm(0), nibble(1), uAddr(2), ioxIn(3) };  FX: TYPE = MACHINE DEPENDENT {   pCallRet0(0), pCallRet1(1), pCallRet2(2), pCallRet3(3),   pCallRet4(4), pCallRet5(5), pCallRet6(6), pCallRet7(7),   noop(8), loadRH(9), cinPC16(12), (17B) };  FY: TYPE = RECORD [    SELECT OVERLAID * FROM      n => [FYNorm],      b => [FYBr],      i => [FYOut],      d => [Nibble],      ENDCASE];  FYNorm: TYPE = MACHINE DEPENDENT {   exitKernel(0), enterKernel(1), clrIntErr(2), ibDisp(3),   mesaIntRq(4), loadStackP(5), loadIB(6), cycle(7),   noop(8), loadMap(9), refresh(10), push(11),   clrDPReq(12), bank(13), rawRef(14), clrKFlags(17B) };  FYBr: TYPE = MACHINE DEPENDENT {   negBr(0), zeroBr(1), nZeroBr(2), mesaIntBr(3),   pgCarryBr(4), carryBr(5), xRefBr(6), nibCarryBr(7),   xDisp(8), yDisp(9), xC2npcDisp(10),yioDisp(11),   xwdDisp(12), xHDisp(13), xLDisp(14), pgCrOvDisp(17B) };  FYOut: TYPE = MACHINE DEPENDENT {   iopOData(0), iopCtl(1), kOData(2), kCtl(3),   eOData(4), eICtl(5), dCtlFifo(6), dCtl(7),   dBorder(8), pCtl(9), mCtl(10), loadTStatus(11),   eOCtl(12), kCmd(13), loadTIData(14), pODta(17B) };  FZ: TYPE = RECORD [    SELECT OVERLAID * FROM      n => [FZNorm],      i => [FZIn],      d => [Nibble],      ENDCASE];  FZNorm: TYPE = MACHINE DEPENDENT {   refresh(0), iBPtrTo1(1), iBPtrTo0(2), cInPc16(3),   pop(5), push(6), altUaddr(7),   noop(8),   lRot0(12), lRot12(13), lRot8(14), lRot4(15) };     FZIn: TYPE = MACHINE DEPENDENT {   eIData(0), eStatus(1), kIData(2), kStatus(3),   kStrobe(4), mStatus(5), kTest(6), eStrobe(7),   iopIData(8), iopStatus(9), errNlBnStkp(10), rh(11),   ibNA(12), ib(13), ibLow(14), ibHigh(15) };     MI: TYPE = MACHINE DEPENDENT RECORD [    rA, rB: Nibble _ 0,    aS: AS _ aq,    aF: AF _ rOrS,    aD: AD _ noWr,    ep, cIn, enSU, mem: BOOLEAN _ FALSE,    fS01: FS01 _ fyNorm,    fS23: FS23 _ fzNorm,    fX: FX _ noop,    fY: FY _ [n[noop]],    fZ: FZ _ [n[noop]],    inia: [0..CP.wordsPerBank)];  END.    