-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- BSState.mesa  -- edited by LXR     on  16-Sep-83 11:45:29DIRECTORY  BackstopNub USING [ErrorType, Signal, SignalMsg],  BcdDefs USING [CTIndex, CTNull],  CPSwapDefs USING [ExternalStateVector],  File USING [File, nullFile],  PrincOps USING [LocalFrameHandle, StateVector],  PrincOpsExtras2 USING [LongGlobalFrameHandle, NullGlobalFrame],  LoadStateFormat USING [Index, nullIndex],  PSB USING [PsbIndex, PsbNull];BSState: DEFINITIONS =  BEGIN  gs: GSHandle;  GetGS: PROCEDURE RETURNS [gsh: GSHandle] = INLINE BEGIN RETURN[gs] END;  GSHandle: TYPE = LONG POINTER TO GState;  GState: TYPE = RECORD [    error: BackstopNub.ErrorType ¬ other,    loggingError: BOOLEAN ¬ FALSE,    signalmsg: BackstopNub.SignalMsg ¬ LOOPHOLE[NIL],    usermsg: LONG STRING ¬ NIL,    sigGF: PrincOpsExtras2.LongGlobalFrameHandle ¬ PrincOpsExtras2.NullGlobalFrame,    ready: BOOLEAN ¬ FALSE,    teledebugging: BOOLEAN ¬ FALSE,    ESV: CPSwapDefs.ExternalStateVector ¬ NULL,    StatePtr: LONG POINTER TO PrincOps.StateVector ¬ NIL,    StateVector: PrincOps.StateVector ¬ TRASH,    signal: BackstopNub.Signal ¬ LOOPHOLE[LONG[0]],    mds: CARDINAL ¬ 0,    localFrame: PrincOps.LocalFrameHandle ¬ NIL,    faultedProcess: PSB.PsbIndex ¬ PSB.PsbNull,    client, self: File.File ¬ File.nullFile];  Handle: TYPE = POINTER TO Context;  Context: TYPE = RECORD [    lContext: PrincOps.LocalFrameHandle ¬ NIL,    --gContext: PrincOpsExtras2.LongGlobalFrameHandle ¬ NIL,    pContext: PSB.PsbIndex ¬ PSB.PsbNull,    cti: BcdDefs.CTIndex ¬ BcdDefs.CTNull,    config: LoadStateFormat.Index ¬ LoadStateFormat.nullIndex];  --Stack: TYPE = RECORD [link: POINTER TO Stack, foo: DebugOps.Foo];  -- the following declarations so BSMemCache will compile  StatIndex: TYPE = {    cacheHits, cacheMisses, wordsRead, wordsWritten, bootfileSegments, vmSegments,    corePagesRead, diskPagesRead, corePagesWritten, diskPagesWritten,    retranmissions, proceedWaitRetranmissions, localFrames, globalFrames, psbs,    symbolTables, spare1, spare2};  Inc: PROCEDURE [x: StatIndex] = INLINE {};  Teledebugging: PROCEDURE RETURNS [BOOLEAN] = INLINE {RETURN[FALSE]};  END.