-- File: RingBuffer.mesa - last edit:-- Marzullo            29-Jan-87  9:46:48-- SMA                 15-Jan-87 11:37:03-- Copyright (C) 1987 by Mad Dog Enterprises. All rights reserved.DIRECTORY  Buffer USING [Buffer],  Space USING [Interval];RingBuffer: DEFINITIONS =  BEGIN  -- Creates a ring buffer. This can be an interval created long ago.  Create: PROCEDURE [interval: Space.Interval];  -- Clears (resets) the ring buffer state.  (For a new session).  Clear: PROCEDURE;  « Returns the logical indices (relative to the last Clear) of the packets     in the ring buffer, with the index of the first packet buffer written     into the ring buffer being zero. If ring buffer is empty,     stopIndex < startIndex. »  GetStatus: PROCEDURE RETURNS [startIndex, stopIndex: CARDINAL];  « Writes the packet buffer b at the current "end" of the ring buffer. "size"    is length of b­ in words. »  Write: PROCEDURE [b: Buffer.Buffer, size: CARDINAL];  « If start, reads the first packet buffer from the ring, else reads    next packet buffer.  »  ReadNext: PROCEDURE [start: BOOLEAN] RETURNS [b: Buffer.Buffer];  END...  LOG15-Jan-87 10:56:03  SMA  Created file.