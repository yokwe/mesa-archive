-- File: BufferDisplay.mesa - last edit:-- AOF                 27-Jul-87 15:10:48-- BKI                 25-Jun-87 17:42:59-- SMA                  4-Apr-86 16:05:44-- Copyright (C) 1985, 1986, 1987 by Xerox Corporation. All rights reserved. DIRECTORY  ArpaTypes USING [InternetAddress],  Buffer USING [Buffer],  Environment USING [Block],  Format USING [StringProc],  IEEE8023 USING [EthernetPacketType],  PupTypes USING [PupAddress],  System USING [NetworkAddress];BufferDisplay: DEFINITIONS =  BEGIN  -- Routines for displaying buffers.  OPEN FM: Format;  -- SIGNALS    LineOverflow: SIGNAL;    -- TYPES    Format: TYPE = {octal2, octal1, ebcdic, ascii, hex, decimal};  -- display format  -- Client proc called after each level of info is formatted.  Client is  -- responsible for resetting the length of his string!  OutputProc: TYPE = FM.StringProc;     -- VARIABLES AND CONSTANTS    minLineLen: CARDINAL = 250;  -- Enough to hold all header portions.      -- NS ROUTINES    -- Error header.  ErrPacket: PROC [b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];    -- Boot header.  BootPacket: PROC [b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc] RETURNS [data: LONG POINTER];    -- Echo header.    EchoPacket: PROC [b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];    -- Packet Exchange header.    ExchangePacket: PROC [b: Buffer.Buffer, line: LONG STRING,    format: Format, outProc: OutputProc];    -- packet encapsulation.    Encapsulation: PROC[b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];     -- Arpa ICMP header  ICMPPacket: PROC[b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];        -- NS IDP header.  IDPFields: PROC[b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];    -- The entire packet, all level 1 and 2 info treated as data.  Level0Packet: PROC [b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];    -- The entire packet, all level 2 info treated as data.  Level1Packet: PROC [b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];    -- The entire packet, headers at all levels formatted.   Level2Packet: PROC [b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];  -- The packet data.  Display of data begins at <start>.  PacketData: PROC [    format: Format, b: Buffer.Buffer, start: LONG POINTER, line: LONG STRING,    outProc: OutputProc];     -- The packet data.  Display of data begins at <start>.  PacketDataBlock: PROC [    format: Format, b: Buffer.Buffer, start: Environment.Block, line: LONG STRING,    outProc: OutputProc];    -- The entire protocol certification control packet.    PccPacket: PROC [b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];      -- The level 2 header portion of a routing info packet.  RoutingPacket: PROC [b: Buffer.Buffer, line: LONG STRING,    format: Format, outProc: OutputProc];    -- The data portion of a routing info packet (special format).  RoutingData: PROC [b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];    -- The level 2 header portion of an spp packet.  SppPacket: PROC [sysPkts: BOOLEAN, b: Buffer.Buffer, line: LONG STRING,    format: Format, outProc: OutputProc] RETURNS [data: BOOLEAN];      -- The level 2 header portion of a UBIPC packet.  Beware! outProc will be called  -- twice, so client is responsible for doing the right thing with the string.  UBIPCPacket: PROC [b: Buffer.Buffer, line: LONG STRING,    format: Format, outProc: OutputProc];      -- PUP ROUTINES    -- Pup level 1 header.  PupFields: PROC [b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];      -- ARPA ROUTINES    IPFields: PROC [b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];      TCPPacket: PROC [b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];      UDPPacket: PROC [b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];      -- OSI ROUTINES  OsiCltpPacket: PROC [b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];  OsiCotpPacket: PROC [b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];      OsiIPFields: PROC [b: Buffer.Buffer, line: LONG STRING, format: Format,    outProc: OutputProc];   -- PROCEDURES for do-it yourself types.    --Append an Arpa internet address  AppendArpaAddress: PROC [format: Format, s: LONG STRING,    iA: ArpaTypes.InternetAddress];      -- Appends the field with leading zero suppression.  AppendHeaderPiece: PROC [    format: Format, ptr: LONG POINTER, size: CARDINAL, --in words --    s: LONG STRING];      -- Appends the field with leading zero suppression.  AppendHeaderBlock: PROC [    format: Format, blk: Environment.Block, s: LONG STRING];      -- Append an NS network address.  AppendNSAddress: PROCEDURE [format: Format, s: LONG STRING,    nA: System.NetworkAddress];      -- Append a Pup network address.  AppendPupAddress: PROC [format: Format, s: LONG STRING,    pA: PupTypes.PupAddress];  -- UTILITY PROCEDURES for BufferDisplayImpls  FindBufferBodyAndType: PROC [b: Buffer.Buffer]     RETURNS [ptr: LONG POINTER, type: IEEE8023.EthernetPacketType];       END...  LOG 8-Jun-83 11:23:56  SMA  Created file. 2-May-84 10:03:40  SMA  Added UBIPCPacket.24-Oct-84 11:03:23  SMA  Added MessageExchPacket.28-Feb-85 12:14:05  SMA  Added IP/TCP stuff.25-Jun-87 17:42:59  BKI  Support OSI.28-Jun-87 13:28:21  AOF  Change EtherMAC => IEEE8023.      