-- File: [Igor]<Emerson>Tajo>Public>Tool.mesa last edited by--  SXW   	11-Jul-81 11:47:02--  PXK    ,	 8-Nov-82 17:53:29--  JGS,	18-Aug-81  9:07:57--  SXS   ,	10-Nov-81 16:23:22--  BXM  ,	19-Nov-81 10:24:50--  LXR    ,	 1-Sep-82 17:46:44--  AXD    ,	29-Sep-82 13:49:19-- Copyright (C) Xerox Corporation 1982. All rights reserved.DIRECTORY  FileSW USING [Access],  FormSW USING [ClientItemsProcType, Options],  TextSink USING [Handle],  TextSource USING [Handle, Position],  TextSW USING [Access, defaultOptions, Options],  ToolWindow USING [    AdjustProcType, nullBox, TransitionProcType],  Window USING [Box, Handle];Tool: DEFINITIONS =  BEGIN  -- Types:  MakeSWsProc: TYPE = PROCEDURE [window: Window.Handle];  State: TYPE = {inactive, tiny, active, default};  SWProc: TYPE = PROCEDURE [sw: Window.Handle];  SWType: TYPE = MACHINE DEPENDENT{vanilla(0), predefined(376B), last(377B)};  -- Constants:  DefaultHeight: INTEGER = ToolWindow.nullBox.dims.h;  -- Errors:  ErrorCode: TYPE = {    notATool, unknownSWType, swNotFound, invalidWindow, invalidParameters, other};  Error: SIGNAL [code: ErrorCode];  -- Create and destroy procedures:  Create: PROCEDURE [    name: LONG STRING, makeSWsProc: MakeSWsProc, initialState: State ¬ default,    clientTransition: ToolWindow.TransitionProcType ¬ NIL,    movableBoundaries: BOOLEAN ¬ TRUE,    initialBox: Window.Box ¬ ToolWindow.nullBox,    cmSection, tinyName1, tinyName2: LONG STRING ¬ NIL,    named: BOOLEAN ¬ TRUE]     RETURNS [window: Window.Handle];  IsIt: PROCEDURE [window: Window.Handle] RETURNS [BOOLEAN];  Info: PROCEDURE [window: Window.Handle]    RETURNS [      name, cmSection: LONG STRING, makeSWsProc: MakeSWsProc,      clientTransition: ToolWindow.TransitionProcType,      movableBoundaries: BOOLEAN];  Destroy, DestroySW: PROCEDURE [window: Window.Handle];  -- Subwindow creation procedures:  MakeDefaultSWs: PROCEDURE [    window: Window.Handle, messageLines: CARDINAL ¬ 0 -- no MsgSW-- ,    formProc: FormSW.ClientItemsProcType ¬ NIL,    formHeight: CARDINAL ¬ DefaultHeight, logName: LONG STRING ¬ NIL    -- no FileSW-- ] RETURNS [msgSW, formSW, logSW: Window.Handle];  MakeFileSW: PROCEDURE [    window: Window.Handle, name: LONG STRING, access: FileSW.Access ¬ append,    h: INTEGER ¬ DefaultHeight, allowTypeIn: BOOLEAN ¬ TRUE,     resetLengthOnNewSession: BOOLEAN ¬ FALSE,     resetLengthOnActivate: BOOLEAN ¬ FALSE]     RETURNS [sw: Window.Handle];  MakeFormSW: PROCEDURE [    window: Window.Handle, formProc: FormSW.ClientItemsProcType,    options: FormSW.Options ¬ [], h: INTEGER ¬ DefaultHeight,    zone: UNCOUNTED ZONE ¬ NIL]    RETURNS [sw: Window.Handle];  MakeMsgSW: PROCEDURE [    window: Window.Handle, lines: CARDINAL ¬ 1, h: INTEGER ¬ DefaultHeight]    RETURNS [sw: Window.Handle];  MakeStringSW: PROCEDURE [    window: Window.Handle, s: LONG POINTER TO LONG STRING ¬ NIL,    access: TextSW.Access ¬ append, h: INTEGER ¬ DefaultHeight,    expandable: BOOLEAN ¬ FALSE]    RETURNS [sw: Window.Handle];  MakeTextSW: PROCEDURE [    window: Window.Handle, source: TextSource.Handle, sink: TextSink.Handle ¬ NIL,    options: TextSW.Options ¬ TextSW.defaultOptions,     position: TextSource.Position ¬ 0, allowTypeIn: BOOLEAN ¬ TRUE]    RETURNS [sw: Window.Handle];  MakeTTYSW: PROCEDURE [    window: Window.Handle, name: LONG STRING, h: INTEGER ¬ DefaultHeight,    resetLengthOnNewSession: BOOLEAN ¬ FALSE]    RETURNS [sw: Window.Handle];  -- Unique SWType and Client created SW procedures:  AddThisSW: PROCEDURE [    window: Window.Handle, sw: Window.Handle, swType: SWType ¬ predefined,    nextSW: Window.Handle ¬ NIL, h: INTEGER ¬ Tool.DefaultHeight];  MakeClientSW: PROCEDURE [window: Window.Handle,     clientProc: PROCEDURE [sw: Window.Handle, clientData: LONG POINTER],    clientData: LONG POINTER,    swType: Tool.SWType, h: INTEGER ¬ Tool.DefaultHeight]     RETURNS [sw: Window.Handle];  DeleteThisSW: PROCEDURE [sw: Window.Handle];  NopSleepProc: SWProc;  NopWakeupProc: SWProc;  RegisterSWType: PROCEDURE [    adjust: ToolWindow.AdjustProcType ¬ SimpleAdjustProc,    sleep: SWProc ¬ NopSleepProc, wakeup: SWProc ¬ NopWakeupProc]    RETURNS [uniqueSWType: SWType];  SimpleAdjustProc: ToolWindow.AdjustProcType;  SwapSWs: PROCEDURE [    window, oldSW, newSW: Window.Handle, newType: SWType ¬ predefined]    RETURNS [oldType: SWType];  Transition: ToolWindow.TransitionProcType;  -- Log file management:  UnusedLogName: PROCEDURE [unused, root: LONG STRING];  END. -- Tool.mesa