-- TTYSW.Mesa - last edited by -- SXW   ,	 6-Jul-81 16:52:47 -- JGS,		19-Nov-81 14:15:38 -- PXK    ,	29-Sep-82 15:53:56 -- Mark,	Jul 2, 1980 5:42 PM -- BXM  ,	19-Nov-81 10:25:05 -- LXR    ,	15-Oct-82 12:30:08 -- Copyright (C) Xerox Corporation 1982. All rights reserved.DIRECTORY  Stream USING [Handle],  TextSW USING [Options],  TTY USING [CharStatus, EchoClass, Handle],  UserInput USING [StringProcType],  Window USING [Handle];TTYSW: DEFINITIONS =  BEGIN-- A TTYSW is built on a FileSW which is built on a TextSW.-- See these other interfaces for additional operations on TTYSW's.  defaultOptions: TextSW.Options = [    access: append,    menu: TRUE,    split: TRUE,    wrap: TRUE,    scrollbar: TRUE,    flushTop: FALSE,    flushBottom: FALSE];      LineOverflow: SIGNAL [s: LONG STRING] RETURNS [ns: LONG STRING];  Rubout: SIGNAL;    ErrorCode: TYPE = {notATTYSW, badTTYHandle, other};  Error: SIGNAL [code: ErrorCode];-- starting and stopping    Create: PROCEDURE [    sw: Window.Handle, backupFile: LONG STRING, s: Stream.Handle ¬ NIL,    newFile: BOOLEAN ¬ TRUE, options: TextSW.Options ¬ defaultOptions,    resetLengthOnNewSession: BOOLEAN ¬ FALSE];  Destroy: PROCEDURE [sw: Window.Handle];  DestroyFromBackgroundProcess: PROCEDURE [sw: Window.Handle];  EndOf: PROCEDURE [sw: Window.Handle] RETURNS [yes: BOOLEAN];  GetTTYHandle: PROCEDURE [sw: Window.Handle] RETURNS [tty: TTY.Handle];  IsIt: PROCEDURE [sw: Window.Handle] RETURNS [yes: BOOLEAN];    BackingStream: PROCEDURE [sw: Window.Handle] RETURNS [Stream.Handle];  SetBackingSize: PROCEDURE [sw: Window.Handle, size: LONG CARDINAL];  CharsAvailable: PROCEDURE [sw: Window.Handle] RETURNS [CARDINAL];  GetChar: PROCEDURE [sw: Window.Handle] RETURNS [CHARACTER];  NewLine: PROCEDURE [sw: Window.Handle] RETURNS [BOOLEAN];  PopAlternateInputStreams: PROCEDURE [sw: Window.Handle, howMany: CARDINAL ¬ 1];  PushAlternateInputStreams: PROCEDURE [sw: Window.Handle, stream: Stream.Handle];  PutBackChar: PROCEDURE [sw: Window.Handle, char: CHARACTER];  GetEcho: PROCEDURE [sw: Window.Handle] RETURNS [old: TTY.EchoClass];  SetEcho: PROCEDURE [    sw: Window.Handle, new: TTY.EchoClass] RETURNS [old: TTY.EchoClass];  AppendString: UserInput.StringProcType;  AppendChar: PROCEDURE [sw: Window.Handle, char: CHARACTER];    -- For formatted Write operations use the Put interface.    RemoveCharacter, RemoveCharacters: PROCEDURE [    sw: Window.Handle, n: CARDINAL ¬ 1];  GetString: PROCEDURE [    sw: Window.Handle, s: LONG STRING,     t: PROCEDURE [CHARACTER] RETURNS [TTY.CharStatus]];  GetEditedString: PROCEDURE [    sw: Window.Handle, s: LONG STRING,     t: PROCEDURE [CHARACTER] RETURNS [TTY.CharStatus]]    RETURNS [CHARACTER];  GetID, GetLine, GetPassword: PROCEDURE [sw: Window.Handle, s: LONG STRING];-- Clients of the following numerical input routines should-- catch String.InvalidNumber.    GetNumber: PROCEDURE [    sw: Window.Handle, default: UNSPECIFIED, radix: CARDINAL,     showDefault: BOOLEAN ¬ TRUE]    RETURNS [UNSPECIFIED];  GetOctal: PROCEDURE [sw: Window.Handle] RETURNS [UNSPECIFIED];  GetDecimal: PROCEDURE [sw: Window.Handle] RETURNS [INTEGER];  GetLongNumber: PROCEDURE [    sw: Window.Handle, default: LONG UNSPECIFIED, radix: CARDINAL,     showDefault: BOOLEAN ¬ TRUE]    RETURNS [LONG UNSPECIFIED];  GetLongOctal: PROCEDURE [sw: Window.Handle] RETURNS [LONG UNSPECIFIED];  GetLongDecimal: PROCEDURE [sw: Window.Handle] RETURNS [LONG INTEGER];  END.