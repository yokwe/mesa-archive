-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- EditOps.mesaDIRECTORY  TextSource;EditOps: DEFINITIONS = {  AbortProc: TYPE = PROC RETURNS [BOOLEAN];  AbortSearch: SIGNAL;    MatchType: TYPE = {literal, any, bol, closure, ccl, nccl};  -- literals, any character, beginning of line,    -- closure, character class, negated character class    MatchList: TYPE = LONG POINTER TO MatchListObject;  MatchListObject: TYPE = RECORD [    length: CARDINAL ¬ 0,    list: SEQUENCE maxlength: CARDINAL OF MatchElement];      MatchElement: TYPE = RECORD[    startPos, endPos : TextSource.Position ¬ nullPosition,    class: SELECT type: MatchType FROM      literal => [lit: LONG STRING ¬ NIL],      any, bol => NULL,      closure => [type: ClosureType ¬ long],      ccl, nccl => [cc: CharClass ¬ NIL],      ENDCASE    ];      ClosureType: TYPE = {short, long};    CharClass: TYPE = LONG POINTER TO CharClassObject;  CharClassObject: TYPE = RECORD [    random: LONG STRING ¬ NIL,    length: CARDINAL ¬ 0,    subclass: SEQUENCE maxlength: CARDINAL OF RangeBody];       RangeBody: TYPE = RECORD [    lower, upper: CHARACTER ¬ CHARACTER.LAST];      nullPosition: TextSource.Position = TextSource.Position.LAST;    Match: PROC[source: TextSource.Handle, pat: MatchList,    startPos,lastPlusOne: TextSource.Position, abort: AbortProc,    ignoreCase: BOOLEAN ¬ FALSE, matchWord: BOOLEAN ¬ FALSE]     RETURNS [match: BOOLEAN, start,end: TextSource.Position];  MakePat: PROC[arg: LONG STRING, start: CARDINAL, oldPat: MatchList ¬ NIL,    treatAsLiteral: BOOLEAN ¬ FALSE]    RETURNS[ok: BOOLEAN, pat: MatchList];  FreePat: PROC[pat: MatchList] RETURNS [nil: MatchList];  }.