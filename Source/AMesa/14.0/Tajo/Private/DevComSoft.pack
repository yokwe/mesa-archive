-- [IGOR]<Emerson>Tajo>Private>DevComSoftMinusHeapImpl.pack edited by:--   SXS   ,	18-Sep-81 18:37:15--   BXM  ,	14-Nov-81 17:45:50--   PXK    ,	31-Dec-81 11:51:09--   LXR    ,	11-Jan-83 17:40:06--   DWE    ,	 6-May-83 14:08:44--   RXJ     ,	31-Jan-84 21:03:26--   BJD    ,	11-Feb-85 16:29:59DevComSoftMinusHeapImplCode: SEGMENT = {  RealCommonOps: CODE PACK = {EXCEPT[MAIN];    RealControl[ENTRY VECTOR, TFAdd, TFSub, TFMul, TFDiv];    IeeeFloatA EXCEPT [FDiv, Divide]};    RealOtherOps: CODE PACK = {EXCEPT[MAIN];    RealControl EXCEPT RealCommonOps, RealFns, RealInit;    IeeeFloatA[FDiv, Divide];    IeeeFloatB EXCEPT RealInit};    RealUtils: CODE PACK = {EXCEPT[MAIN];    IeeeUtil EXCEPT RealInit;    IeeeMode EXCEPT RealInit};    RealFns: CODE PACK = {    RealControl[TFSqRt];    RealFnsImpl EXCEPT[MAIN]};    RealIOA: CODE PACK = {    IeeeIOA};  RealIOB: CODE PACK = {    IeeeIOB};    RealInit: CODE PACK = {    MAIN OF RealCommonOps, RealOtherOps, RealUtils, RealFns;    RealControl[InitReals]};     Herald: CODE PACK = {      StringsImplA[ENTRY VECTOR, AppendChar, AppendString];       StringsImplB[ENTRY VECTOR, AppendNumber];      TimeImpl[ENTRY VECTOR, CheckDateGE, Current, DivideTime, Pack-- added--, TimeParameters, Unpack];      }; -- for Herald time painting  EditorFileToolHot: CODE PACK = {      StringsImplA[AppendCharAndGrow, AppendStringAndGrow, AppendSubString, CopyToNewString, Equal, Copy, Equivalent, ExpandString, Replace];      TimeImpl[Append];      };   StringsRemainder: CODE PACK = {      StringsImplA EXCEPT Herald, EditorFileToolHot, FormatCommon;      StringsImplB EXCEPT Herald, EditorFileToolHot, FormatCommon;      };    FormatCommon: CODE PACK = {      FormatImpl[ENTRY VECTOR, Block, Char, CR, Date, FormatNumber, Line, LongNumber, Number];      };    TTYHot: CODE PACK = {      TTYImpl[ENTRY VECTOR, ListenForInput, GetChar, PutChar, GetEditedString, OutString, BlockToQR, GetF, IsEmpty];      };    FileStream: CODE PACK = {      FileStreamImpl;      };    FloppyCommon: CODE PACK = {EXCEPT[MAIN];      FloppyImplPublicA EXCEPT Herald, EditorFileToolHot, FormatCommon, TTYHot, FloppyCold;      FloppyImplPublicC EXCEPT Herald, EditorFileToolHot, FormatCommon, TTYHot, FloppyCold;      FloppyImplPrivate EXCEPT Herald, EditorFileToolHot, FormatCommon, TTYHot, FloppyCold;      };    FloppyCold: CODE PACK = {      MAIN OF FloppyCommon;      FloppyImplPrivate [GetBootFileAddress];      FloppyImplPublicB EXCEPT Herald, EditorFileToolHot, FormatCommon, TTYHot;      FloppyImplPublicD;      };           Crunch: CODE PACK = {-- seven pages      FormatImpl EXCEPT Herald, EditorFileToolHot, FormatCommon, TTYHot;      TimeImpl EXCEPT Herald, EditorFileToolHot, FormatCommon, TTYHot;      TTYImpl EXCEPT Herald, EditorFileToolHot, FormatCommon, TTYHot;      };    MemoryStream: CODE PACK = {      MemoryStreamImpl;      };    Unformat: CODE PACK = {      Unformatter;      };    };    DevComSoftMinusHeapImplFrames: FRAME PACK = {    FileStreamImpl;    FormatImpl;    MemoryStreamImpl;    RealImpl;    StringsImplA;    StringsImplB;    TimeImpl;    TTYImpl;    Unformatter};FloppyFrames: FRAME PACK = {FloppyImpl};-- Copyright (C) 1984, 1986  by Xerox Corporation. All rights reserved.-- SOSP83HeapImpl.pack     27-Jun-86 18:33:22 by RSVHeapCode: SEGMENT = {  HeapHot1: CODE PACK = {    SOSP83HeapNormal [ENTRY VECTOR,      MakeNormalNode, FreeNormalNode,      Insert, Delete, Demote, Allocate, Release, BetterFit]};        HeapHot2: CODE PACK = {    SOSP83HeapGeneric [ENTRY VECTOR,      MakeLargeNode, MakeSpace, MakeNode, FreeNode];    SOSP83HeapNormal [ExpandNormalHeapInternal]};        HeapHot3: CODE PACK = {    SOSP83HeapUniform [ENTRY VECTOR,      MakeUniformNode, MakeUniformNodeEntry, FreeUniformNode, FreeUniformNodeEntry, ExpandUniformHeapInternal, InitializeUniformBlock, AllocatedObjectSize, ExpandUniformHeap]};        HeapCatch1: CODE PACK = {    SOSP83HeapNormal [CATCH CODE];    SOSP83HeapGeneric [CATCH CODE]};  HeapCatch2: CODE PACK = {    SOSP83HeapUniform [CATCH CODE]};  HeapCool: CODE PACK = {    SOSP83HeapNormal [      ExpandNormalHeap, FlushNormalHeap, IsNormalEmpty, PruneNormalHeap, Unmap,      DeleteAndUnmap, CheckTree];    SOSP83HeapGeneric [      Expand, Flush, Prune, CheckOwner, OwnerChecking, SetChecking,      EnumerateSegments, EnumerateLargeNodes,      NormalAttributes, UniformAttributes,      GetAttributes, NewGetAttributes, PagesForLargeNode,      DeleteAndUnmap, Unmap];    SOSP83HeapUniform[FlushUniformHeap, IsUniformEmpty]};  HeapSpecial: CODE PACK = {    SOSP83HeapGeneric [      MakeResident, MakeResidentHeap, MakeSwappable, MakeSwappableHeap]};  MdsHeaps: CODE PACK = {    SOSP83HeapMDS EXCEPT HeapCreateDelete, Initialization;    SOSP83HeapGeneric [MakeMDSNode, FreeMDSNode]};  HeapCreateDelete: CODE PACK = {    SOSP83HeapNormal [Create, NewCreate];    SOSP83HeapGeneric [Delete, DeleteHeap];    SOSP83HeapUniform [CreateUniform, NewCreateUniform];    SOSP83HeapMDS [CreateMDS, DeleteMDS, IsEmptyMDS, NewCreateMDS]};  Initialization: CODE PACK ={    SOSP83HeapGeneric[InitializeHeap, MAIN];    SOSP83HeapNormal[MAIN, Promote];    SOSP83HeapUniform[MAIN];    SOSP83HeapMDS[MAIN]};    };HeapFrames: FRAME PACK = {SOSP83HeapGeneric; SOSP83HeapNormal; SOSP83HeapUniform; SOSP83HeapMDS};-- LOG-- 31-Jan-84  8:45:25  Johnsson	 Created file.-- 27-Jun-86 18:33:22  RSV       Added SOSP83 to each file name.  Added IsUniformEmpty, IsNormalEmpty, and IsEmptyMDS.-- [IGOR]<Emerson>Tajo>Private>DevComSoftMerge.pack edited by:--   JGS on	 2-Feb-83 17:14:21--   DWE     on	 6-May-83 14:09:58DevComSoftCode: SEGMENT MERGES DevComSoftMinusHeapImplCode, HeapCode = {  RealCommonOps;  RealOtherOps;  RealUtils;  RealFns;  RealIOA;  RealIOB;  RealInit;  Herald;  EditorFileToolHot;  StringsRemainder;  FormatCommon;  TTYHot;  FileStream;  FloppyCommon;  FloppyCold;   Crunch;  MemoryStream;  Unformat;  HeapHot1;  HeapHot2;  HeapHot3;  HeapCatch1;  HeapCatch2;  HeapSpecial;  HeapCool;   MdsHeaps;  HeapCreateDelete;  Initialization};    DevComSoftFrames: FRAME PACK MERGES DevComSoftMinusHeapImplFrames, HeapFrames.