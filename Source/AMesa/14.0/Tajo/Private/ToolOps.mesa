-- Copyright (C) 1981, 1982, 1983  by Xerox Corporation. All rights reserved. -- File: ToolOps.mesa edited:-- SXW   ,	 9-Jul-81 18:39:05-- Mark,	Jun 16, 1980 3:11 PM-- SXE  ,	Oct 2, 1980 5:29 PM-- JGS    ,	17-Aug-81 10:47:42-- SXS   ,	21-Sep-82 14:15:32-- PXK    ,	12-Nov-82 12:16:12-- BGY     ,	18-Oct-82 12:21:15-- AXD    ,	12-Jan-83 18:23:11DIRECTORY  Context: TYPE USING [Type],  Menu: TYPE USING [EnumerateFor],  TIP: TYPE USING [NotifyProc],  Tool: TYPE USING [MakeSWsProc, SWProc, SWType],  ToolWindow: TYPE USING [    AdjustProcType, DisplayProcType, State, TransitionProcType],  Window: TYPE USING [Handle];ToolOps: DEFINITIONS =  BEGIN  -- Types  ContextHandle: TYPE = LONG POINTER TO ContextObject;  ContextObject: TYPE = RECORD [    name, cmSection: LONG STRING,    makeSWsProc: Tool.MakeSWsProc,    clientTransition: ToolWindow.TransitionProcType,    sws: LONG POINTER TO SWSequence,    boxes: BSHandle,    w,oldH: INTEGER ,    moveBdry, runningMakeSWsProc, named: BOOLEAN];      SWSequence: TYPE = RECORD [SEQUENCE length: CARDINAL OF SWRecord];  SWRecord: TYPE = RECORD [sw: Window.Handle, type: Tool.SWType];    BSHandle: TYPE = LONG POINTER TO BoxSequence;  BoxSequence: TYPE = RECORD [SEQUENCE length: CARDINAL OF SWBox];  SWBox: TYPE = RECORD [h,y:INTEGER];    -- Interface variables  context: READONLY Context.Type;  nextSWType: READONLY Tool.SWType;  -- Constants  formSW: Tool.SWType = vanilla.SUCC;  fileSW: Tool.SWType = formSW.SUCC;  msgSW: Tool.SWType = fileSW.SUCC;  ttySW: Tool.SWType = msgSW.SUCC;  stringSW: Tool.SWType = ttySW.SUCC;  textSW: Tool.SWType = stringSW.SUCC;  firstFree: Tool.SWType = textSW.SUCC;  undefined: Tool.SWType = predefined.PRED;  bdryFudge: INTEGER = 5;  bdryHeight: INTEGER = 2*bdryMargin + bdryLineWidth;  bdryLineWidth: INTEGER = 1;  bdryMargin, swMargin: INTEGER = 3;  -- Procedures  DefaultAdjustProc: ToolWindow.AdjustProcType;  FindType: PROCEDURE [sw: Window.Handle] RETURNS [swType: Tool.SWType];  InitMonitorData: PROCEDURE;  MoveBoundaryDisplayProc: ToolWindow.DisplayProcType;  TIPMe: TIP.NotifyProc;  RemoveMenus: PROCEDURE [window: Window.Handle, which: Menu.EnumerateFor];  AdjustProc: PROC [Tool.SWType] RETURNS [ToolWindow.AdjustProcType];  SleepProc, WakeupProc: PROC [Tool.SWType] RETURNS [Tool.SWProc];    END. -- ToolOps.mesa