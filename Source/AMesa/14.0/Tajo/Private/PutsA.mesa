-- Copyright (C) 1981, 1982, 1983  by Xerox Corporation. All rights reserved. -- File: PutsA.mesa - last edit:-- SXW   :	14-Jul-81 14:46:14-- JGS: 	19-Aug-81  7:22:58-- PXK    :	11-Feb-83 15:11:57-- Mark:	4-Jun-81 12:46:14-- HGM:		28-Jan-82 14:59:03-- AXD    :	15-Jul-83 18:50:57  DIRECTORY  Ascii USING [CR],  Environment USING [Block],  Format USING [    Blank, Block, Char, Date, DateFormat, DecimalFormat, HostNumber,    LongNumber, LongOctal, NetFormat, NetworkAddress, NetworkNumber, Number,    NumberFormat, Octal, SocketNumber, StringProc, SubString],  Heap: TYPE USING [systemZone],  Put USING [],  Selection USING [Convert],  String USING [SubString],  System USING [HostNumber, NetworkAddress, NetworkNumber, SocketNumber],  Time USING [Packed],  UserInput USING [GetDefaultWindow, StringOut],  Window USING [Handle];  PutsA: PROGRAM IMPORTS Format, Heap, Selection, UserInput EXPORTS Put =  BEGIN  -- Public procedures    Blank, Blanks: PUBLIC PROC [h: Window.Handle, n: CARDINAL ¬ 1] = {    Format.Blank[OutputString, n, h]};  Block: PUBLIC PROC [h: Window.Handle, block: Environment.Block] = {    Format.Block[OutputString, block, h]};  Char: PUBLIC PROC [h: Window.Handle, char: CHARACTER] = {    Format.Char[OutputString, char, h]};      CR: PUBLIC PROC [h: Window.Handle] = {    Format.Char[OutputString, Ascii.CR, h]};  CurrentSelection: PUBLIC PROC [h: Window.Handle] = {     s: LONG STRING ¬ Selection.Convert[string];    IF s # NIL THEN {OutputString[s, h]; Heap.systemZone.FREE[@s]}};      Date: PUBLIC PROC [    h: Window.Handle, pt: Time.Packed, format: Format.DateFormat ¬ noSeconds] = {    Format.Date[proc: OutputString, pt: pt, format: format, clientData: h]};      Decimal: PUBLIC PROC [h: Window.Handle, n: INTEGER] = {    Number[h, n, Format.DecimalFormat]};      Line: PUBLIC PROC [h: Window.Handle, s: LONG STRING] = {    Text[h, s]; CR[h]};      LongDecimal: PUBLIC PROC [h: Window.Handle, n: LONG INTEGER] = {    LongNumber[h, n, Format.DecimalFormat]};  LongNumber: PUBLIC PROC [    h: Window.Handle, n: LONG UNSPECIFIED, format: Format.NumberFormat] = {    Format.LongNumber[OutputString, n, format, h]};      LongOctal: PUBLIC PROC [h: Window.Handle, n: LONG UNSPECIFIED] = {    Format.LongOctal[OutputString, n, h]};      LongString, Text: PUBLIC PROC [h: Window.Handle, s: LONG STRING] = {    OutputString[s, h]};  Number: PUBLIC PROC [    h: Window.Handle, n: UNSPECIFIED, format: Format.NumberFormat] = {    Format.Number[OutputString, n, format, h]};      Octal: PUBLIC PROC [h: Window.Handle, n: UNSPECIFIED] = {    Format.Octal[OutputString, n, h]};      LongSubString, SubString: PUBLIC PROC [    h: Window.Handle, ss: String.SubString] = {    Format.SubString[OutputString, ss, h]};      -- Network related procedures  NetFormat: TYPE = Format.NetFormat;    HostNumber: PUBLIC PROC [    h: Window.Handle ¬ NIL, host: System.HostNumber, format: NetFormat] = {    Format.HostNumber[OutputString, host, format, h]};  NetworkAddress: PUBLIC PROC [    h: Window.Handle ¬ NIL, address: System.NetworkAddress,  format: NetFormat ¬ octal] = {    Format.NetworkAddress[OutputString, address, format, h]};      NetworkNumber: PUBLIC PROC [    h: Window.Handle, networkNumber: System.NetworkNumber, format: NetFormat] = {    Format.NetworkNumber[OutputString, networkNumber, format, h]};       SocketNumber: PUBLIC PROC [    h: Window.Handle, socketNumber: System.SocketNumber, format: NetFormat] = {    Format.SocketNumber[OutputString, socketNumber, format, h]};     -- Private procedure      OutputString: Format.StringProc = {    UserInput.StringOut[      window:        IF clientData # NIL THEN clientData ELSE UserInput.GetDefaultWindow[],      string: s]};      -- Mainline Code  END.