-- File WiskSupport.list-- Created by Packager from WiskSupport.pack on  7-Jan-88  2:30:49WiskSupport: SEGMENT =  BEGIN  WSEntry: CODE PACK =    BEGIN    AtomicProfileImpl[      ENTRY VECTOR];    CmFilesA[      ENTRY VECTOR];    ControlUtilsA[      ENTRY VECTOR];    ConvertDataImpl[      ENTRY VECTOR];    DateImpl[      ENTRY VECTOR];    FileNameImpl[      ENTRY VECTOR];    ProfilesA[      ENTRY VECTOR];    ProfilesB[      ENTRY VECTOR];    StringLookUpsA[      ENTRY VECTOR];    TIPTableBuilder[      ENTRY VECTOR];    TIPTableWriter[      ENTRY VECTOR];    RefTabImpl[      ENTRY VECTOR];    GPMImpl[      ENTRY VECTOR];    TokensA[      ENTRY VECTOR];    TokensB[      ENTRY VECTOR];    CascadeNub[      ENTRY VECTOR];    END;  CascadeNubHot: CODE PACK =    BEGIN    CascadeNub[      GetToolDefault, ChangeITDS, SetToolDefault, AppendVolumeAndID, GetNameAndDisplayMessage,       MyGetStream, LoadBcds, CloseCommandVolume, LocateCommandVolume, OpenCommandVolume,       ProcessArg, FindSlash, ProcessSwitches, SeparateLocalSwitches, GetLoadee,       CopyFile, MakeFileName];    END;  CascadeNubCold: CODE PACK =    BEGIN    ConvertDataImpl[      MAIN, ConvertDataFiles, GetDirectoryStream, ProcessCommandFile, GetDataFile,       CopyFile, GetFileProperties, CATCH CODE];    CascadeNub[      MAIN, NubMessage, Cough, Run, RunCascadeNub,       CATCH CODE];    END;  CmFilesA: CODE PACK =    BEGIN    CmFilesA[      GetChar, Line, FileSystemEvent, AbsToRep, RepToAbs,       Validate, FreeString, Close, Open, FindSection,       NextItem, ReadLineOrToken, TitleMatch, IsUserDotCm, CheckHints,       DoneReading, ReadLine, TrySpecific, ReadName, FindItem,       GobbleRestOfLine, NextValue, UserDotCmOpen, UserDotCmLine, IsCommentLine,       CmFileQuote, myRelease, FreeList];    END;  ControlUtilsA: CODE PACK =    BEGIN    ControlUtilsA[      SetState, StartPhase1, SetTimeIfNecessary, CreateSupervisorSubsystemHandles, InitRoot,       StartPhase2, StartToolManager, NopNoteSWs, NopRemoveSWs, SetToolDriverRunning,       NoteSWs, RemoveSWs, SetSWsProcs, MenuMCR, SelectionAsToken];    END;  DateImpl: CODE PACK =    BEGIN    DateImpl[      StringToPacked, PackedToString];    END;  NSErrorMsg: CODE PACK =    BEGIN    NSErrorMsgImpl[      ENTRY VECTOR, MAIN, PostCourierError, PostNSFileError, PostCHReturnCode,       PostAuthCallProblem, PostAuthenticationError, CATCH CODE];    NSErrorMsgStrings;    END;  FileNameImpl: CODE PACK =    BEGIN    FileNameImpl[      IsFinalVersionSeparator, AllocVFN, UnpackFilename, FreeVFN, ResetVFN,       PackFilename, Maxc, NormalizeVFN, FreeFilename, SetRemoteName,       GetRemoteName];    END;  GPMImpl: CODE PACK =    BEGIN    GPMImpl[      GetStack, DumpToStream];    END;  GPMImplCold: CODE PACK =    BEGIN    GPMImpl[      MAIN, Open, InitStack, Close, CATCH CODE];    END;  ProfilesA: CODE PACK =    BEGIN    ProfilesA[      GetDefaultDomain, GetDefaultOrganization, GetDefaultRegistry, GetLibrarianNames, GetLibrarian,       GetUser, Qualify, SetInitialToolStateDefault, SetPlace, SetBalanceBeamChoice,       SetSetPositionBalanceBeamChoice, SetCaretShape, SetDebugging, SetDefaultDomain, SetDefaultOrganization,       SetDefaultRegistry, SetFileServerProtocol, SetLibrarian, MaybeReplace, SetSwapCtrlAndCommand,       GetName, SetUser, MakeID, GetID, StartProfiles];    END;  ProfilesB: CODE PACK =    BEGIN    ProfilesB[      StartingProcess, DoneWithProcess, AboutToSwap, Swapping, ProcessUserCm,       ProcessUserCmInternal, ProcessInitialCommandLine, ProcessSystemSection, LoadFonts, SetSearchPath,       ProcessLibrarianSection, Init];    END;  AtomicProfileImpl: CODE PACK =    BEGIN    AtomicProfileImpl[      ScanForItem, KillItems, DeleteItem, SetString, ScanForItemEntry,       StuffString, SetStrProc, SetStringEntry, Notify, GetString,       DoneWithString, EnumerateString, SetLONGINTEGER, SetLONGINTEGEREntry, GetLONGINTEGER,       SetBOOLEAN, SetBOOLEANEntry, GetBOOLEAN];    END;  RefTabImpl: CODE PACK =    BEGIN    RefTabImpl[      Create, GetSize, Fetch, Store, Insert,       Delete, Pairs, GetNext];    END;  StringLookUpsA: CODE PACK =    BEGIN    StringLookUpsA[      InTable, InitialInternal, UsingGenerator, UsingGeneratorWithBuffer, Initial,       IsPrefix];    END;  TIPTableBuilder: CODE PACK =    BEGIN    TIPTableBuilder[      StringProc, Store, Key, Concatenate, TriggerStmt,       CheckForUniqueSymbol, TriggerChoiceSeries, EnableStmt, EnableChoiceSeries, FinalChoice,       TriggerChoice, EnableChoice, TriggerTerm, Expression, EnableTerm,       TimeOut, KeyEnableList, Statement, ParseResults, ResultItems,       ResultItem, Reverse];    END;  TIPBuildTable: CODE PACK =    BEGIN    TIPTableBuilder[      CreateFile, BuildTable];    END;  TIPParse: CODE PACK =    BEGIN    TIPTableBuilder[      InitScanner, ParseTable, OptionList, GenerateTable, DoubleDef];    END;  TIPGetChar: CODE PACK =    BEGIN    TIPTableBuilder[      GetChar, OpenErrorLog];    GPMImpl[      GetChar, GetText, Load, NextCh, Find,       EndFn];    END;  TIPScanner: CODE PACK =    BEGIN    TIPTableBuilder[      GetString, Scanner, Lookup];    GPMImpl[      GetIndex];    END;  TIPError: CODE PACK =    BEGIN    TIPTableBuilder[      Error, ErrorFinish];    END;  TIPMakeTable: CODE PACK =    BEGIN    TIPTableBuilder[      MakeTable];    END;  TIPTableWriter: CODE PACK =    BEGIN    TIPTableWriter[      WriteTable];    END;  TokensA: CODE PACK =    BEGIN    TokensA[      GetString, FreeString, Boolean, Skip, WhiteSpace,       Number, Filtered, NumberFilter, Decimal, Octal,       LongNumber, LongDecimal, LongOctal, Item, WindowBox,       MaybeQuoted, Brackets, StringToHandle, Alphabetic, FreeStringHandle,       NonWhiteSpace, Quote, AlphaNumeric, Delimited, FileName,       Line, Numeric, Switches, StringGetChar, FreeTokenString];    END;  TokensB: CODE PACK =    BEGIN    TokensB[      HostNumber, NetworkAddress, NetworkNumber, SocketNumber, NetFilter];    END;  WSColdA: CODE PACK =    BEGIN    StringLookUpsA[      MAIN, CATCH CODE];    TIPTableBuilder[      MAIN, CATCH CODE];    TIPTableWriter[      MAIN, CATCH CODE];    RefTabImpl[      MAIN, CATCH CODE];    TokensA[      MAIN, CATCH CODE];    TokensB[      MAIN, CATCH CODE];    END;  WSColdB: CODE PACK =    BEGIN    AtomicProfileImpl[      MAIN, CATCH CODE];    CmFilesA[      MAIN, CATCH CODE];    ControlUtilsA[      MAIN, Quit, TurnOff, CATCH CODE];    DateImpl[      MAIN, CATCH CODE];    FileNameImpl[      MAIN, CATCH CODE];    ProfilesA[      MAIN, CATCH CODE];    ProfilesB[      MAIN, CATCH CODE];    END;  END;FramesA: FRAME PACK =  BEGIN  CascadeNub;  CmFilesA;  ControlUtilsA;  ConvertDataImpl;  DateImpl;  FileNameImpl;  NSErrorMsgImpl;  NSErrorMsgStrings;  END;FramesB: FRAME PACK =  BEGIN  ProfilesA;  ProfilesB;  AtomicProfileImpl;  RefTabImpl;  StringLookUpsA;  TIPTableBuilder;  TIPTableWriter;  TokensA;  TokensB;  GPMImpl;  END;