-- WindowCode.pack, last edited by-- AXD    	 6-Jun-84 16:00:35-- DWR    	18-Feb-85 18:11:26WindowCode: SEGMENT = BEGIN    WindowsHot: CODE PACK = {    RectangleImpl[ENTRY VECTOR, Alloc, Free, FreeRecList];    WindowImplA[ENTRY VECTOR, EnumerateTree, MakeContext];    WindowImplB[ENTRY VECTOR, GetBox, BitmapPlaceToWindowAndPlace];    WindowImplC[ENTRY VECTOR];    WindowFonts[ENTRY VECTOR]};    RecUtils: CODE PACK = {    RectangleImpl[      WindowToScreenBox, ScreenToWindowBox, Convert, ConvertBox, Copy, Shift,      SimpleAppend, Coalesce]};    Biters: CODE PACK = {    RectangleImpl[      Bite, BiteOutSiblings, Append, Intersect, BiteOut, CheckOldBites,      Visible, ClipBox, CleanInvalid];    WindowImplA[ResetCache]};    TreeBiter: CODE PACK = {RectangleImpl[BiteOutSiblingsTheHardWay]};    ValPlusSSSS: CODE PACK = {    WindowImplA[      Validate, ValidateTree, DoneDisplay, SetUpBadPhosphorList, ShouldDisplay,      EnumerateInvalidBoxes, InvalidateBox, InvalidateList, WhitenRecList,      InvalidateTree, BadPhosphorToInvalid, TakeMyNameOffBadPhosphors];    RectangleImpl[CheckForLeaks, Disjoint];    WindowImplA[Shift, Slide, Stack, SlideAndStack, SlideAndSize,      SlideAndSizeAndStack, StackInternal];      RectangleImpl[Blt]};      InsertAndRemove: CODE PACK = {    WindowImplA[      InsertIntoTree, InsertIntoTreeLocked, RemoveFromTree]};  Unders: CODE PACK = {    WindowImplA[AssertUnobscured];    WindowImplB[      SetBitmapUnder, GetBitmapUnder, Float, FloatLocked, ShiftUnder,      WordsForBitmapUnder]};    DisplayOther: CODE PACK = {    WindowImplA[GetRecList, FreeBadPhosphorList];    WindowImplC[      White, SpWhite, Black, SpBlack, Invert, SpInvert, Gray,      Bitmap, BitAddressFromPlace, ResolveBlock];    WindowImplD[ENTRY VECTOR, DisplayRootWindow]};    Traj: CODE PACK = {WindowImplC[Trajectory]};        GrayAndBmMain: CODE PACK = {WindowImplC[SpBitmap, SpGray]};    TextMain: CODE PACK = {    WindowImplC[Character, Text, SpCharacter, SpBlock, MeasureBlock, Block]};    WindowMisc: CODE PACK = {    WindowFonts EXCEPT [MAIN, CATCH CODE, ENTRY VECTOR];    WindowImplB EXCEPT WindowsHot, Unders, [MAIN, CATCH CODE];    WindowImplD EXCEPT DisplayOther, GrayAndBmMain, [      MAIN, CATCH CODE]};    Catch: CODE PACK = {    CATCH CODE OF      WindowsHot, RecUtils, Biters, TreeBiter, ValPlusSSSS, InsertAndRemove,      Unders, DisplayOther, Traj, GrayAndBmMain, TextMain, WindowMisc};      Main: CODE PACK = {    MAIN OF      WindowsHot, RecUtils, Biters, TreeBiter, ValPlusSSSS, InsertAndRemove,      Unders, DisplayOther, Traj, GrayAndBmMain, TextMain, WindowMisc};      END; -- WindowCode-- UserInputCode.pack, last edited by-- Daniels	 8-Mar-83 14:31:14-- Karlton	14-Feb-83 17:49:30UserInputCode: SEGMENT =  BEGIN    StimLevResident: CODE PACK = {    UserInputsA[      ENTRY VECTOR, ProcessUserActions, NextRetrace, SendNotification,      FlushInternal, InternalMouseSNR, InternalEnqueueAction, Wait,      GetAction, ReadEntry, WaitForEntry, ConsumeTo, GetMouseEvent]};    EVsAndOthers: CODE PACK = {    TIPMatchImpl[ENTRY VECTOR, First, Notifier];    UserInputsB[ENTRY VECTOR, GetInputFocus, FocusTakesInput];    UserInputsA[      InitWatchers, UserAbortProcess, SetUserAbort, InterruptProcess,      QueueEmpty, UserAbort, GetMouseAndCursorPosition,      SetMouseAndCursorPosition, FlushQueue, EnqueueEvent,      EnqueueMagicMouseEvent]};    MatcherIdle: CODE PACK = {    TIPMatchImpl[      MatchProcess, CheckNewCursorW, DoKamikazeNotifies,      DoNextPeriodicCall, GetNextPeriodicCall, WindowPlace,      InsertPeriodicNotifyHandle, PeriodicNotifyWait];    -- really belongs in MatcherMain, but fits here...    UserInputsB[CharForKey]};    MatcherMain: CODE PACK = {    TIPMatchImpl[MatchAndNotify, MatchEvent, ChordTableNotify, AsciiAction];    UserInputsA[ResetUserAbort]};    TIPMatchImpl EXCEPT    EVsAndOthers, MatcherIdle, MatcherMain, [MAIN, CATCH CODE];    TableSetup: CODE PACK = {    TIPImpl[ENTRY VECTOR,      CreateClient, DestroyTIPContext, DestroyClient, IsIt, GetTable,      GetNotifyProc, SetTable, SetNotifyProc, GetNotifyProcFromTable,      SetNotifyProcForTable, PushLocal, PushGlobal, NextTable];    AtomImpl EXCEPT [MAIN, CATCH CODE]};    TableMaker: CODE PACK = {    TIPTableReader EXCEPT [MAIN, CATCH CODE, ReadCompiledTable]};       TIPCReader: CODE PACK = {TIPTableReader[ReadCompiledTable]};      UserInputsB EXCEPT EVsAndOthers, MatcherIdle, [MAIN, CATCH CODE];    TajoTIP;  -- table compiled TIP Table      UICatchCode: CODE PACK = {    CATCH CODE OF TableSetup, TableMaker, TIPMatchImpl, UserInputsB;    UserInputsA[CATCH CODE]};      UIMain: CODE PACK = {    MAIN OF TableSetup, TableMaker, UserInputsB;    TIPMatchImpl[MAIN];    TIPImpl EXCEPT TableSetup, [MAIN, CATCH CODE];    UserInputsA EXCEPT      StimLevResident, EVsAndOthers, MatcherMain, [CATCH CODE]};      END;-- File: TajoBasicsCode.pack, last edited by-- Daniels	15-Feb-83 16:57:50TajoBasicsCode: SEGMENT =  BEGIN     BasicEVs: CODE PACK = {    MenusA[ENTRY VECTOR];    ENTRY VECTOR OF Selections;    Scrollbars[ENTRY VECTOR];    ToolFonts[ENTRY VECTOR, StringWidth];    ToolWindowsA[ENTRY VECTOR];    ToolWindowsB[ENTRY VECTOR];    ToolWindowsC[ENTRY VECTOR]};   Contexts EXCEPT AllSortsOfThings, [MAIN, CATCH CODE];    CursorImpl EXCEPT CursorsCold, [MAIN, CATCH CODE];    CursorsCold: CODE PACK = {CursorImpl[UniqueType]};    MenusActive: CODE PACK = {    MenusB[ENTRY VECTOR, MenuTIPNotify, InvokeMCR, Track, TryInvert]};    MenusInvoke: CODE PACK = {    MenusB[      Invoke, CreatePostedMenu, PostMenu, RealEnumerate,      AvailableInSW, ComputeWidestKeyword, MenuLimitProc, DestroyPostedMenu]};        MenusB EXCEPT BasicInitA, BasicInitB, MenusActive, MenusInvoke, [CATCH CODE];    MenusA EXCEPT BasicEVs, [MAIN, CATCH CODE];    Selections: CODE PACK = {    SelectionsA EXCEPT [MAIN, CATCH CODE, ENTRY VECTOR];     SelectionsB EXCEPT [MAIN, CATCH CODE, ENTRY VECTOR]};      Scrollbars EXCEPT BasicEVs, BasicInitA, BasicInitB, [CATCH CODE];    ToolWindowsA EXCEPT BasicEVs, TWOther, [MAIN, CATCH CODE];    ToolWindowsB EXCEPT BasicEVs, TWOther, AllSortsOfThings, [MAIN, CATCH CODE];    TWTIPNothing: CODE PACK = {    ToolWindowsC[      TIPMe, EnterNameFrame, ExitNameFrame, Invert, CursorSet, ClearInvert,      CursorPutBack, InvertThird]};    TWTIPCursors: CODE PACK = {    ToolWindowsC[      Track, MakeCursor, ComputeSide, ComputeCorner, ComputeMoveCorner,      StoreCornerSideCursor, AddCursorCorner]};    TWTIPSomething: CODE PACK = {    ToolWindowsC[      EnterBackDoor, ExitBackDoor, AdvanceCornerSide, DoSimpleFunction, DoSize,      DoZoomUnzoom, DoTopBottom, DoMoveGrow, DoMove, DoGrow, StartFloat,      DoFloat, StopFloat, GrowWindow]};     TWOther: CODE PACK = {    ToolWindowsA[SplitName, ParseName];    ToolWindowsB[      GetAdjustProc, GetName, GetState, GetTinyPlace, SetAdjustProc,      SetNameStripe, SetTransitionProc];    ToolWindowsC EXCEPT      BasicEVs, BasicInitA, BasicInitB, TWTIPNothing, TWTIPCursors, TWTIPSomething,      [CATCH CODE]};     AllSortsOfThings: CODE PACK = {    Contexts[      UniqueType, SimpleDestroyProc, NopDestroyProc, Create, DelinkDeleted,      Destroy, FindContextToDestroy, DestroyAll, Set];    ToolWindowsB[      GetGravity, SetGravity, SetBoxAllocator, SetLimitProc, GetPages, FreePages];    ToolFonts[Create, Destroy]};      BasicCatchCode: CODE PACK = {    CATCH CODE OF      ToolWindowsA, ToolWindowsB, Contexts, CursorImpl,      MenusA, MenusB, Selections, Scrollbars;    ToolFonts[CATCH CODE];    ToolWindowsC[CATCH CODE]};    BasicInitA: CODE PACK = {    MAIN OF      ToolWindowsA, ToolWindowsB, Contexts, CursorImpl, MenusA, Selections;    ToolWindowsC[MAIN, InitTip];    ToolFonts[MAIN]};    BasicInitB: CODE PACK = {    MenusB[MAIN, InitTip];    Scrollbars[MAIN, InitTip]};    END;-- File: TajoBasicsFrames.pack   Edits by-- Daniels,	12-Apr-83 14:10:34WindowFrames: FRAME PACK = { -- 1 - 75  RectangleImpl; WindowImplA; WindowImplB; WindowImplC; WindowImplD; WindowFonts;  ToolFonts};UIResidentFrames: FRAME PACK = { -- 5 - 168  UserInputsA;  MenusA; MenusB -- since there's a lot left over anyway...--};UINonResidentFrames: FRAME PACK = { -- 1 - 33  AtomImpl; TIPImpl; TIPMatchImpl; TIPTableReader; TajoTIP; UserInputsB;  Contexts; CursorImpl};TajoBasicsFrames: FRAME PACK = {  ToolWindowsA; ToolWindowsB; ToolWindowsC; SelectionsA; SelectionsB; Scrollbars};