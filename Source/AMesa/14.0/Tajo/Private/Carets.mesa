-- Copyright (C) 1981, 1982  by Xerox Corporation. All rights reserved. -- Carets.mesa  Last edit by-- JGS		24-Nov-81 11:19:17-- SXW   	6-Jul-81 15:27:14-- BXM  	16-Jul-81 16:23:18-- PXK    	May 8, 1980 6:39 PM-- AXD    	 9-Nov-82 13:26:54DIRECTORY  Caret,  Process USING [Ticks],  UserInput USING [    CancelPeriodicNotify, caretRate, CreatePeriodicNotify, nullPeriodicNotify,    PeriodicNotifyHandle, PeriodicProcType],  Window USING [Handle, rootWindow];Carets: MONITOR IMPORTS UserInput, Window EXPORTS Caret =  BEGIN OPEN Caret, UserInput;  -- Global Data  nextAction: Action ¬ firstFree;  blinking, waitOne: BOOLEAN ¬ FALSE;  caretData: ClientData ¬ NIL;  markProc: MarkProcType ¬ NopMarkerProc;  ph: PeriodicNotifyHandle ¬ nullPeriodicNotify;  -- Interface Procedures  NopMarkerProc: PUBLIC MarkProcType = {};  UniqueAction: PUBLIC PROC RETURNS [Action] = {     RETURN[nextAction ¬ SUCC[nextAction]]};  ActOn: PUBLIC ENTRY PROC [a: Action] = {    markProc[caretData, a];    SELECT a FROM      reset => {        caretData ¬ NIL;        markProc ¬ NopMarkerProc;        ph ¬ CancelPeriodicNotify[ph]};      start => {waitOne ¬ FALSE; blinking ¬ TRUE};      clear => waitOne ¬ TRUE;      stop => blinking ¬ FALSE;      ENDCASE};  ResetOnMatch: PUBLIC ENTRY PROC [data: ClientData] = {    IF data = caretData THEN {      markProc[caretData, reset];      caretData ¬ NIL;      markProc ¬ NopMarkerProc;      ph ¬ CancelPeriodicNotify[ph]}};  Set: PUBLIC ENTRY PROC [data: ClientData, marker: MarkProcType] = {    markProc[caretData, reset];    caretData ¬ data;    markProc ¬ marker;    markProc[caretData, mark];    IF ph = nullPeriodicNotify THEN      ph ¬ CreatePeriodicNotify[Blink, Window.rootWindow, UserInput.caretRate];    blinking ¬ TRUE};  -- private stuff  Blink: PUBLIC ENTRY PeriodicProcType = {    IF blinking THEN {      IF ~waitOne THEN markProc[caretData, invert]; waitOne ¬ FALSE}};  END.