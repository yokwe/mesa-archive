-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- TEdit.mesa, last edited by:-- AXD    	25-Jan-83 23:12:38DIRECTORY  Atom: TYPE USING [ATOM],  System: TYPE USING [Pulses],  TextData: TYPE USING [SelectionEntity, SelectionMode],  TIP: TYPE USING [Results],  Window: TYPE USING [Handle, Place];TEdit: DEFINITIONS = BEGIN  ATOM: TYPE = Atom.ATOM;    AlreadyDefined: SIGNAL [name: LONG STRING]; -- Raised by Register    CancelMultiClick: PROC;    CommandProc: TYPE = PROC [window: Window.Handle, params: TIP.Results ¬ NIL]     RETURNS [didIt: BOOLEAN ¬ TRUE];    CommandProcFromAtom: PROCEDURE [atom: ATOM] RETURNS [proc: CommandProc];    CommandProcFromString: PROCEDURE [string: LONG STRING]    RETURNS [proc: CommandProc];    GetCommand: PROC [num: [0..9]] RETURNS [params: TIP.Results];    InterpretAtom: PROC [window: Window.Handle, atom: ATOM];    InterpretInput: PROC [window: Window.Handle, results: TIP.Results];  -- as if input from TIP    IsRegistered: PROC [name: LONG STRING] RETURNS [BOOLEAN];    Register: PROCEDURE [string: LONG STRING, proc: CommandProc];    SetCommand: PROC [num: [0..9], params: TIP.Results];    SetInitialState: PROC;    UnRegister: PROC [name: LONG STRING];    -- variables for use by CommandProcs    StateRec: TYPE = RECORD [    inSel: {none, sel, ext} ¬ none,    insertToSel: BOOLEAN ¬ FALSE,    selEntity: TextData.SelectionEntity ¬ notSet,    selMode: TextData.SelectionMode ¬ video];  notSet: TextData.SelectionEntity = SUCC[paragraph];    state: LONG POINTER TO StateRec;    DontDoIt: SIGNAL;    int: LONG INTEGER;  place: Window.Place;  time: System.Pulses;    END.