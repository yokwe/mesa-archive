-- File TajoBasics.list-- Created by Packager from TajoBasics.pack on 28-Jul-87 11:29:52WindowCode: SEGMENT =  BEGIN  WindowsHot: CODE PACK =    BEGIN    WindowImplA[      ENTRY VECTOR, EnumerateTree, MakeContext];    WindowImplB[      ENTRY VECTOR, GetBox, BitmapPlaceToWindowAndPlace];    WindowImplC[      ENTRY VECTOR];    RectangleImpl[      ENTRY VECTOR, Alloc, FreeRecList, Free];    WindowFonts[      ENTRY VECTOR];    END;  RecUtils: CODE PACK =    BEGIN    RectangleImpl[      WindowToScreenBox, ScreenToWindowBox, Convert, ConvertBox, Copy,       Shift, Coalesce, SimpleAppend];    END;  Biters: CODE PACK =    BEGIN    WindowImplA[      ResetCache];    RectangleImpl[      Append, Bite, CleanInvalid, ClipBox, Intersect,       CheckOldBites, BiteOut, BiteOutSiblings, Visible];    END;  TreeBiter: CODE PACK =    BEGIN    RectangleImpl[      BiteOutSiblingsTheHardWay];    END;  ValPlusSSSS: CODE PACK =    BEGIN    WindowImplA[      Shift, EnumerateInvalidBoxes, InvalidateBox, InvalidateList, ValidateTree,       WhitenRecList, BadPhosphorToInvalid, InvalidateTree, TakeMyNameOffBadPhosphors, Slide,       SlideAndSizeAndStack, Stack, SlideAndStack, SlideAndSize, StackInternal,       Validate, ShouldDisplay, SetUpBadPhosphorList, DoneDisplay];    RectangleImpl[      Disjoint, Blt, CheckForLeaks];    END;  InsertAndRemove: CODE PACK =    BEGIN    WindowImplA[      InsertIntoTree, InsertIntoTreeLocked, RemoveFromTree];    END;  Unders: CODE PACK =    BEGIN    WindowImplA[      AssertUnobscured];    WindowImplB[      WordsForBitmapUnder, GetBitmapUnder, SetBitmapUnder, Float, FloatLocked,       ShiftUnder];    END;  DisplayOther: CODE PACK =    BEGIN    WindowImplA[      FreeBadPhosphorList, GetRecList];    WindowImplC[      White, SpWhite, Black, SpBlack, Invert,       SpInvert, Gray, ResolveBlock, Bitmap, BitAddressFromPlace];    WindowImplD[      ENTRY VECTOR, DisplayRootWindow];    END;  Traj: CODE PACK =    BEGIN    WindowImplC[      Trajectory];    END;  GrayAndBmMain: CODE PACK =    BEGIN    WindowImplC[      SpGray, SpBitmap];    END;  TextMain: CODE PACK =    BEGIN    WindowImplC[      Block, Character, SpCharacter, SpBlock, MeasureBlock,       Text];    END;  WindowMisc: CODE PACK =    BEGIN    WindowImplB[      GetParent, GetSibling, GetChild, GetDisplayProc, GetClearingRequired,       GetUseBadPhosphor, IsDescendantOfRoot, SetParent, SetSibling, SetChild,       SetDisplayProc, SetClearingRequired, SetUseBadPhosphor, InitializeWindow, BitmapPlace,       BoxesAreDisjoint, IntersectBoxes, IsPlaceInBox, ObscuredBySibling, TrimBoxStickouts];    WindowImplD[      Recalculate, DefineRoot];    WindowFonts[      SetDefault, CharIsDefined, CharWidth, FontHeight, SetFontAddresses,       Initialize];    END;  Catch: CODE PACK =    BEGIN    WindowImplA[      CATCH CODE];    WindowImplB[      CATCH CODE];    WindowImplC[      CATCH CODE];    WindowImplD[      CATCH CODE];    RectangleImpl[      CATCH CODE];    WindowFonts[      CATCH CODE];    END;  Main: CODE PACK =    BEGIN    WindowImplA[      MAIN];    WindowImplB[      MAIN];    WindowImplC[      MAIN];    WindowImplD[      MAIN];    RectangleImpl[      MAIN];    WindowFonts[      MAIN];    END;  END;UserInputCode: SEGMENT =  BEGIN  StimLevResident: CODE PACK =    BEGIN    UserInputsA[      ENTRY VECTOR, Wait, NextRetrace, SendNotification, ProcessUserActions,       FlushInternal, InternalMouseSNR, InternalEnqueueAction, GetMouseEvent, ReadEntry,       GetAction, WaitForEntry, ConsumeTo];    END;  EVsAndOthers: CODE PACK =    BEGIN    TIPMatchImpl[      ENTRY VECTOR, First, Notifier];    UserInputsA[      SetUserAbort, UserAbort, GetMouseAndCursorPosition, SetMouseAndCursorPosition, QueueEmpty,       FlushQueue, EnqueueEvent, EnqueueMagicMouseEvent, InitWatchers, InterruptProcess,       UserAbortProcess];    UserInputsB[      ENTRY VECTOR, FocusTakesInput, GetInputFocus];    END;  MatcherIdle: CODE PACK =    BEGIN    TIPMatchImpl[      MatchProcess, DoKamikazeNotifies, GetNextPeriodicCall, WindowPlace, DoNextPeriodicCall,       InsertPeriodicNotifyHandle, PeriodicNotifyWait, CheckNewCursorW];    UserInputsB[      CharForKey];    END;  MatcherMain: CODE PACK =    BEGIN    TIPMatchImpl[      MatchAndNotify, MatchEvent, AsciiAction, ChordTableNotify];    UserInputsA[      ResetUserAbort];    END;  TIPMatchImpl: CODE PACK =    BEGIN    TIPMatchImpl[      Rest, GetPlace, NewManager, CreatePeriodicNotify, CancelPeriodicNotify,       GetManager, FlushUserInput, EatAnAction, WaitForConfirmation, WaitNoButtons,       ClearTargetWindowOnMatch, NewNotifierWatcher];    END;  TableSetup: CODE PACK =    BEGIN    AtomImpl[      ENTRY VECTOR, GetKey, FindAtom, MakeAtom, GetPName];    TIPImpl[      ENTRY VECTOR, CreateClient, DestroyTIPContext, DestroyClient, IsIt,       GetTable, GetNotifyProc, SetTable, SetNotifyProc, GetNotifyProcFromTable,       SetNotifyProcForTable, PushLocal, PushGlobal, NextTable];    END;  TableMaker: CODE PACK =    BEGIN    TIPTableReader[      ENTRY VECTOR, CreateTable, DefaultTable, EqualTables, EqualChoiceSeries,       EqualChoices, EqualResults];    END;  TIPCReader: CODE PACK =    BEGIN    TIPTableReader[      ReadCompiledTable];    END;  UserInputsB: CODE PACK =    BEGIN    UserInputsB[      ClearInputFocusOnMatch, InternalSetInputFocus, FindDirectTypeIn, AllDoneWithTypeIn, SetInputFocus,       NopCaretProc, NopStringProc, GetDefaultWindow, WaitMilliSecs, WaitSecs,       FindDirectTypeOut, StuffSomething, StuffCharacter, StuffString, StuffCurrentSelection,       StuffTrashBin, StringOut, TypeInFlush, CreateStringInOut, DestroyTypeInContext,       CreateIndirectStringSomething, CreateIndirectStringInOut, CreateIndirectStringOut, CreateIndirectStringIn, DestroyStringInOut,       DestroyIndirectStringIn, DestroyIndirectStringOut, HasIndirectTypeIn, SetStringInOut, SetStringIn,       SetStringOut];    END;  TajoTIP: CODE PACK =    BEGIN    TajoTIP;    END;  UICatchCode: CODE PACK =    BEGIN    AtomImpl[      CATCH CODE];    TIPImpl[      CATCH CODE];    TIPMatchImpl[      CATCH CODE];    TIPTableReader[      CATCH CODE];    UserInputsA[      CATCH CODE];    UserInputsB[      CATCH CODE];    END;  UIMain: CODE PACK =    BEGIN    AtomImpl[      MAIN];    TIPImpl[      MAIN, MakePlaceHolder, MakeStdTable, MakeFormTables, MakeRootTables,       MakeTextTables, Init];    TIPMatchImpl[      MAIN];    TIPTableReader[      MAIN];    UserInputsA[      MAIN, SwapMouseSNR, SwapKeySNR, CreateQueues, SetAttention,       StartStimulusLevel];    UserInputsB[      MAIN];    END;  END;TajoBasicsCode: SEGMENT =  BEGIN  BasicEVs: CODE PACK =    BEGIN    MenusA[      ENTRY VECTOR];    SelectionsA[      ENTRY VECTOR];    SelectionsB[      ENTRY VECTOR];    Scrollbars[      ENTRY VECTOR];    ToolFonts[      ENTRY VECTOR, StringWidth];    ToolWindowsA[      ENTRY VECTOR];    ToolWindowsB[      ENTRY VECTOR];    ToolWindowsC[      ENTRY VECTOR];    END;  Contexts: CODE PACK =    BEGIN    Contexts[      ENTRY VECTOR, Acquire, FindContext, InFindOrCreate, DeletedWhileCreating,       GetNextType, Find, FindOrCreate, Release];    END;  CursorImpl: CODE PACK =    BEGIN    CursorImpl[      ENTRY VECTOR, Fetch, Swap, Store, FixUpPosition,       GetInfo, Invert, MakeNegative, MakePositive, MoveIntoWindow,       Set, FetchFromType];    END;  CursorsCold: CODE PACK =    BEGIN    CursorImpl[      UniqueType];    END;  MenusActive: CODE PACK =    BEGIN    MenusB[      ENTRY VECTOR, MenuTIPNotify, TryInvert, InvokeMCR, Track];    END;  MenusInvoke: CODE PACK =    BEGIN    MenusB[      ComputeWidestKeyword, RealEnumerate, AvailableInSW, CreatePostedMenu, PostMenu,       DestroyPostedMenu, MenuLimitProc, Invoke];    END;  MenusB: CODE PACK =    BEGIN    MenusB[      DisplayString, Enumerate, FindRing, MCRForKeyword, DrawMenuNameFrame,       MenuDisplay];    END;  MenusA: CODE PACK =    BEGIN    MenusA[      Create, Destroy, DestroyMenuContext, Instantiate, FreeItem,       MakeItem, Make, MakeNode, Free, Uninstantiate,       GetFont, SetFont];    END;  Selections: CODE PACK =    BEGIN    SelectionsA[      ActOn, ClearAll, ClearOnMatch, Convert, Number,       LongNumber, Set, UniqueTarget, UniqueAction];    SelectionsB[      SetTrashBin, ConvertTrashBin, SetInsertion, ConvertInsertion];    END;  Scrollbars: CODE PACK =    BEGIN    Scrollbars[      Create, Destroy, DestroyClient, DisplayScrollWindow, DestroyScroll,       ScrollTIPNotify, HasScrollbar, GetNotifier, SetNotifier, WindowNowDelinked,       WindowNowEnlinked, Adjust, Enter, SetBoxes, SetCursorAndDirection,       CursorSet, Exit, PercentOf, Percentage, ScrollSome,       DarkRange];    END;  ToolWindowsA: CODE PACK =    BEGIN    ToolWindowsA[      Type, DrawNameFrame, DrawTinyWindow, DrawRectangle, GetTinyName,       ForceTinyName, GetInactiveName, MakeTinyName, GetBlock, AllocateWindow,       DeallocateWindow, DestroyWindow, IsWindowValid, ClippingBox, DrawClippingWindow,       FindClippingWindow, GetClippedDims, GetNormalBox, SetClippingBox, SetTinyPlace,       StripMesa];    END;  ToolWindowsB: CODE PACK =    BEGIN    ToolWindowsB[      Create, Destroy, GetBox, NextTinyBoxHorizontal, NextTinyBoxVertical,       NextNormalBox, Activate, MakeSize, AddClippingWindow, Show,       DestroyStuff, PutUpTiny, CreateSubwindow, EnlinkSubwindow, Deactivate,       Hide, TakeDownTiny, DelinkSubwindow, EnumerateSWs, IsPlaceInWindow,       GetLimitProc, SetName, GetNameStripe, SetTinyName, GetTransitionProc,       WindowForSubwindow, TakeDownZoomed, PutUpZoomed, MakeZoomedContext, DestroyZoomed];    END;  TWTIPNothing: CODE PACK =    BEGIN    ToolWindowsC[      Invert, TIPMe, EnterNameFrame, ExitNameFrame, InvertThird,       CursorSet, ClearInvert, CursorPutBack];    END;  TWTIPCursors: CODE PACK =    BEGIN    ToolWindowsC[      Track, MakeCursor, ComputeCorner, ComputeMoveCorner, ComputeSide,       StoreCornerSideCursor, AddCursorCorner];    END;  TWTIPSomething: CODE PACK =    BEGIN    ToolWindowsC[      AdvanceCornerSide, DoMoveGrow, DoSimpleFunction, StopFloat, StartFloat,       EnterBackDoor, DoGrow, GrowWindow, DoMove, DoSize,       DoTopBottom, DoZoomUnzoom, ExitBackDoor, DoFloat];    END;  TWOther: CODE PACK =    BEGIN    ToolWindowsA[      SplitName, ParseName];    ToolWindowsB[      GetAdjustProc, GetName, GetState, GetTinyPlace, SetAdjustProc,       SetNameStripe, SetTransitionProc];    ToolWindowsC[      EnumerateInactiveWindows, GetWindowManagerMenu, MoveGrowMCR, OtherMCR, ToolWindowAndStuff,       StandardLimitProc, SetBox, ActivateMCR, TakeDownInactiveMenu, PutUpInactiveMenu,       PutOnDeactiveMenu, TakeOffDeactiveMenu];    END;  AllSortsOfThings: CODE PACK =    BEGIN    Contexts[      Create, DelinkDeleted, Destroy, FindContextToDestroy, DestroyAll,       NopDestroyProc, Set, SimpleDestroyProc, UniqueType];    ToolFonts[      Create, Destroy];    ToolWindowsB[      GetGravity, SetGravity, SetBoxAllocator, SetLimitProc, GetPages,       FreePages];    END;  BasicCatchCode: CODE PACK =    BEGIN    Contexts[      CATCH CODE];    CursorImpl[      CATCH CODE];    MenusA[      CATCH CODE];    MenusB[      CATCH CODE];    SelectionsA[      CATCH CODE];    SelectionsB[      CATCH CODE];    Scrollbars[      CATCH CODE];    ToolFonts[      CATCH CODE];    ToolWindowsA[      CATCH CODE];    ToolWindowsB[      CATCH CODE];    ToolWindowsC[      CATCH CODE];    END;  BasicInitA: CODE PACK =    BEGIN    Contexts[      MAIN];    CursorImpl[      MAIN];    MenusA[      MAIN];    SelectionsA[      MAIN];    SelectionsB[      MAIN];    ToolFonts[      MAIN];    ToolWindowsA[      MAIN];    ToolWindowsB[      MAIN];    ToolWindowsC[      MAIN, InitTip];    END;  BasicInitB: CODE PACK =    BEGIN    MenusB[      MAIN, InitTip];    Scrollbars[      MAIN, InitTip];    END;  END;WindowFrames: FRAME PACK =  BEGIN  RectangleImpl;  WindowImplA;  WindowImplB;  WindowImplC;  WindowImplD;  WindowFonts;  ToolFonts;  END;UIResidentFrames: FRAME PACK =  BEGIN  UserInputsA;  MenusA;  MenusB;  END;UINonResidentFrames: FRAME PACK =  BEGIN  AtomImpl;  TIPImpl;  TIPMatchImpl;  TIPTableReader;  TajoTIP;  UserInputsB;  Contexts;  CursorImpl;  END;TajoBasicsFrames: FRAME PACK =  BEGIN  ToolWindowsA;  ToolWindowsB;  ToolWindowsC;  SelectionsA;  SelectionsB;  Scrollbars;  END;