-- FormSWs.pack-- LastEdit: --  BGY     	11-Feb-83 11:35:32FormSWs: SEGMENT =   BEGIN    FormSWEV: CODE PACK = {    FormSWsA[ENTRY VECTOR];    FormSWsB[ENTRY VECTOR];    FormSWsC[ENTRY VECTOR];    FormSWsD[ENTRY VECTOR];    FormSWsE[ENTRY VECTOR];    FormSWsF[ENTRY VECTOR];    FormSWsG[ENTRY VECTOR];    FormSWsI[ENTRY VECTOR];    FormSWsJ[ENTRY VECTOR];    };      FormSWTracking:  CODE PACK = {    FormSWsB [      ResolveBugToItem,        StartSelect, StartInsert, DoInsertion, TrackCursor,       DoSelection, InvertSelect, SetModified, FormSWOK, PointUp,       FinishText, InvertItem, AdjustUp, BumpEntity, NewInterval,       TakeInputFocus, MagicTag, LoseInputFocus, DijectSelection,       IsPlaceInBox, ContextFromItem, ResolvePlaceToItem];    };    FormSWStartTrack: CODE PACK = {    FormSWsB [InitializeGlobalState, ExtendSel, MenuDown, MoveInsertion,       DoSelect ];    };      FormSWNotify: CODE PACK = {    FormSWsJ [InterpInput];    FormSWsF [TagLength];    };      FormSWEdit: CODE PACK = {    FormSWsD EXCEPT FormSWEV, FormSWCreate,       FormSWDisplay, FormSWDisplaySupport, FormSWsSelection, FormSWCold;    FormSWsI [ModifyEditable, TypeInProc, GetTagLength, RealModifyEditable,       EditItem, PositionInBody, StringEdit];    };      FormSWSource: CODE PACK = {    FormSWsF EXCEPT FormSWEV, FormSWDisplaySupport,        FormSWNotify, FormSWsSelection, FormSWCold};      FormSWDisplaySupport: CODE PACK = {    FormSWsA [DetermineBoxWidth, FindNextVisible, FixupEnumOneWidth];    FormSWsC EXCEPT FormSWEV, FormSWCold;    FormSWsD [LineHeight];    FormSWsF [ClearCachedInfo];    };      FormSWDisplay: CODE PACK = {    FormSWsA [Display, DisplayNextItem];    FormSWsD [DisplayItem, ReplaceLongNumberString, ReplaceNumberString];    };      FormSWsSelection: CODE PACK = {    FormSWsD [ActOnSelection, Again, ConvertInsertion, ConvertSelection,       ConvertStuff, ContinueConversion, Copy, DeleteOrReplace,      DeleteFNR, DestroyStuffSource, ConvertSwap,      GetSelection, GetTypeIn, ReplaceFNR, SetCurrent, SetTypeIn, Move, Undo];    FormSWsF [ConvertTrash, ClearTrash, ReadTrash, DestroySelectionSource];    };      FormSWCreate:  CODE PACK = {    FormSWsA [CopyClientItems, Create, FreeNode,  ValidateItems,       Wakeup, MakeNode, CheckItemOrder];    FormSWsG [AllocateItemDescriptor, MakeNode, BooleanItem,       CommandItem, EnumeratedItem, StringItem];    FormSWsD [PositiveY];    };    FormSWsABCold: CODE PACK = {    FormSWsA EXCEPT FormSWEV, FormSWCreate, FormSWDisplay,       FormSWDisplaySupport, FormSWCold;    FormSWsB EXCEPT FormSWEV, FormSWStartTrack, FormSWTracking, FormSWCold;    };    FormSWsEJCold: CODE PACK = {    FormSWsE EXCEPT FormSWEV, FormSWCold;    FormSWsJ EXCEPT FormSWEV, FormSWNotify, FormSWCold;    };            FormSWsGICold: CODE PACK = {    FormSWsG EXCEPT FormSWEV, FormSWCreate, FormSWCold;    FormSWsI EXCEPT FormSWEV, FormSWEdit, FormSWCold;    };    FormSWCold:  CODE PACK = {    FormSWsA [MAIN, CATCH CODE];    FormSWsB [MAIN, CATCH CODE];    FormSWsC [MAIN, CATCH CODE];    FormSWsD [MAIN, CATCH CODE];    FormSWsE [MAIN, CATCH CODE];    FormSWsF [MAIN, CATCH CODE];    FormSWsG [MAIN, CATCH CODE];    FormSWsH;    FormSWsI [MAIN, CATCH CODE];    FormSWsJ [MAIN, CATCH CODE];    };    END;      FormSWFrames: FRAME PACK = {    FormSWsA; FormSWsB; FormSWsC; FormSWsD; FormSWsE;     FormSWsF; FormSWsG; FormSWsH; FormSWsI; FormSWsJ}.    