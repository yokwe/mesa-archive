*** How to install a Sequoia system ***last revised on  7-Oct-85 14:28:17filed on [Goofy:OSBU North:Xerox]<AlphaMesa>12.0>Doc>InstallSequoia.doc.   IntroductionThis memo describes how to install Mesa 12.0 (Sequoia) XDE software on a Dandelion processor. You may start from scratch, (i.e. the disk contains no data.) or upgrade from Mesa 11.0 (Klamath) or Mesa 11.1 (Calaveras).  Note: If you use the Installer program to set up your machine, you need not follow the procedures described here. This document is aimed towards those who install software on their machine manually.---------------------------------------------------------------------------The main sections are:(If you are reading this in Tajo, select a line and hit the FIND key to skip to the section)A: Upgrading from previous version of Sequoia (12.0e to 12.0f)B: Installing Mesa 12.0 from scratchC: Installing Mesa 12.0 from Mesa 11.0.D: Installing Mesa 12.0 from Mesa 11.1.E: Using ViewPoint on a Sequoia machineF: Installing PUPs on Mesa 12.0.---------------------------------------------------------------------------Mesa 12.0 is very similar to Mesa 11.1, and its major changes are in Pilot. Although most of your 11.1 tools will run in 12.0, we suggest that you get new and improved tools from the release directory.  If you do not fit one of these categories and need more information, contact your LOCAL software support group. Note! Your Mesa release host server name is:	[Goofy:OSBU North:Xerox]Your Mesa release directory is named:  	<AlphaMesa>12.0>If you are using a "local" copy of the above directories, please ask your neighbor where they are.---------------------------------------------------------------------------A: Upgrading from previous version of Sequoia (12.0e to 12.0f)Note: "Quoted" items correspond to Othello commands. See the Othello appendix in the XUG, the XDE User's guide for examples.A.1	Fetch development environment boot files and new germ and microcode as desired. (see B.5 - B.7 for details)A.2	"Set Boot file default switches" for each volume if desired. A.3	"Set Physical Volume boot files" (usually Othello).A.4	"Quit" from Othello.  (This is equivalent to pushing the boot button.)A.5	Boot your development environment volume. (usually Copilot)A.6	Get newer tools from the Mesa release directory. ---------------------------------------------------------------------------B: Installing Mesa 12.0 from scratchNote: "Quoted" items correspond to Othello commands. See the Othello appendix in the XUG, the XDE User's guide for examples.B.1	Boot Othello 11.1 from a floppy or the Ethernet. You must have at least 768Kb real memory to boot Othello. Etherboot 3 will give you an Othello that accesses NS servers.B.2	"Create Physical Volume" with the desired volumes. Minimum sizes based on volume content are:	  Othello       1300 	for boot file, microcode, and germ. 	  Tajo		4000	  CoPilot	7500	for 768Kb memory machines: add 1000 for each added 256K bytes memory.	  Scavenger, User	Depends on the type of ViewPoint configuration you use.   Consult the ViewPoint installation documents for details.     B.3 	"Online" RD0 B.4 	Set up Othello to access the servers for bootfiles and microcode by typing in the following	"Clearinghouse" to set your domain and organization.  	"Login"  to give your login name and password. 	"Open" a connection to your release host server.  	"Directory" to set directory to your Mesa release host directory.  B.5 	"Initial microcode fetch" from SAX000Initial.db	  (note that the X in the name is the letter "X", not a variable)B.6 	Fetch microcode and Germ (usually System volume). 	  - "Pilot microcode fetch" 		Mesa.db	  - "Germ fetch" 			DLion.germ	  - "Diagnostic microcode fetch" 	MoonBoot.dbB.7	Fetch development environment boot files as desired. 	Use the "Fetch boot file" commands to...		  - Fetch Othello 	OthelloDLion.boot.	  - Fetch Tajo 		TajoDLion.boot.	  - Fetch CoPilot 	CoPilotDLion.boot.	  (repeat for CoCoPilot volume if present).	      	Note: There are  Othello boot files available (as described in "Sequoia Changes Summary".) 	1) PupOthelloDlion.boot	- can access both Pup and NS-based servers	2) OthelloDLion.boot	- can access NS-based servers only.		Both of these can also access floppies.B.8 	"Set Boot file default switches" for each volume if desired.B.9 	"Set Physical Volume boot files" (usually Othello). B.10	"Quit" from Othello.  (This is equivalent to pushing the boot button.)B.11 	Boot CoCoPilot and CoPilot IN THAT ORDER. You need not boot Tajo or ViewPoint until you want to use them. The first time you boot Mesa 12.0 XDE boot files, they will take much longer. (~3 minutes).B.12	After booting CoPilot, Set Debugger Pointers from (debuggee) Othello to (debugger) CoPilot to enable SHIFT-STOP from Othello. You will have to boot Othello again to make this take effect. You should not need to set debugger pointers for any other volumes. We also recommend that you boot Copilot with the "W" switch, along with any others you may have. This avoids the need for you to SHIFT-STOP from Othello to CoPilot.B.13 	On each Tajo and CoPilot volume, use the FileTool to retrieve whatever tools you desire from from the release directory. See release directory/Doc/SampleUser.cm for an example User.cm. ---------------------------------------------------------------------------C: Installing Mesa 12.0 from Mesa 11.0.Mesa 12.0's Othello boot file is much larger than the 11.0 version.  You must have at least 1300 free pages on your Othello volume before installing a Mesa 12.0 Othello with the  germ and microcode.  If you need or want to reconfigure your disk, save all files on a file server (don't forget subdirectories and your Star desktop) and go to step B.1 above, and ignoring the rest of step C.  C.1 	Back up all volatile information on volumes to be converted to Sequoia. Although the volumes will be automatically scavenged forward to Sequoia upon rebooting, It is always wise to protect yourself in case data is lost.	(A hack called LVSnap may be able to help you with take a "snapshot" of your volumes by storing files on a remote file server. Please look in your hacks directory.)C.2 	Follow B.1  to boot othello. C.3 	Follow B.3 through B.13, fetching boot files only for volumes to be converted.  Note: You will need to boot with the 'I switch the first time when going from 11.0 to 12.0 to get new TIP tables. Don't forget to get new microcode and Germ since 11.0 versions are not compatible.Note on file system compatibility between Klamath and Sequoia: A Klamath volume will be automatically converted forward to Sequoia upon rebooting that volume with a Sequoia boot file. You cannot open a pre-Calaveras volume from a Sequoia volume for READ.  11.1 and 12.0 are volume compatible, so Calaveras users should have no problems converting.Due to a bug in Trinity/Minaret/Sierra Pilot (all the same version of PilotKernel), if a physical volume contains both pre-Klamath and Klamath/Sequoia volumes, care must be taken if a Klamath volume is erased or scavenged using Klamath.  In particular, once a Klamath volume is erased or scavenged, the volume must be written onto before attempting to online the containing physical volume using a pre-Klamath version of Pilot (e.g., using PhysicalVolume.AssertPilotVolume or, Othello's Online command).  Typical ways of writing onto a volume are to boot a Pilot bootfile on that volume or to fetch a new bootfile onto that volume (using Sequoia Othello, of course).Contrary to the statement in PPM section 4.4.1, the system logical volume will NOT be converted forward to the latest version during Pilot initialization. This change is necessary since the case of an old-version volume may be indistinguishable from a current-version volume with malfunctioning hardware, and only the user can distinguish between these two cases. Volumes must be converted forward using a volume utility program such as Othello.---------------------------------------------------------------------------D: Installing Mesa 12.0 from Mesa 11.1.Mesa 12.0 is very similar to Mesa 11.1. You basically need to get the new boot files, microcode, and tools. You don't have to worry about converting your volumes, etc. The Othello boot file is not larger than the 11.1 version and the Tajo/Copilot bootfiles are slightly larger so we most users don't need to reconfigure. But if you do need to reconfigure, back up your files and start from scratch.D.0	You may want to back up all volatile information as a safety precaution in step B.1 above. However, since your volumes will not be scavenged forward, the backup is probably not necessary.D.1.	Follow B.1 to boot othello.D.2	Follow B.3 through B.13, fetching boot files only for volumes to be converted. Note: You will need to boot with the 'I switch the first time when going from 11.1 to 12.0 to get new TIP tables. ---------------------------------------------------------------------------E: Using ViewPoint on a Sequoia machineViewPoint can be used on a Sequoia machine, but must be booted with the 'T swtich to use the software TextBlt. Please see the Pilot 12.0 Yuba documentation for full details.The following files are required to run the StarFileTool. First, retrieve the following files:  [Goofy:OSBU North:Xerox]<AlphaMesa>12.0>Temp>NSFilingConfig.bcd  [Goofy:OSBU North:Xerox]<AlphaMesa>12.0>Temp>StarFileTool.bcd  Type into the Executive:>NSFilingConfig <carraige return>>StarFileTool <carraige return> For StarFileTool instructions, please contact your product software support.If you are using the Xerox Viewpoint and its applications, please refer to the ViewPoint documentation.---------------------------------------------------------------------------F: Installing PUPs on Mesa 12.0.The rest of this document describes how to runs Pups on a Mesa 12.0 bootfile.  Since Mesa 12.0 does NOT include Pups in them, you cannot fetch and store files to IFS servers unless you run Pups as described below.For simple uses of Pup, you need only section A. Section B describes the use of the PupExec program which allows you to control the loading and starting of the Pup programs. The only access to Pups needed by most SDD programmers is to IFS file servers (such as for BWS and Services files) and Pup Adobe (for Product Software ARs).Pup users may want to read the section on the File Tool (Sections C and D)_____________________________________________A) A simple way to run Pups.B) Using PupExecC) Effects on the Filetool._____________________________________________ A) A simple way to run Pups.1. Fetch PupConfig.bcd from the Mesa release directory.2. Run PupConfig.bcdInstead of running PupConfig.bcd each time you boot, you could change the InitialCommand line of your User.cm's [System] section to do it for you. [Tajo:System]InitialCommand: Run.~ PupConfig.bcdIf you include PupAdobe or other PUP programs in your IntitialCommand, put them after PupConfig.bcd._____________________________________________B) Using PupExecFor  complete details, please read [Ramrod:OSBU North]<AMesa>12.0>NSHacks>Doc>PupExec.doc To get the document, you could use the following FTP command:ftp "Ramrod:OSBU North:Xerox" dir/c <AMesa>12.0>NSHacks>Doc> ret/c PupExec.doc_____________________________________________C) Effects on the Filetool.When you boot Tajo, run PupExec or PupConfig, and bring up the Filetool, you will notice that the {NS, Pup} choice is not displayed. That happened because Tajo ran your filetool BEFORE you even got a chance to run PupExec, so it thought it didn't need to give you a choise to run Pups. To solve this, first DE-ACTIVATE your file tool, and then (guess what) RE-ACTIVATE it, and then carefully look at the file tool. You will now realize that your beloved {NS, Pup} choice is displayed again!Rather than deactivating your Filetool each time, which gets to be a pain, here is a short cut.  Specify Pup servers by appending the character "%" to the host name in the file tool. This is like the ":" character you used to specify NS servers when Pup was the default. NS servers can be specified WITHOUT the trailing ":". Example:Old style -> 	Host: Goofy:	Directory: <Alphamesa>12.0>		Host: Idun	Directory: <Int>		New style -> 	Host: Goofy	Directory: Alphamesa>12.0>		Host: Idun%	Directory: <Int>		---------Be seeing you...-*-*- End of file -*-*-