-- File: ProcBcds.mesa - last edit:-- kam                 18-Dec-85 11:54:24-- Copyright (C) 1982, 1983 , 1985, 1985 by Xerox Corporation. All rights reserved. -- ProcBcds.mesa - Last edited by--   Schmidt	 4-Mar-82 13:57:32--   BTL   on  	22-Aug-83 14:34:52DIRECTORY  BcdDefs USING [Base, BCD, VersionStamp],  BcdOps USING [BcdBase, NameString],  LeafSubr USING [FileHandle],  MFile USING [Handle],  MSegment USING [Handle];ProcBcds: DEFINITIONS =  BEGIN    InvalidBcd: SIGNAL;  -- raised by ReadInSegmentsBcd: invalid Bcd version ID  Innards: TYPE = POINTER TO InnardsObject;  InnardsObject: TYPE = RECORD [    fHandle: MFile.Handle         ¬ NIL,    rHandle: LeafSubr.FileHandle  ¬ NIL,    bcdHeaderSeg: MSegment.Handle ¬ NIL,    bcd: BcdOps.BcdBase           ¬ NIL,    upperLimit: CARDINAL    ¬ NULL,  -- this is # words available    tb:  BcdDefs.Base       ¬ NULL,    ssb: BcdOps.NameString  ¬ NULL,    spb: BcdDefs.Base       ¬ NULL,    fpb: BcdDefs.Base       ¬ NULL,    ctb: BcdDefs.Base       ¬ NULL,    mtb: BcdDefs.Base       ¬ NULL,    itb: BcdDefs.Base       ¬ NULL,    etb: BcdDefs.Base       ¬ NULL,    sgb: BcdDefs.Base       ¬ NULL,    ftb: BcdDefs.Base       ¬ NULL,    ntb: BcdDefs.Base       ¬ NULL];      -- sourcefile ends in either a ".config" or ".mesa"  -- uns is usually a DBTuples.Tuple  ProcMod: TYPE = PROC [      sourcefile, smodulename: STRING,      bcdvers, sourcevers, creatorvers: BcdDefs.VersionStamp,      isdefns, isconfig, ispackaged, iscodebound, issymbolsbound, istablecompiled,        madebylinker, altoCode, boundsChecks, cedarSwitch, crossJump, linksInCode,	nilChecks, sortByUsage: BOOLEAN,      symbolSpace: SymbolSpace]    RETURNS [uns: UNSPECIFIED];      -- uns is passed thru from client's ProcMod result  -- filename normally has ".bcd" at the end  ProcDep: TYPE = PROC [    relcode: RelCode, smodulename, filename: STRING,    bcdvers: BcdDefs.VersionStamp, uns: UNSPECIFIED];      RelCode: TYPE = {    imports, exports, otherdepends, symbolsfile, canignore, defstype, sourcefile};      SymbolSpace: TYPE = RECORD [    file: MFile.Handle,    span: Span];  nullSymbolSpace: SymbolSpace = [file: NIL, span: nullSpan];      Span: TYPE = RECORD [    base:  NAT,			-- base page (0 = leader, if present)    pages: NAT];  nullSpan: Span = [0, 0];   -- Procedures    -- uses innards.fHandle (local file), or innards.rHandle (remote file)  -- sets innards.bcd and innards.bcdHeaderSeg  ReadInSegmentsBcd: PROC [innards: Innards];  -- uses innards.bcd, set other bases  InstallAddressesBcd: PROC [innards: Innards];  -- you must do an InstallAddressesBcd[] first  -- calls procMod, then procDep for each dependency for both Defs and Impls.  -- if print is TRUE, it will print out the number of imports and exports  -- if calltwice is TRUE, it will call ProcMod twice to help with  --   clustering in the database  PrintDepends: PROC [      innards: Innards, procMod: ProcMod, procDep: ProcDep,      print, calltwice, less: BOOLEAN, bcdfilename: LONG STRING]    RETURNS [success, isconfig, isdefns: BOOLEAN, nimp, nexp, ntype: CARDINAL];      -- uses innards.bcdHeaderSeg; does NOT close innards.rHandle  UnstallBcd: PROC [innards: Innards];    END.CHANGE LOG18-Dec-85 11:51:07	kam	added "madebylinker" BOOLEAN in ProcMod