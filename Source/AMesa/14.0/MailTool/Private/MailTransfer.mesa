-- File: MailTransfer.mesa - last edit by-- AlHall,	21-Jul-84 21:12:30-- Wobber,	14-Nov-83 14:09:01-- PXK    ,	22-Sep-83 18:27:27DIRECTORY  Environment USING [Block],  MailTransport USING [nullMessageID, MessageID],  NSName USING [maxFullNameLength, Name],  NSString USING [String];MailTransfer: DEFINITIONS =  BEGIN    -- stuff for sending mail (Grapevine only)    GetProc: TYPE = PROCEDURE [firstChar: LONG CARDINAL]    RETURNS [block: Environment.Block];  UserAbortProc: TYPE = PROCEDURE RETURNS [BOOLEAN];    Recipients: TYPE = LONG POINTER TO RecipientsSequence;  RecipientsSequence: TYPE = RECORD [    recipients: SEQUENCE length: CARDINAL OF LONG STRING];  NoSuchRecipients: SIGNAL [recipients: Recipients];  NeedReplyTo: SIGNAL [replyto: LONG STRING, position: CARDINAL];    Send: PROCEDURE [    length: LONG CARDINAL,    get: GetProc,    post: PostProc,    userAbort: UserAbortProc]    RETURNS [sent: BOOLEAN];    -- and stuff for retrieving mail    AttachmentID: TYPE = LONG POINTER TO AttachmentIDRecord;  AttachmentIDRecord: TYPE = RECORD [    messageID: MessageID ¬ nullMessageID,    mailbox: NSName.Name ¬ NIL];  maxDigitsPerWord: CARDINAL = 7;    -- Correct only if using octal digits.    -- Includes extra "digit" for trailing "B" (indicates octal).  Handle: TYPE = LONG POINTER TO Object;  Object: TYPE;  Why: TYPE = {first, continuing, done};  MailboxState: TYPE = {    empty, mail, userAuthenticated, serversAllDown, bug, noLogin};  maxAttachmentIDStringLength: CARDINAL =    maxMessageIDStringLength + NSName.maxFullNameLength + 1;    -- Extra 1 is for the slash ('/) separating the messageID field from    --   the mailbox field.  maxMessageIDStringLength: CARDINAL = 5 * maxDigitsPerWord + 4;    --  Extra 4 is for the separator characters.  MessageID: TYPE = MailTransport.MessageID;  nullMessageID: MessageID = MailTransport.nullMessageID;      AddProc: TYPE = PROC [    why: Why, block: Environment.Block, messageLength: CARDINAL,    attachment: BOOLEAN ¬ FALSE]    RETURNS [quit: BOOLEAN];    -- if why = done then block should be ignored    -- messageLength is the total number of bytes there will be in this message    -- quit means stop sending messages if at all possible    -- The BOOLEAN attachment is only looked at if why = first.    AttachmentIDFromString: PROCEDURE [zone: UNCOUNTED ZONE, string: NSString.String]    RETURNS [attachmentID: AttachmentID ¬ NIL];    -- Use PROC FreeAttachmentID to free attachmentID.    CheckReader: PROCEDURE [handle: Handle];  CreateRead: PROCEDURE [    clientData: LONG POINTER ¬ NIL,    stateProc: PROCEDURE [LONG POINTER, MailboxState, STRING] ¬ NIL ]    RETURNS [Handle];    DeleteAttachments: PROCEDURE [handle: Handle,    attachmentIDs: LONG DESCRIPTOR FOR ARRAY OF AttachmentID, post: PostProc]    RETURNS [deleted: BOOLEAN ¬ FALSE];    DestroyRead: PROCEDURE [Handle];    FreeAttachmentID: PROCEDURE [zone: UNCOUNTED ZONE, attachmentID: AttachmentID];    NewUser: PROCEDURE [handle: Handle];    PostProc: TYPE = PROCEDURE [    s: LONG STRING, eol: BOOLEAN ¬ TRUE, error: BOOLEAN ¬ FALSE];    Retrieve: PROCEDURE [    handle: Handle, add: AddProc, post: PostProc,    flushRemote, getEnvelope, allAttachments: BOOLEAN ¬ FALSE];    -- If getEnvelope = TRUE, then fields reflecting the transport-level    --   envelope will be inserted in the header.    StringFromAttachmentID: PROCEDURE [zone: UNCOUNTED ZONE, attachmentID: AttachmentID]    RETURNS [string: NSString.String];    END.