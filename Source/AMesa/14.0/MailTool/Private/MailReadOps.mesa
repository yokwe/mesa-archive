-- File: MailReadOps.mesa - Last edited by:-- AlHall	 1-Aug-84 22:53:50-- Wobber	14-Nov-83 14:43:07-- PLK    	22-Sep-83 18:40:53-- Sikorski	10-May-82 16:37:31-- RKJ     	11-Aug-82 20:24:35-- BGY     	22-Apr-86 17:26:04DIRECTORY  Environment USING [Block],  FormSW USING [ProcType],  MailFile USING [ErrorCode, Handle, MsgNumber, nullMessage],  MailSend USING [ReplyToFlag],  MailTransfer USING [AddProc, Handle, PostProc],  MFile USING [Handle],  TextSink USING [Handle],  TextSource USING [Handle],  UserInput USING [StringProcType],  UserTerminal USING [Beep],  Window USING [Handle],  WindowFont USING [Handle];MailReadOps: DEFINITIONS IMPORTS UserTerminal  =  BEGIN  -- Types and Constants --  MessageState: TYPE = {    seen, deleted, undeleted, moved, newFlag, notSeen, current,    attachments, noAttachments};  Operation: TYPE = {none, move, delete, undelete, display, forward};  Orientation: TYPE = {portrait, landscape};  SendReason: TYPE = {answer, newForm, forward};  Sides: TYPE = {printerDefault, singleSided, doubleSided};  Transport: TYPE = {GV, NS};  --  GV = Grapevine, NS = Network Systems.  FormatType: TYPE = {interpress82};  Commands: TYPE = {display, delete, answer, append, file, hardcopy,    undelete, forward, options, sort, classes, newMail, expunge, newForm,    move, moveTo};  ForceReason: TYPE = {mandatory, ifConvenient, didSomething};  RiddanceOps: TYPE = {expunge, move};  Data: TYPE = LONG POINTER TO DataObject;  cacheSize: CARDINAL = 4;  DataObject: TYPE = RECORD [    z: UNCOUNTED ZONE,    condition: CONDITION,    toolW, msgSW, formSW, bodySW, tocSW, optionW: Window.Handle ¬ NIL,    currentDisplayed: MailFile.MsgNumber ¬ MailFile.nullMessage,    msgFont, tocFont: WindowFont.Handle ¬ NIL,    firstSelect, lastSelect: MailFile.MsgNumber ¬ MailFile.nullMessage,    newMessage: MailFile.MsgNumber ¬ MailFile.nullMessage,    cache: ARRAY [0..cacheSize) OF CacheEntry ¬ ALL[[]],    mailFileName, moveToFileName: LONG STRING ¬ NIL,    mailHints: LONG POINTER TO MailHints ¬ NIL,    tocBuffer: LONG POINTER ¬ NIL,    inTocBuffer: MailFile.MsgNumber ¬ MailFile.nullMessage,    forceCount: CARDINAL ¬ 0,    fileChoice: CARDINAL ¬ 0,    busy: BOOLEAN ¬ FALSE,    nilToc: BOOLEAN ¬ FALSE,    doingRetrieve: BOOLEAN ¬ FALSE,    needReplyTo: MailSend.ReplyToFlag ¬ stop,    pioneer: BOOLEAN ¬ FALSE,  -- can tell by the arrows in the back    newMailPending: BOOLEAN ¬ FALSE,    emptyMailBoxes: BOOLEAN ¬ FALSE,    newMailOnActivate: BOOLEAN ¬ FALSE,    mailHintsReady: BOOLEAN ¬ FALSE,    mailHintsBusy: BOOLEAN ¬ FALSE,    displayOnNewMail: BOOLEAN ¬ FALSE,        selectInTocWindow, autoDisplay,     flushRemote: BOOLEAN ¬ TRUE,    allAttachments: BOOLEAN ¬ FALSE,    fileOutput: BOOLEAN ¬ FALSE,    tocLines: CARDINAL ¬ 6,    tocSource, bodySource: TextSource.Handle ¬ NIL,    tocSink: TextSink.Handle ¬ NIL,    rHandle: MailTransfer.Handle ¬ NIL,    classFlagArg: LONG STRING ¬ NIL,    fontNames: ARRAY Orientation OF LONG STRING ¬ [NIL, NIL],    format: FormatType ¬ interpress82,    hardcopyOutputFiles: LONG STRING ¬  NIL,    hardcopyUserName: LONG STRING ¬ NIL,    orientation: Orientation ¬ portrait,    printerNames: LONG STRING ¬ NIL,    separatePages: BOOLEAN ¬ TRUE,    sides: CARDINAL ¬ 1,    showEnvelope: BOOLEAN ¬ FALSE,    expandPvtDLs: BOOLEAN ¬ FALSE,    forwardForm: LONG STRING ¬ NIL,    newForm: LONG STRING ¬ NIL,    answerForm: LONG STRING ¬ NIL,    transport: Transport ¬ NS    ];  CacheEntry: TYPE = RECORD [    file: MFile.Handle ¬ NIL,    mf: MailFile.Handle ¬ NIL,    refCount: NATURAL ¬ 0,    current: BOOLEAN ¬ FALSE,    useTime: LONG CARDINAL ¬ 0];  MailHints: TYPE = RECORD [    names: SEQUENCE length: CARDINAL OF LONG STRING];  BackgroundProc: TYPE = PROC [data: Data]    RETURNS [newFirstTOC: MailFile.MsgNumber, normalFinish: BOOLEAN ¬ TRUE];<<  needPrint is raised by Hardcopy if the "Print" program is not loaded when	 Hardcopy is called and thus no hard copy can be output.	 Before raising the signal, Hardcopy posts a warning message telling the	 user to load "Print".    badOutputFileName is raised by Hardcopy if the file named in	data.hardcopyOutputFiles[data.format], i.e. the file to which hardcopy	output will be directed, cannot be opened with Write access for whatever	reason.>>  HardcopyErrorCode: TYPE = {badOutputFileName, needPrint};  HardcopyError: ERROR [code: HardcopyErrorCode];  PollingInterval: CARDINAL = 150;  -- (seconds)  data: Data;    defaultMailFile: LONG STRING;  mailFileExtension: LONG STRING;  mailFilePattern: LONG STRING;  showEnvelopeString: LONG STRING;  toolName: LONG STRING;    --  --PROCEDURES  --  AddExtensionIfNeeded: PROCEDURE [    s: LONG POINTER TO LONG STRING, ext: LONG STRING, sw: Window.Handle,    index: CARDINAL];  AppendMail: PROC [    data: Data, post: MailTransfer.PostProc,    printError: PROC [MailFile.ErrorCode]]    RETURNS [newFirstTOC: MailFile.MsgNumber, normalFinish: BOOLEAN ¬ TRUE];  Beep: PROC = INLINE {UserTerminal.Beep[2000, 100]; };  -- from SoundGenerator  Boop: PROC = INLINE {UserTerminal.Beep[300, 200]; };  -- from SoundGenerator  CommandProc: FormSW.ProcType;  CheckBusy: PROCEDURE [data: Data] RETURNS [BOOLEAN];  DeleteData: PROCEDURE;  CreateData: PROCEDURE RETURNS [Data];  DoneWithDataCopy: PROC [data: Data];  FirstTOCMessage: PROCEDURE [mf: MailFile.Handle, lines: CARDINAL]    RETURNS [MailFile.MsgNumber];  MarkMessage: PROCEDURE [    mf: MailFile.Handle, msg: CARDINAL, data: Data,    as: MessageState, char: CHARACTER ¬ NULL];    MessageInvisible: PROCEDURE [mf: MailFile.Handle,    message: MailFile.MsgNumber]    RETURNS [invisible: BOOLEAN];    NearestVisibleMessage: PROCEDURE [mf: MailFile.Handle,    msg: MailFile.MsgNumber, firstTryBackward: BOOLEAN ¬ FALSE]    RETURNS [visibleMessage: MailFile.MsgNumber];  ReadText: PROC [    selnLen: LONG CARDINAL, add: MailTransfer.AddProc,    post: MailTransfer.PostProc];  -- selnLen > 0  TOCLine: PROCEDURE [    data: Data, mf: MailFile.Handle, msg: MailFile.MsgNumber]    RETURNS [Environment.Block];  TOCPosition: PROCEDURE [mf: MailFile.Handle, msg: MailFile.MsgNumber]    RETURNS [LONG CARDINAL];  TOCPositionToMsg: PROCEDURE [mf: MailFile.Handle, pos: LONG CARDINAL]    RETURNS [MailFile.MsgNumber];  TOCSourceCreate: PROCEDURE [data: Data, mf: MailFile.Handle]    RETURNS [TextSource.Handle];  TOCSinkCreate: PROCEDURE [data: Data, font: WindowFont.Handle]    RETURNS [TextSink.Handle];      TOCStringProc: UserInput.StringProcType;  FreeMailFile: PROCEDURE [data: Data, mf: MailFile.Handle];  GetMailFile: PROCEDURE [    data: Data, name: LONG STRING, createIt: BOOLEAN, noWarn: BOOLEAN ¬ FALSE]    RETURNS [MailFile.Handle];  GetCurrent: PROCEDURE [data: Data] RETURNS [MailFile.Handle];  NewCurrent: PROCEDURE [data: Data, mf: MailFile.Handle];  HaveCurrent: PROCEDURE [data: Data] RETURNS [BOOLEAN];  Hardcopy: BackgroundProc;  Post: MailTransfer.PostProc;    ForceOut: PROC [data: Data, mf: MailFile.Handle, reason: ForceReason];  END.  