-- Copyright (C) 1984  by Xerox Corporation. All rights reserved. --Last edit by JAC         5-Nov-84 14:18:43DIRECTORY  DsyAssembler,  DsyModule;    DsyExpressionTablesImplB: PROGRAM EXPORTS DsyAssembler, DsyModule =   BEGIN OPEN DsyAssembler;      -- operation = plus  patternOpAPlusB: PUBLIC ARRAY [0..20) OF ExpressionPattern;  patternOpXPlusCI: PUBLIC ARRAY [0..9) OF ExpressionPattern;  -- operation = minus  patternOpminus: PUBLIC ARRAY [0..19) OF ExpressionPattern;  patternOpmpy: PUBLIC ARRAY [0..14) OF ExpressionPattern;  patternAssignR: PUBLIC Pattern;  patternAssignD: PUBLIC Pattern;  patternAssignAU8: PUBLIC Pattern;  patternAssignAU16: PUBLIC Pattern;  patternAssignAL16: PUBLIC Pattern;  patternAssignCSBank: PUBLIC Pattern;  patternAssignStk: PUBLIC Pattern;  patternAssignQ: PUBLIC Pattern;  patternAssignQSp1: PUBLIC Pattern;  patternAssignCIP: PUBLIC Pattern;  patternAssignTimerHigh: PUBLIC Pattern;  patternAssignTimerLow: PUBLIC Pattern;  patternAssignPrescaler: PUBLIC Pattern;  patternAssignStkMinus2: PUBLIC Pattern;  patternAssignStkMinus1: PUBLIC Pattern;  patternAssignStkZero: PUBLIC Pattern;  patternAssignStkPlus1: PUBLIC Pattern;  patternAssignA: PUBLIC Pattern;  patternCin0: PUBLIC Pattern;  patternCin1: PUBLIC Pattern;  patternCinX: PUBLIC Pattern;    InitGlobalExpTablesB: PUBLIC PROCEDURE =   BEGIN     -- operation = plus  patternOpAPlusB ¬ [    [[bBus, aBus], [op: zero, rB: arg1, rA: arg2, alu: aPlusB]],    [[bBus, aBus], [op: three, imu: value, iml: value, hiByte: value, rA: arg2, alu: aPlusB]],    [[bBus, aBus], [op: two, aAdr: value, aiu: value, ail: value, ac: value, om: value]],  --ib + A     [[bBus, aBus], [op: two, aAdr: value, aiu: value, ail: value, ac: value, om: value]],        [[aBus, bBus], [op: zero, rA: arg1, rB: arg2, alu: aPlusB]],     [[aBus, bBus], [op: three, rA: arg1, imu: value, iml: value, hiByte: value, alu: aPlusB]],    [[aBus, bBus], [op: two, aAdr: value, aiu: value, ail: value, ac: value, om: value]],  --ib + A    [[aBus, bBus], [op: two, aAdr: value, aiu: value, ail: value, ac: value, om: value]],    [[zero, aBus], [op: zero, rB: arg1, rA: arg2, alu: aPlusB]],    [[zero, aBus], [op: three, imu: value, iml: value, hiByte: value, rA: arg2, alu: aPlusB]],    --encodes ib.high + A    [[zero, aBus], [op: two, aAdr: value, aiu: value, ail: value, ac: value, om: value]],    [[zero, bBus], [op: zero, rA: arg1, rB: arg2, alu: aPlusB]],    [[zero, bBus], [op: three, rA: arg1, imu: value, iml: value, hiByte: value, alu: aPlusB]],    [[aBus, zero], [op: zero, rA: arg1, rB: arg2, alu: aPlusB]],    [[aBus, zero], [op: three, rA: arg1, imu: value, iml: value, hiByte: value, alu: aPlusB]],      --encodes A + ib.high    [[aBus, zero], [op: two, aAdr: value, aiu: value, ail: value, ac: value, om: value]],    [[bBus, zero], [op: zero, rB: arg1, rA: arg2, alu: aPlusB]],    [[bBus, zero], [op: three, imu: value, iml: value, hiByte: value, rA: arg2, alu: aPlusB]],    [[zero, zero], [op: zero, rA: arg1, rB: arg2, alu: aPlusB]],     [[zero, zero], [op: three, rA: arg1, imu: value, iml: value, hiByte: value, alu: aPlusB]]];    patternOpXPlusCI ¬ [    [[bBus, zero], [op: zero, rB: arg1, alu: bPlusCI]],    [[bBus, zero], [op: three, imu: value, iml: value, hiByte: value, alu: bPlusCI]],     [[aBus, zero], [op: zero, rA: arg1, alu: aPlusCI]],     [[aBus, zero], [op: three, rA: arg1, alu: aPlusCI]],    [[aBus, zero], [op: two, aAdr: value, aiu: value, ail: value, ac: value, om: value]],     [[zero, zero], [op: zero, rA: arg1, alu: aPlusCI]],     [[zero, zero], [op: three, rA: arg1, alu: aPlusCI]],    [[zero, zero], [op: one, rB: arg1, alu: bPlusCI]],    [[zero, zero], [op: three, imu: value, iml: value, hiByte: value, alu: bPlusCI]]];  -- operation = minus  patternOpminus ¬ [    [[bBus, aBus], [op: zero, rB: arg1, rA: arg2, alu: bMinusA]],    [[bBus, aBus], [op: three, imu: value, iml: value, hiByte: value, rA: arg2, alu: bMinusA]],     [[aBus, bBus], [op: zero, rA: arg1, rB: arg2, alu: aMinusB]],     [[aBus, bBus], [op: three, rA: arg1, imu: value, iml: value, hiByte: value, alu: aMinusB]],    [[aBus, bBus], [op: zero, rA: arg1, rB: arg2, alu: aMinusB]],    [[aBus, bBus], [op: two, aAdr: value, aiu: value, ail: value, ac: value, om: value]],    [[bBus, zero], [op: zero, rB: arg1, rA: arg2, alu: bMinusA]],    [[bBus, zero], [op: three, imu: value, iml: value, hiByte: value, rA: arg2, alu: bMinusA]],    [[zero, aBus], [op: zero, rB: arg1, rA: arg2, alu: bMinusA]],    [[zero, aBus], [op: three, imu: value, iml: value, hiByte: value, rA: arg2, alu: bMinusA]],    [[aBus, zero], [op: zero, rA: arg1, rB: arg2, alu: aMinusB]],     [[aBus, zero], [op: three, rA: arg1, imu: value, iml: value, hiByte: value, alu: aMinusB]],     [[aBus, zero], [op: two, aAdr: value, aiu: value, ail: value, ac: value, om: value]],  --encodes A - 1 where 1 is treated as the carry in    [[zero, bBus], [op: zero, rA: arg1, rB: arg2, alu: aMinusB]],     [[zero, bBus], [op: three, rA: arg1, imu: value, iml: value, hiByte: value, alu: aMinusB]],    [[zero, zero], [op: zero, rA: arg1, rB: arg2, alu: aMinusB]],     [[zero, zero], [op: three, rA: arg1, imu: value, iml: value, hiByte: value, alu: aMinusB]],     [[zero, zero], [op: zero, rA: arg1, rB: arg2, alu: bMinusA]],     [[zero, zero], [op: three,  rA: arg1, imu: value, iml: value, hiByte: value, alu: bMinusA]]];    patternOpmpy ¬ [    [[aBus, bBus], [op: zero, rA: arg1, rB: arg2, alu: mpy]],    [[aBus, bBus], [op: three, rA: arg1, imu: value, iml: value, hiByte: value, alu: mpy]],    [[bBus, aBus], [op: zero, rB: arg1, rA: arg2, alu: mpy]],    [[bBus, aBus], [op: three, rA: arg2, imu: value, iml: value, hiByte: value, alu: mpy]],     [[bBus, zero], [op: zero, rB: arg1, rA: arg2, alu: mpy]],    [[bBus, zero], [op: three, imu: value, iml: value, hiByte: value, rA: arg2, alu: mpy]],    [[aBus, zero], [op: zero, rA: arg1, rB: arg2, alu: mpy]],    [[aBus, zero], [op: three, rA: arg1, imu: value, iml: value, hiByte: value, alu: mpy]],    [[zero, aBus], [op: zero, rB: arg1, rA: arg2, alu: mpy]],    [[zero, aBus], [op: three, rA: arg2, imu: value, iml: value, hiByte: value, alu: mpy]],    [[zero, bBus], [op: zero, rA: arg1, rB: arg2, alu: mpy]],    [[zero, bBus], [op: three, rA: arg1, imu: value, iml: value, hiByte: value, alu: mpy]],    [[zero, zero], [op: zero, rA: arg1, rB: arg2, alu: mpy]],    [[zero, zero], [op: three, rA: arg1, imu: value, iml: value, hiByte: value, alu: mpy]]];  patternAssignR ¬ [rD: sameAsrB];      patternAssignD ¬  [rD: dFile];    patternAssignAU8 ¬ [rD: aUpper8];    patternAssignAU16 ¬ [rD: aUpper16];    patternAssignAL16 ¬ [rD: aLower16];      patternAssignCSBank ¬ [rD: csBank];      patternAssignStk ¬[rD: stkPtr];      patternAssignQ ¬ [rD: Q];    patternAssignQSp1 ¬ [sp1: assignQ];    patternAssignCIP ¬ [rD: CIP];    patternAssignTimerHigh ¬ [rD: timerHigh];    patternAssignTimerLow ¬ [rD: timerLow];    patternAssignPrescaler ¬ [rD: prescaler];    patternAssignStkMinus2 ¬ [rD: stkMinus2];    patternAssignStkMinus1 ¬ [rD: stkMinus1];    patternAssignStkZero ¬ [rD: stkZero];    patternAssignStkPlus1 ¬ [rD: stkPlus1];  patternCin0 ¬ [ci: zero];  patternCin1 ¬ [ci: one];    patternCinX ¬ [ci: x];  END;  --  of Procedure InitGlobalExpTables  END...  --Log of last edit:--JAC   	19-Oct-84 14:03:02	0 - Q encodes alu operation is aMinusB not bMinusA--JAC   	 5-Nov-84 14:18:55	fixed arrows for Mesa 11.1