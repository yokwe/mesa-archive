{ --	Copyright (C) 1984 by Xerox Corporation.  All rights reserved. -- Last edit by  -- JAC      2-Jun-86 17:40:53 saved MDu and MDv in DaisyKernel.mc -- JAC      8-Apr-86 18:34:31 to work around SChip bug, put a 0 in memory location mailbox+4 when no longer in kernel -- JAC      9-Mar-85 17:33:03 mailbox no longer quadword aligned -- SaveMD.mc,            AYC   ,  7-Nov-84 18:44:59 -- from SiriusKernel.mc, FXB   , 24-Apr-84 16:03:25 --  When the IOP finds that Sirius has executed a breakpoint or the IOP has halted Sirius and wants to examine its state the IOP overlays the following over the kernel and causes Sirius to execute it.  NIA = InitMailBox, at[0FE0]; NIAp2Hold = InitMailBox + 1, at[0FE1] }Reserve[0,0FDF];InitMailBox:			{Save aMailBox in raSaveHi and raSaveLo}	raSaveHi ¬ aMailBox.page, at[0FE0];	raSaveLow ¬ aMailBox.low, at[0FE1]; 	{aMailBox ¬ address of main memory mailbox}		aMailBox.low ¬ wordOfMainMemoryMailBox;	aMailBox.low ¬ aMailBox.low or lowPageOfMainMemoryMailBox;	aMailBox.high ¬ hiPageOfMainMemoryMailBox;		Noop;		{aMailBox now contains the address of the mainMemoryMailBox}		{write  values of U and V registers into main memory}	MAR ¬ [aMailBox + 1], Write, c1; 	MDR ¬ dKtemp, CANCELBR[$,1], LOOPHOLE[wok], c2;	dKtemp ¬ rdSave, c3;     	MAR ¬ [aMailBox + 2], Write, c1;	MDR ¬ dKernel, CANCELBR[$,1], LOOPHOLE[wok], c2;	dKernel ¬ rdKernelSave, c3; 	MAR ¬ [aMailBox + 3], Write, c1;	MDR ¬ dKernel, CANCELBR[$,1], LOOPHOLE[wok], c2;	Noop, c3;		MAR ¬ [aMailBox + 4], Write, c1;	MDR ¬ aMailBox.low, CANCELBR[$,1], LOOPHOLE[wok], c2;	Noop, c3;	Wait:	Noop, GOTO[Wait];