-- NSFileControlInternal, Copyright (C) Xerox Corporation 1983. All rights reserved.-- Last edited by Ciccone: 19-Dec-83 10:47:30-- Overview: File system internal configuration and control.DIRECTORY  Auth USING [Credentials, Verifier],  NSFile USING [AccessEntryType, Session],  NSFileControl USING [MembershipStatus],  NSName USING [Name],  NSSession USING [ClientID],  NSString USING [String];NSFileControlInternal: DEFINITIONS =  BEGIN OPEN NSFileControl;  --   -- --   -- --   --  --   --  -- TYPES :  --   -- --   -- --   --  --   --    AuthenticateProc: TYPE =    PROCEDURE [      serviceName: NSName.Name, credentials: Auth.Credentials,      verifier: Auth.Verifier, z: UNCOUNTED ZONE _ NIL]    RETURNS [initiator: NSName.Name, replyVerifier: Auth.Verifier];  -- A procedure capable of authenticating credentials and verifiers received for this system; if a valid zone is supplied, the name of the initiator and an appropriate reply verifier should be returned as well.  --   -- --   -- --   --  --   --  -- CONSTANTS :  --   -- --   -- --   --  --   --  clientID: READONLY NSSession.ClientID;    --   -- --   -- --   --  --   --  -- OPERATIONS :  --   -- --   -- --   --  --   --   -- Group membership  FlushMembershipCache: PROCEDURE;  -- Forget about any cached information regarding group memberships; subsequent use of file system procedures begin adding to the cache anew.    UserIsMember: PROCEDURE [    key: NSString.String, type: NSFile.AccessEntryType, session: NSFile.Session,    tryHard: BOOLEAN] RETURNS [status: MembershipStatus];  --  Determine whether the user associated with session is within the class identified by key having the specified type.  This is done by invoking the currently registered MembershipProc (see RegisterMembershipProc). If tryHard is FALSE, only information cached from previous evaluations is used (only positive results are remembered); otherwise the registered membership procedure is used to determine the result.  This operation raises NSFile.Error[session[sessionInvalid]] if the supplied session is not valid; session must already have been entered by the client.    -- Authentication    Authenticate: PROCEDURE [    serviceName: NSName.Name, credentials: Auth.Credentials,    verifier: Auth.Verifier, z: UNCOUNTED ZONE _ NIL]    RETURNS [initiator: NSName.Name, replyVerifier: Auth.Verifier];  -- Invoke the current authentication procedure to validate the credentials and verifier pair; if a zone is supplied, the initiator's name and an appropriate reply verifier are returned (these must be freed by the client); otherwise, these can be ignored.    RegisterAuthenticationProc: PROCEDURE [authProc: AuthenticateProc];  -- Register the supplied authentication proc to be used in authenticating client credentials.  If no other authentication procedure is registered, a default is provided which always reports NSFile.Error[[service[cannotAuthenticate]].  END.  -- of NSFileControlInternal LOG  ( date - person - action )November 3, 1983 - Hanzel - Created.November 7. 1983 - Hanzel - Add plug-in for authentication.November 28, 1983 - Hanzel - Define Authenticate; provide for reply verifier in authentication scheme.19-Dec-83 10:51:32 - Ciccone - Added serviceName parameter to AuthenticateProc and Authenticate; moved in clientID from FilingSession.