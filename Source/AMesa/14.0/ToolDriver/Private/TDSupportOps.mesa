-- File: TDSupportOps.mesa - last edit:-- Mark: 18-Mar-81 17:40:45-- Mike on: 11-Jan-82  9:54:28DIRECTORY  FormSWDriver USING [BuiltInValue, ItemSpecObject, SBuiltIn],  Window USING [Handle];  TDSupportOps: DEFINITIONS =  BEGIN  -- Global data  defaultTool, defaultSubwindow: LONG STRING;  interpreterStack: LONG POINTER TO Stack;  stackPtr: StackPtr;  formSWItem: FormSWItem;  relation: Relation;    scanState: ScanState;  labelToFind: LONG STRING;  loopDepth: CARDINAL;  idCount: CARDINAL;    globalTop, lGlobalTop: CARDINAL;  -- TYPEs  Handle: TYPE = LONG POINTER TO Object;  ObjectType: TYPE = {formSWItem, builtIn};  Object: TYPE = RECORD [    SELECT type: ObjectType FROM    formSWItem => [pi: FormSWItem],    builtIn => [b: FormSWDriver.BuiltInValue]    ENDCASE];      StackPtr: TYPE = CARDINAL [0..maxStackSize];  Stack: TYPE = ARRAY (FIRST[StackPtr]..LAST[StackPtr]] OF Object;    IOMode: TYPE = {in, out};    ScanMode: TYPE = {exit, if, normal};  ScanState: TYPE = RECORD [    mode: ScanMode _ normal,    info: CARDINAL _ nullScanInfo];    -- If tool or sw are NIL, use the defaults, otherwise script explicitly  -- supplied the fields.  FormSWItem: TYPE = RECORD[tool, sw, tag: LONG STRING _ NIL, idCount: CARDINAL _ 0];    Relation: TYPE = {equal, notEqual};  -- Constants  maxStackSize: CARDINAL = 10;  nullScanInfo: CARDINAL = LAST[CARDINAL];  -- PROCEDUREs  DecrStackPtr: PROCEDURE;  IncrStackPtr: PROCEDURE;    Pop: PROCEDURE RETURNS [h: Handle];  PopBool: PROCEDURE RETURNS [b: BOOLEAN];  PopFormSWItem: PROCEDURE RETURNS [pf: LONG POINTER TO FormSWItem];  PopNumber: PROCEDURE [exactRepOnly: BOOLEAN] RETURNS [c: CARDINAL];  PopString: PROCEDURE RETURNS [sbi: FormSWDriver.SBuiltIn];  PopSW: PROCEDURE RETURNS [sw: Window.Handle];    PushBool: PROCEDURE [b: BOOLEAN];  PushFormSWItem: PROCEDURE [pp: LONG POINTER TO FormSWItem];  PushNumber: PROCEDURE [c: CARDINAL];  PushString: PROCEDURE [str: LONG STRING, inHeap: BOOLEAN];    ActivateTool: PROCEDURE;  AppendIO: PROCEDURE [mode: IOMode];  BuiltInFunction: PROCEDURE [index: UNSPECIFIED];  CallDebugger: PROCEDURE;  EscapeCall: PROCEDURE [functionName: LONG STRING];  FileCreated: PROCEDURE RETURNS [exists: BOOLEAN];  InvokeMCR: PROCEDURE;  IsVisible: PROCEDURE;  LastMessage: PROCEDURE RETURNS [s: LONG STRING];  ModifyItem: PROCEDURE;  Pause: PROCEDURE;  SetDisplayState: PROCEDURE;  SetSelection: PROCEDURE;  SetWindowBox: PROCEDURE;  SubString: PROCEDURE RETURNS [s: LONG STRING];  Wait: PROCEDURE;  WindowOnTop: PROCEDURE;  -- Random utilities  AddClientProcedure: PROCEDURE [name: LONG STRING, proc: PROCEDURE];  DeleteClientProcedure: PROCEDURE [name: LONG STRING];    CleanupStorage: PROCEDURE;  FreeFormSWItem: PROCEDURE [pp: LONG POINTER TO FormSWItem];  InitStmtState: PROCEDURE;    LocateFormSWItem: PROCEDURE [pp: LONG POINTER TO FormSWItem]    RETURNS [dest: FormSWDriver.ItemSpecObject];  LocateSW: PROCEDURE [tool, subwindow: LONG STRING]    RETURNS [sw: Window.Handle];      ReservedNames: PROCEDURE [    sourceTemp: Handle, destTemp: LONG POINTER TO FormSWItem]    RETURNS [set: BOOLEAN];      StringFromHandle: PROCEDURE [sourceHandle: Handle]    RETURNS [manufactured: BOOLEAN, str: LONG STRING];    -- Error reporting  AppendErrorLoc: PROCEDURE [msg: LONG STRING];  AppendToolAndSubwindow: PROCEDURE [msg, tool, subwindow: LONG STRING];    RaiseNoSuchItem: PROCEDURE [tool, subwindow, tag: LONG STRING];  RaiseNoSuchTool: PROCEDURE [tool, subwindow: LONG STRING];  END.