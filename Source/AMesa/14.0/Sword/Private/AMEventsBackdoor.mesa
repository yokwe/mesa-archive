-- Copyright (C) 1986  by Xerox Corporation. All rights reserved. -- AMEventsBackdoor.mesaDIRECTORYAMEvents,PrincOps USING [StateVector, LocalFrameHandle, PrefixHandle, BytePC],WorldVM,WorldVMOps;AMEventsBackdoor: DEFINITIONS = BEGINLFHandle: TYPE = AMEvents.LFHandle;PrefixHandle: TYPE = AMEvents.PrefixHandle;BytePC: TYPE = AMEvents.BytePC;BYTE: TYPE = WorldVMOps.BYTE;GuestProcsRec: TYPE = RECORD [  IsGuestProcess: PROC [] RETURNS [isGuest: BOOL],  disableGuest: PROC [BOOL ¬ TRUE],  guestLocalEvent: GuestLocalEventProc];GuestLocalEventProc: TYPE = PROC [  event: AMEvents.Event,  f: LFHandle,  stack: POINTER TO PrincOps.StateVector,  return: BOOL ¬ FALSE]  RETURNS [debugLocally: BOOL ¬ FALSE];RegisterGuestProcs: PROC [newProcs: LONG POINTER TO GuestProcsRec];BreakEvent: PROC [world: WorldVM.World, localFrame: LFHandle,  instByteReceptacle: --client-- LONG POINTER TO BYTE]   RETURNS [break: AMEvents.BreakID];  ContinueFromBreak: PROC[  world: WorldVM.World, cb: PrefixHandle, pc: BytePC,  instByteReceptacle: --client-- LONG POINTER TO BYTE];  FlushBreaks: PROC [world: WorldVM.World];BreakID: TYPE = LONG POINTER TO BreakRec;BreakRec: TYPE = RECORD[  rest: BreakID ¬ NIL,  world: WorldVM.World,  cb: PrefixHandle,  pc: BytePC,  oldByte: BYTE,  clientData: LONG POINTER];ConditionTrue: PUBLIC PROC[lFrame: PrincOps.LocalFrameHandle,  codeBase: PrincOps.PrefixHandle, pc: PrincOps.BytePC, sv: POINTER TO dst PrincOps.StateVector]   RETURNS[BOOLEAN];END.