-- File: AMUseful.mesa - last edit:-- Litman              25-May-87 11:54:34-- Copyright (C) 1987 by Xerox Corporation. All rights reserved.DIRECTORY  AMLoadstate USING [Index, nullIndex],  BcdDefs USING [CTIndex, CTNull, MTIndex, Namee, NameRecord, VersionStamp],  BcdOps USING [BcdBase],  WorldVM USING [World],  WorldVMOps USING [LongGlobalFrameHandle];AMUseful: DEFINITIONS = {  World: TYPE = WorldVM.World;  GFHandle: TYPE = WorldVMOps.LongGlobalFrameHandle;  ConfigRecord: TYPE = RECORD[index: AMLoadstate.Index, cti: BcdDefs.CTIndex];  NullConfigRecord: ConfigRecord = [AMLoadstate.nullIndex, BcdDefs.CTNull];  OuterConfig: BcdDefs.CTIndex = FIRST[BcdDefs.CTIndex];  -- Gets name of module from gf.  ModuleName: PROC[world: World, gf: GFHandle, name: LONG STRING];  -- Gets name of top level config that gf is contained in.  ConfigName: PROC[world: World, gf: GFHandle, name: LONG STRING];  -- Gets name of config within a bcd.  CtiName: PROC[world: World, config: ConfigRecord, name: LONG STRING];  WriteName: PROC[nameRecord: BcdDefs.NameRecord, bcd: BcdOps.BcdBase, target: LONG STRING];    -- returns first son config (if none, returns first module)  FirstSonConfig: PROC[world: World, index: AMLoadstate.Index, cti: BcdDefs.CTIndex] RETURNS[son: BcdDefs.Namee, level: CARDINAL];  -- returns sibling namee at lowest possible level  Sibling: PROC[world: World, index: AMLoadstate.Index, namee: BcdDefs.Namee] RETURNS[siblingIndex: AMLoadstate.Index, siblingNamee: BcdDefs.Namee, level: CARDINAL];    ModuleInConfig: PROC[world: World, gf: GFHandle, config: ConfigRecord] RETURNS[BOOLEAN];  ConfigInConfig: PROC[world: World, inner: ConfigRecord, outer: ConfigRecord] RETURNS[BOOLEAN];    Frame: PROC[world: World, name: LONG STRING] RETURNS [gf: GFHandle];  MultipleFrames: SIGNAL [list: FrameDesc]; -- If resumed, NIL is returned.  FrameDesc: TYPE = LONG DESCRIPTOR FOR READONLY ARRAY OF GFHandle;  Config: PROC[world: World, name: LONG STRING] RETURNS [config: ConfigRecord];  MultipleConfigs: SIGNAL [list: ConfigDesc]; -- If resumed, nullConfigRecord is returned.  ConfigDesc: TYPE = LONG DESCRIPTOR FOR READONLY ARRAY OF ConfigRecord;      -- mapping GlobalFrames and MTIndexes  MapConfigToReal: PROC[world: World, mti: BcdDefs.MTIndex, index: AMLoadstate.Index] RETURNS[gf: GFHandle];  MapRealToConfig: PROC[world: World, gf: GFHandle] RETURNS[index: AMLoadstate.Index, mti: BcdDefs.MTIndex];  VersionStamp: PROC[world: World, gf: GFHandle] RETURNS[version: BcdDefs.VersionStamp];  ModuleProc: TYPE = PROC [gf: GFHandle] RETURNS [stop: BOOLEAN];  ConfigProc: TYPE = PROC [config: ConfigRecord] RETURNS [stop: BOOLEAN];    EnumerateModules: PROC[world: World, proc: ModuleProc] RETURNS [gf: GFHandle];  EnumerateModulesInConfig: PROC[world: World, proc: ModuleProc, config: ConfigRecord] RETURNS [GFHandle];  EnumerateConfigsForModule: PROC[world: World, proc: ConfigProc, gf: GFHandle] RETURNS [ConfigRecord];    EnumerateConfigs: PROC[world: World, proc: ConfigProc] RETURNS [config: ConfigRecord];  EnumerateConfigsInConfig: PROC[world: World, proc: ConfigProc, config: ConfigRecord] RETURNS [ConfigRecord];    NoConfig: ERROR;  NoModule: ERROR;  }.