-- File: DebugToolC.mesa - last edit:-- Litman              22-Apr-87 23:45:58-- Copyright (C) 1987 by Xerox Corporation. All rights reserved.DIRECTORY  AMEvents USING [Kill, Screen],  AMLoadstate USING [Error],  AMModel USING [ChildProc, ContextChildren, ContextClass, ContextName, IsNullContext],  DebugToolOps USING [CheckContext, Output, UserAbort],  DObjet USING [Hand],  Format USING [Blanks, Line, Text],  Process USING [Detach];DebugToolC: PROGRAM  IMPORTS AMEvents, AMLoadstate, AMModel, DebugToolOps, Format, Process  EXPORTS DebugToolOps = {    ListLoadstate: PUBLIC PROC[d: DObjet.Hand] = {    Enum: AMModel.ChildProc = {      name: LONG STRING ¬ [60];      AMModel.ContextName[c, name, d.cardinalRadix];      Format.Line[DebugToolOps.Output, name, d];      RETURN[FALSE]};    Format.Line[DebugToolOps.Output, "\nLoadstate: "L, d];    [] ¬ AMModel.ContextChildren[d.rootContext, Enum      ! AMLoadstate.Error => {        Format.Line[DebugToolOps.Output, "Loadstate error!"L, d];	CONTINUE}];    Format.Line[DebugToolOps.Output, "End of Loadstate"L, d]};  ListContext: PUBLIC PROC[d: DObjet.Hand] = {    ENABLE ABORTED => CONTINUE;    level: CARDINAL ¬ 0;    Enum: AMModel.ChildProc = {      name: LONG STRING ¬ [60];      AMModel.ContextName[c, name, d.cardinalRadix];      Format.Blanks[DebugToolOps.Output, level*2, d];      Format.Line[DebugToolOps.Output, name, d];      IF DebugToolOps.UserAbort[d]       THEN {Format.Line[DebugToolOps.Output, "...aborted"L, d]; ERROR ABORTED};      IF AMModel.ContextClass[c] = model THEN {        level ¬ level + 1; 	[] ¬ AMModel.ContextChildren[c, Enum];	level ¬ level - 1};      stop ¬ FALSE};    Format.Text[DebugToolOps.Output, "\nContext: "L, d];    Format.Line[DebugToolOps.Output, d.context, d];    DebugToolOps.CheckContext[d];    IF AMModel.IsNullContext[d.modelContext]     THEN Format.Line[DebugToolOps.Output, " is invalid", d]    ELSE {      IF AMModel.ContextClass[d.modelContext] = prog       THEN [] ¬ Enum[d.modelContext]      ELSE [] ¬ AMModel.ContextChildren[d.modelContext, Enum];      Format.Line[DebugToolOps.Output, "End of Context"L, d]}};      Stop: PUBLIC PROC[d: DObjet.Hand] = {    d.stopCount ¬ d.stopCount + 1};  Kill: PUBLIC PROC[d: DObjet.Hand] = {    Process.Detach[FORK AMEvents.Kill[d.World]]};  Userscreen: PUBLIC PROC[d: DObjet.Hand] = {    Process.Detach[FORK AMEvents.Screen[d.World]]};  }.