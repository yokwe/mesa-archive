-- Copyright (C) 1985  by Xerox Corporation. All rights reserved. -- AMProcessBasic.mesaDIRECTORYPSB,WorldVM,WorldVMOps;AMProcessBasic: DEFINITIONS = {  LFHandle: TYPE = WorldVMOps.LongLocalFrameHandle;  GFHandle: TYPE = WorldVMOps.LongGlobalFrameHandle;  ControlLink: TYPE = WorldVMOps.ControlLink;  Process: TYPE = WorldVMOps.Process;  NullProcess: Process = WorldVMOps.NullProcess;    State: TYPE = {    ready, -- on the ready list (but not waitingSV or waitingCV)    waitingSV, -- ready (but not waitingCV), but no state vector available    waitingCV, -- "waiting" flag in PSB: indicates process is on some CV queue     -- "enterFailed" flag in PSB and not ready,     -- not faulted: waiting to enter a monitor    waitingML,     frameFault, pageFault, writeProtectFault, unknownFault, -- on a fault queue    dead, -- not a currently valid process    -- not dead, not waitngCV, not waitingML, not on ready list,     -- not on a fault queue    unknown,     -- these states aren't generated by this interface    uncaughtSignal, breakpoint, callDebugger };    StateArray: TYPE = PACKED ARRAY State OF BOOLEAN;     Faulted: TYPE = State[frameFault..unknownFault];  GFTable: TYPE = LONG POINTER TO GFTableObject; -- NIL => all modules  GFTableObject: TYPE = RECORD [count: CARDINAL ¬ 0, 	  seq: SEQUENCE max: CARDINAL OF GFHandle];	  Info: PROC[world: WorldVM.World,      process: Process,      freeze, thaw: BOOL,      fullStatus: BOOL,       filter: GFTable,      wantedStates: StateArray]    RETURNS[      state: State,      faultData: LONG CARDINAL,      priority: PSB.Priority,      frame: LFHandle,      frozenFrame: LFHandle,      topFrame: LFHandle];        Thaw: PROC[world: WorldVM.World, process: Process];  Abort: PROC[world: WorldVM.World, process: Process];  ReturnLink: PROC[world: WorldVM.World, frame: LFHandle,    process: Process ¬ NullProcess] RETURNS[link: ControlLink];  }..