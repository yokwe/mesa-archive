-- Copyright (C) 1985  by Xerox Corporation. All rights reserved. -- AMModelSectionImpl.mesaDIRECTORYAMHeap,AMModel,AMModelSection,AMUseful,WorldVM,String;AMModelSectionImpl: PROGRAM   IMPORTS AMHeap, AMUseful, String   EXPORTS AMModelSection = {  zone: UNCOUNTED ZONE = AMHeap.zone;  Section: TYPE = AMModel.Section;  SectionObj: TYPE = AMModel.SectionObj;  World: TYPE = WorldVM.World;  GFHandle: TYPE = AMModelSection.GFHandle;    WorldSection: PUBLIC PROC[world: World] RETURNS[s: Section] = {    RETURN[zone.NEW[SectionObj ¬ [world, world[]]]]};      ModelSection: PUBLIC PROC[world: World] RETURNS[s: Section] = {    RETURN[zone.NEW[SectionObj ¬ [world, model[]]]]};    InterfaceSection: PUBLIC PROC[world: World] RETURNS[s: Section] = {    RETURN[zone.NEW[SectionObj ¬ [world, interface[]]]]};    ProgramSection: PUBLIC PROC[world: World, gf: GFHandle]    RETURNS[s: Section] = {    moduleName: LONG STRING ¬ String.MakeString[zone, 60];    AMUseful.ModuleName[world, gf, moduleName];    RETURN[zone.NEW[SectionObj ¬ [world, prog[      moduleName: moduleName,       versionStamp: AMUseful.VersionStamp[world, gf],      gf: gf]]]]};      ProcSection: PUBLIC PROC[world: World, gf: GFHandle,     entryIndex: CARDINAL] RETURNS[s: Section] = {    RETURN[zone.NEW[SectionObj ¬ [world, proc[      prog: NARROW[ProgramSection[world, gf]],      entryPointIndex: entryIndex]]]]};      StmtSection: PUBLIC PROC[world: World, gf: GFHandle,     position: CARDINAL] RETURNS[s: Section] = {    RETURN[zone.NEW[SectionObj ¬ [world, statement[      prog: NARROW[ProgramSection[world, gf]],       sourcePosition: position]]]]};      FreeSection: PUBLIC PROC[s: Section] = {    WITH s SELECT FROM      prog => String.FreeString[zone, moduleName];      proc => FreeSection[prog];      statement => FreeSection[prog];      ENDCASE;    zone.FREE[@s]};    }..