-- grammar extracted from ITDIPack.mesa by PGS, 28-Apr-87  0:22||CHAIN ||LISTS||TABLE1  1  id  2  num  3  lnum  4  flnum  5  card  6  lcard  7  string  8  char  9  , 10  ; 11  ¬ 12  + 13  - 14  * 15  / 16  ^ 17  . 18  @ 19  $ 20  % 21  = 22  # 23  < 24  > 25  <= 26  >= 27  INTEGER 28  CARDINAL 29  CHARACTER 30  BOOLEAN 31  REAL 32  POINTER 33  DESCRIPTOR 34  LONG 35  TO 36  BASE 37  ABS 38  MAX 39  MIN 40  MOD 41  LENGTH 42  LOOPHOLE 43  SIZE 44  FIRST 45  LAST 46  TYPE 47  ) 48  ] 49  ( 50  [ 51  STRING 52  UNSPECIFIED 53  MEMORY 54  ! 55  \ 56  .. 57  '? 58  & 59  WORD 60  PROCEDURE 61  PROC 62  ERROR 63  SIGNAL 64  NIL 65  eof||TABLE2 66  goal 67  stmtlist 68  statementlist 69  statement 70  lhs 71  exp 72  interval 73  relation 74  typeexp 75  typeid 76  typecons 77  sum 78  addop 79  product 80  relationtail 81  relop 82  multop 83  factor 84  primary 85  prefixop 86  explist 87  typeop 88  desclist 89  qualifier 90  bounds 91  typeextractor||TABLE3id            tokenIDnum           tokenNUMlnum          tokenLNUMflnum         tokenFLNUMcard          tokenCARDlcard         tokenLCARDstring        tokenSTRchar          tokenCHAR-             tokenMINUS.             tokenDOT..            tokenDOTS=             tokenEQUAL<             tokenLESS<=            tokenLE>             tokenGREATER>=            tokenGEeof           endmarker||TABLE4  1     0  goal           ::= stmtlist \   2     1  stmtlist       ::= statementlist   3     1                   | statementlist ;   4     2  statementlist  ::= statementlist ; statement   5    83                   | statement   6     3  statement      ::= lhs ¬ exp   7     4                   | exp   8     5                   | exp '?   9     6                   | MEMORY interval  10     7                   | lhs interval  11     8                   | relation  12     9  typeexp        ::= id  13    82                   | typeid  14    82                   | typecons  15    82                   | typeextractor  16    10  typeid         ::= INTEGER  17    11                   | CARDINAL  18    12                   | CHARACTER  19    13                   | BOOLEAN  20    14                   | REAL  21    15                   | STRING  22    16                   | UNSPECIFIED  23    17                   | WORD  24    18                   | PROCEDURE  25    18                   | PROC  26    19                   | ERROR  27    20                   | SIGNAL  28    21                   | POINTER  29    22                   | id . id  30    23                   | id id  31    24                   | id typeid  32    25                   | id $ id  33    88                   | lnum $ id  34    26  typecons       ::= POINTER TO typeexp  35    26                   | @ typeexp  36    27                   | LONG typeexp  37    28  relation       ::= sum relationtail  38    28  sum            ::= sum addop product  39    82                   | product  40    29  addop          ::= +  41    30                   | -  42    31  relop          ::= =  43    32                   | #  44    33                   | <  45    34                   | <=  46    35                   | >  47    36                   | >=  48    37  product        ::= product multop factor  49    82                   | factor  50    38  multop         ::= *  51    39                   | /  52    40                   | MOD  53    41  factor         ::= - primary  54    82                   | primary  55    42  primary        ::= num  56    43                   | lnum  57    44                   | card  58    45                   | lcard  59    46                   | char  60    47                   | string  61    48                   | NIL  62    49                   | NIL [ typeexp ]  63    50                   | prefixop [ explist ]  64    51                   | typeop [ typeexp ]  65    52                   | @ lhs  66    53                   | DESCRIPTOR [ desclist ]  67    54                   | primary %  68    55                   | primary % ( typeexp )  69    82                   | lhs  70    87                   | flnum  71    56  lhs            ::= id  72    57                   | LOOPHOLE [ exp ]  73    58                   | LOOPHOLE [ exp , typeexp ]  74    59                   | MEMORY [ exp ]  75    60                   | id $ id  76    61                   | lnum $ id  77    82                   | ( exp )  78    82                   | lhs qualifier  79    62  qualifier      ::= [ explist ]  80    63                   | . id  81    64                   | ^  82    65  prefixop       ::= LONG  83    66                   | ABS  84    67                   | MIN  85    68                   | MAX  86    69                   | BASE  87    70                   | LENGTH  88    71  typeop         ::= SIZE  89    72                   | FIRST  90    73                   | LAST  91    74  interval       ::= [ bounds ]  92    75                   | [ bounds )  93    76                   | ( bounds ]  94    77                   | ( bounds )  95    78                   | [ exp ! exp ]  96    79  bounds         ::= exp .. exp  97    80  desclist       ::= exp , exp  98    81                   | exp , exp , typeexp  99    82                   | exp 100    82  exp            ::= sum 101    82  relationtail   ::= relop sum 102    83  explist        ::= exp 103    84                   | explist , exp 104    85                   | 105    86  typeextractor  ::= TYPE [ exp ] 106    86                   | & exp 