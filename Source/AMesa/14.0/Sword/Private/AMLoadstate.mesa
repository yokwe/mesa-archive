-- Copyright (C) 1986  by Xerox Corporation. All rights reserved. -- AMLoadstate.mesaDIRECTORYBcdOps,LoadStateFormat USING [ModuleInfo, BcdInfo, Index, nullIndex],PrincOps USING [GlobalFrameHandle],WorldVM USING [World];AMLoadstate: DEFINITIONS = {  Handle: TYPE = LONG POINTER TO Object;  Object: TYPE;    GFHandle: TYPE = PrincOps.GlobalFrameHandle;  ModuleInfo: TYPE = LoadStateFormat.ModuleInfo;  BcdInfo: TYPE = LoadStateFormat.BcdInfo;  Index: TYPE = LoadStateFormat.Index;  nullIndex: Index = LoadStateFormat.nullIndex;  ErrorCode: TYPE = {    invalidParameters, invalidAddress, versionMismatch, loadStateMissing,     bcdInfoMissing, moduleInfoMissing, moduleTableMissing, diskErrorInVMMap,     insufficientSpace, couldNotAcquireALoadedBcd, other};      local: Handle;  AcquireLoadstate: PROC[world: WorldVM.World] RETURNS[l: Handle];    DestroyLoadstate: PROC[l: Handle];    MapConfigToMth: PROCEDURE [l: Handle,    cgfi: NATURAL, index: Index] RETURNS [mth: BcdOps.MTHandle];      MapCgfiToMth: PROCEDURE [l: Handle,    cgfi: NATURAL, bcd: BcdOps.BcdBase] RETURNS [mth: BcdOps.MTHandle];  Error: ERROR [code: ErrorCode];    AcquireBcd: PROCEDURE [l: Handle, index: Index]     RETURNS [bcd: BcdOps.BcdBase];      GetAttributes: PROCEDURE [l: Handle]    RETURNS [nBcds, nModules: CARDINAL];    BcdProc: TYPE = PROC [bcdInfo: BcdInfo, index: Index] RETURNS [stop: BOOLEAN];    EnumerateBcds: PROC [l: Handle, proc: BcdProc, reverse: BOOLEAN]    RETURNS [BcdInfo, Index];      ModuleProc: TYPE = PROC [modInfo: ModuleInfo] RETURNS [stop: BOOLEAN];      EnumerateModules: PROCEDURE [l: Handle, proc: ModuleProc, reverse: BOOLEAN]     RETURNS [ModuleInfo];  EnumerateModulesInConfig: PROCEDURE [l: Handle, proc: ModuleProc, index: Index]    RETURNS [ModuleInfo];      MapConfigToReal: PROCEDURE [l: Handle, cgfi: NATURAL, index: Index]     RETURNS [gf: GFHandle];      MapRealToConfig: PROCEDURE [l: Handle, gf: GFHandle]     RETURNS [cgfi: NATURAL, index: Index];      MapRealToEnh: PROCEDURE [l: Handle, gf: GFHandle] RETURNS [enh: BcdOps.ENHandle];      }..