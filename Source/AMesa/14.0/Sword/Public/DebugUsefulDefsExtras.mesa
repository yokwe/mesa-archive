-- File: DebugUsefulDefsExtras.mesa - last edit:-- Litman              28-Apr-87 10:06:51-- Copyright (C) 1987 by Xerox Corporation. All rights reserved.DIRECTORYAlloc USING [Handle],AMLoadstate USING [Handle],AMEvents USING [ArgsOrResults, WordSeq],Format USING [StringProc],CommandList USING [BPError],BcdOps USING [ENHandle],IT USING [ModItem, Foo, BitAddress, EVIndex, BBHandle],PrincOps USING [BytePC, PrefixHandle, LocalFrameHandle],PrincOpsExtras2 USING [GFTHandle, ControlLink, LongGlobalFrameHandle],PSB USING [PsbIndex],Symbols USING [CBTIndex, MDIndex, HTIndex, CTXIndex, ISEIndex], SymbolTable USING [Handle];DebugUsefulDefsExtras: DEFINITIONS = {  GFHandle: TYPE = PrincOpsExtras2.GFTHandle;  ControlLink: TYPE = PrincOpsExtras2.ControlLink;  BytePC: TYPE = PrincOps.BytePC;  PrefixHandle: TYPE = PrincOps.PrefixHandle;  LFHandle: TYPE = PrincOps.LocalFrameHandle;    ModItem: TYPE = IT.ModItem;  Foo: TYPE = IT.Foo;  BitAddress: TYPE = IT.BitAddress;  EVIndex: TYPE = IT.EVIndex;  BBHandle: TYPE = IT.BBHandle;    -- from DebugUsefulDefs  FrameDesc: TYPE = LONG DESCRIPTOR FOR READONLY ARRAY OF GFHandle;  ConfigForFrame: PROC [gf: GFHandle, config: LONG STRING];  Enumerate: PROC [proc: PROC [GFHandle] RETURNS [BOOLEAN]] RETURNS [gf: GFHandle];  Name: PROC [name: LONG STRING, gf: GFHandle];  Frame: PROC [name: LONG STRING] RETURNS [GFHandle];  Started: PROC [GFHandle] RETURNS [BOOLEAN];  Valid: PROC [GFHandle] RETURNS [BOOLEAN];  Copied: PROC [GFHandle] RETURNS [BOOLEAN];  Original: PROC [new: GFHandle] RETURNS [old: GFHandle];  -- formerly from private interfaces  Numeric: PROC [s: LONG STRING] RETURNS [BOOLEAN];  MapRealToEnh: PROC [gf: GFHandle] RETURNS [enh: BcdOps.ENHandle];  NoFGT: VAR ERROR;  CrossJumped: PROC [gf: GFHandle] RETURNS [BOOLEAN];  FindFrame: PROC [gf: GFHandle] RETURNS [i: ModItem];  CBti: PROCEDURE [pc: BytePC, gf: GFHandle] RETURNS [cbti: Symbols.CBTIndex];  GFrameMdi: PROC [gf: GFHandle, fgt: BOOLEAN ¬ FALSE] RETURNS [Symbols.MDIndex];  OpenFile: PROC [gf: GFHandle, file: LONG STRING, hti: Symbols.HTIndex] RETURNS [syms: ModItem];  ResetSymbols: PROC[];  DerefProcDesc: PROC [cl: ControlLink] RETURNS [ControlLink];  GetControlLink: PROC [f: Foo] RETURNS [ControlLink];  SearchCtxList: PROC [hti: Symbols.HTIndex, ctx: Symbols.CTXIndex] RETURNS [sei: Symbols.ISEIndex];  MakeFoo: PROC[isei: Symbols.ISEIndex, ba: BitAddress ¬ [NIL, 0, FALSE], sizeInc: CARDINAL ¬ 0] RETURNS [f: Foo];  StringToHti: PROC[s: LONG STRING] RETURNS [Symbols.HTIndex];  EntryPC: PROC[gf: GFHandle, i: EVIndex] RETURNS[pc: BytePC];  ExitPC: PROC[cbti: Symbols.CBTIndex] RETURNS[pc: BytePC];  GetPc: PROC[gf: GFHandle, i: EVIndex] RETURNS[pc: BytePC];  SpecialDisplay: PROC [out: Format.StringProc, gf: GFHandle, pc: BytePC, load: BOOLEAN, msg: LONG STRING ¬ NIL, suppressErrors: BOOLEAN ¬ FALSE];      Open: PROC [mdi: Symbols.MDIndex, inner: PROC [SymbolTable.Handle]];  ApplyProcedure: PROC[control: ControlLink, args: ArgsOrResults, result: ArgsOrResults];  ArgsOrResults: TYPE = AMEvents.ArgsOrResults;  WordSeq: TYPE = AMEvents.WordSeq;    GetAlloc: PROC[] RETURNS[Alloc.Handle];  GetSym: PROC[] RETURNS[SymbolTable.Handle];  GetLoadstate: PROC[] RETURNS[AMLoadstate.Handle];  ShowType: PROC [s: LONG STRING, layout: BOOLEAN ¬ FALSE, output: Format.StringProc, clientData: LONG POINTER ¬ NIL];    EnumerateBBs: PROCEDURE [proc: PROC [BBHandle] RETURNS [BOOLEAN], gf: GFHandle] RETURNS [BBHandle];  FindBB: PROCEDURE [gf: GFHandle, pc: BytePC] RETURNS [bb: BBHandle];  FindBBNum: PROC [CARDINAL] RETURNS [BBHandle];  FindUserBB: PROCEDURE [ph: PrefixHandle, pc: BytePC] RETURNS [CARDINAL];  Conditionalize: PROCEDURE [BBHandle, LONG STRING];  BPFail: VAR ERROR [type: CommandList.BPError];    ProcessFrame: PROC [psb: PSB.PsbIndex] RETURNS [LFHandle];  ValidateF: PROC[lf: LFHandle] RETURNS[BOOLEAN];  FirstPsb: PROC[] RETURNS[PSB.PsbIndex];  NextPsb: PROC[psb: PSB.PsbIndex] RETURNS[PSB.PsbIndex];  LastPsb: PROC[] RETURNS[PSB.PsbIndex];    Previous: PROC[frame: LFHandle] RETURNS[LFHandle];  NoPrevious: SIGNAL [f: LFHandle];  Clobbered: SIGNAL [f: LFHandle];  NoAccessLink: SIGNAL [f: LFHandle];    NoSession: VAR ERROR; -- raised if the session has ended    GFlong: PROC[gf: GFHandle] RETURNS[PrincOpsExtras2.LongGlobalFrameHandle];  GFshort: PROC[gf: PrincOpsExtras2.LongGlobalFrameHandle] RETURNS[GFHandle];    }.