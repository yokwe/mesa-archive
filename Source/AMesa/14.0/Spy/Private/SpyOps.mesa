-- SpyOps.mesa, edited by-- JBD    	 9-Sep-86 17:34:34-- AXD    	24-Aug-83 18:16:21-- BXM  	23-Jan-82 22:05:44-- RXL  	 2-Nov-81 17:45:33DIRECTORY  Format: TYPE USING [StringProc],  GFHash: TYPE USING [Table],  PrincOps: TYPE USING [BytePC],  PrincOpsExtras2: TYPE USING [GFTHandle],  Process: TYPE USING [Priority],  SpyFormat: TYPE USING [Buckets, Count, MapBase, MapPos, ProcessAction],  SpyKernel: TYPE USING [],  String: TYPE USING [SubStringDescriptor],  Supervisor: TYPE USING [AgentProcedure],  Table: TYPE USING [Base, Selector],  Window: TYPE USING [Handle];  SpyOps: DEFINITIONS =  BEGIN    GFTHandle: TYPE = PrincOpsExtras2.GFTHandle;    formSW, fileSW, window: Window.Handle;  spyOn: BOOLEAN;  priorityToWatch: Process.Priority;  processes: LONG STRING;  processAction: SpyFormat.ProcessAction;  watchProcs: LONG STRING;  ignoreProcs: LONG STRING;    zeroData: BOOLEAN;  rebuildTables: BOOLEAN;  Base: PROC [Table.Selector] RETURNS [Table.Base];    KernelFrame: TYPE = LONG POINTER TO FRAME[SpyKernel];  kernel: KernelFrame;  hist: GFHash.Table;  maps: SpyFormat.MapBase;  mapsStorageSpace: CARDINAL;  lastMap: SpyFormat.MapPos;  pails: SpyFormat.Buckets;  pailStorageSpace: CARDINAL;  sorted: BOOLEAN;  -- Table Building and Installation --  BuildingState: TYPE = {started, done};  BuildingTables: PROC [state: BuildingState];  TryToBuildTables: Supervisor.AgentProcedure;  Notify: Supervisor.AgentProcedure;  SameWorld: Supervisor.AgentProcedure;  Activate, Deactivate: PROC;  KernelLocated: PROC RETURNS [BOOLEAN];  AddAllProcsForModule: PROC [    gf: GFTHandle, map: SpyFormat.MapPos]    RETURNS [nextMap: SpyFormat.MapPos];  AddModuleForExistingProcs: PROC [    gf: GFTHandle, map: SpyFormat.MapPos, nProcs: CARDINAL]    RETURNS [nextMap: SpyFormat.MapPos];  AddProcForModule: PROC [    gf: GFTHandle, proc: LONG STRING,    map: SpyFormat.MapPos, index: CARDINAL] RETURNS [nextIndex: CARDINAL];  AddSourceForProc: PROC [    gf: GFTHandle, proc: LONG STRING, map: SpyFormat.MapPos,    index: CARDINAL] RETURNS [nextIndex: CARDINAL];  IgnoreModule: PROC [gf: GFTHandle];  IgnoreExistingProc: PROC [gf: GFTHandle, proc: LONG STRING];    AlreadyProcessed: PROC [gf: GFTHandle] RETURNS [BOOLEAN];  -- Symbol Utilities --  GetProcName: PROC [gf: GFTHandle, origin: PrincOps.BytePC]    RETURNS [String.SubStringDescriptor];  PrintSource: PROC [GFTHandle, PrincOps.BytePC, LONG CARDINAL];  CallWithCatches: PROC [PROC];  -- Storage Allocation Utilities --  Words: PROC [n: CARDINAL] RETURNS [p: LONG POINTER, size: CARDINAL];  FreeWords: PROC [p: LONG POINTER] RETURNS [LONG POINTER];  -- I/O Utilities --  Char: PROC [CHARACTER];  CR: PROC;  Line, Text: Format.StringProc;    Count: PROC [n: LONG CARDINAL, width: CARDINAL ¬ 10];  Decimal: PROC [n: UNSPECIFIED, width: CARDINAL ¬ 0];  Octal: PROC [n: UNSPECIFIED, width: CARDINAL ¬ 0];  -- Miscellaneous Utilities --  SetBlock: PROC [p: LONG POINTER, nwords: CARDINAL, val: CARDINAL ¬ 0];  Complaint: TYPE = {    ambiguous, crossjumped, noFGT, noSyms, invalidFrame, invalidModule,    invalidNumber, illegalSlash, illegalRange, kernelNotStarted,    multipleKernels, noKernel, noSymbols, repeatedModule};  Complain: PROC [error: Complaint, arg: LONG POINTER ¬ NIL];  HistEntry: PROC [    GFTHandle] RETURNS [LONG POINTER TO SpyFormat.Count];    END..