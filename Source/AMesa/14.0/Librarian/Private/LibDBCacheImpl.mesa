-- File: LibDBCacheImpl.mesa - created by bjd. Last edit:-- bjd                 25-Jul-85  9:22:30-- Copyright (C) 1985 by Xerox Corporation. All rights reserved.DIRECTORY  AccessCH USING [EnumerateGroup, EnumerateProc],  Auth USING [IdentityHandle],  LibDBCache USING [],  Heap USING [systemZone],  NSName USING [CopyName, EquivalentNames, Name];  LibDBCacheImpl: MONITOR  IMPORTS    AccessCH, Heap, NSName  EXPORTS    LibDBCache =  BEGIN    -- TYPES      DatabasePtr: TYPE = LONG POINTER TO DatabaseObject;    DatabaseObject: TYPE = RECORD [    dbName: NSName.Name ¬ NIL,    next: DatabasePtr ¬ NIL,    elements: SEQUENCE size: NATURAL OF DBServiceElements];      DBServiceElements: TYPE = NSName.Name;    -- CONSTANTS & VARS    maxServices: CARDINAL = 10;      dbCache: DatabasePtr ¬ NIL;   z: UNCOUNTED ZONE = Heap.systemZone;    -- PROCS  EnumerateServices: PUBLIC PROCEDURE [    dbName: NSName.Name, enumProc: AccessCH.EnumerateProc,    userId: Auth.IdentityHandle] =    BEGIN    db: DatabasePtr ¬ FindDB[dbName];    IF db=NIL THEN {       db ¬ CreateDBObject[dbName, userId];      AddDBToCache[db]};    EnumerateCachedServices[db, enumProc];    END;      FindDB: ENTRY PROCEDURE [dbName: NSName.Name] RETURNS [db: DatabasePtr] =    BEGIN    FOR db ¬ dbCache, db.next WHILE db # NIL DO      IF NSName.EquivalentNames[dbName, db.dbName] THEN RETURN;      ENDLOOP;    END;      AddDBToCache: ENTRY PROCEDURE [db: DatabasePtr] =    BEGIN    IF dbCache#NIL THEN db.next ¬ dbCache.next;    dbCache ¬ db;    END;  EnumerateCachedServices: ENTRY PROCEDURE [    dbPtr: DatabasePtr, enumProc: AccessCH.EnumerateProc] =    BEGIN ENABLE UNWIND => NULL;    FOR i: CARDINAL IN [0..dbPtr.size) DO      IF NOT enumProc[dbPtr.elements[i]].continue THEN RETURN;      ENDLOOP;    END;  CreateDBObject: PROCEDURE [dbName: NSName.Name, id: Auth.IdentityHandle]    RETURNS [db: DatabasePtr] =    BEGIN    n: CARDINAL ¬ 0;    tempElements: ARRAY [0..maxServices) OF DBServiceElements;    myProc: AccessCH.EnumerateProc = {      tempElements[n] ¬ NSName.CopyName[z, currentName];      n ¬ n+1};    AccessCH.EnumerateGroup[name: dbName, enumProc: myProc, identity: id, z: z];    db ¬ z.NEW[DatabaseObject[n] ¬ [elements: NULL]];    db.dbName ¬ NSName.CopyName[z, dbName];    FOR i: CARDINAL IN [0..n) DO      db.elements[i] ¬ tempElements[i];      ENDLOOP;    END;      END... end of LibDBCacheImpl