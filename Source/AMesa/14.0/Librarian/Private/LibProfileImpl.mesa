-- File: LibProfileImpl.mesa - created by bjd. Last edit:-- bjd                 17-Mar-86 11:05:13-- Copyright (C) 1985, 1986 by Xerox Corporation. All rights reserved.DIRECTORY  Auth,  AddressTranslation USING [    Error, ErrorRecord, NetworkAddress, StringToNetworkAddress],  Event USING [tajoDefaults],  EventTypes USING [domain, organization],  LibProfile,  NSString USING [String, StringFromMesaString],  NSName,  Profile USING [GetDefaultDomain, GetDefaultOrganization, GetID],  String USING [AppendString],  System,  Supervisor USING [    AddDependency, AgentProcedure, CreateSubsystem, SubsystemHandle];  LibProfileImpl: MONITOR  IMPORTS AddressTranslation, Event, NSName, NSString, Profile, String, Supervisor   EXPORTS    LibProfile =  BEGIN    GetDefaultCHName: PUBLIC PROCEDURE [    proc: PROCEDURE [defaultCH: NSName.Name]] =    BEGIN    Enter: ENTRY PROCEDURE = {      ENABLE UNWIND => NULL;      proc[@defaultCHNameRec]};    Enter[];    END;  GetIdentity: PUBLIC PROCEDURE [    flavor: Auth.Flavor ¬ strong, proc: PROCEDURE [id: Auth.IdentityHandle]] = {    Profile.GetID[flavor, proc]};  LookupError: PUBLIC ERROR [code: LibProfile.ErrorCode] = CODE;  LookupAddress: PUBLIC PROCEDURE [    name: NSName.Name, id: Auth.IdentityHandle ¬ NIL]    RETURNS [addr: System.NetworkAddress] =    BEGIN    nameString: LONG STRING = [NSName.maxFullNameLength];    AppendNameToMesaString[s: nameString, name: name];    addr ¬ AddressTranslation.StringToNetworkAddress[      s: nameString, id: id !        AddressTranslation.Error => AddressTranslationError[errorRecord]].addr;    END;  AddressTranslationError: PROC [errorRecord: AddressTranslation.ErrorRecord] = {    WITH errorRecord SELECT FROM      scanError, badSyntax => ERROR LookupError[noSuchDataBase];      chLookupProblem => ERROR LookupError[noSuchDataBase];      otherCHProblem =>         SELECT reason FROM	  authentication, invalidName, invalidPassword =>  -- invalidCredentials? --	     ERROR LookupError[authenticationFailure];	  ENDCASE => ERROR LookupError[noSuchDataBase];      ENDCASE};  AppendNameToMesaString: PROCEDURE [s: LONG STRING, name: NSName.Name] = {    newS: NSName.String ¬ NSName.AppendNameToString[s: S[s], name: name];    s.length ¬ newS.length};    -- default clearinghouse entries are monitored;  agent: Supervisor.SubsystemHandle = Supervisor.CreateSubsystem[UpdateDefaults];      defaultOrg: LONG STRING ¬ [NSName.maxOrgLength];  defaultDomain: LONG STRING ¬ [NSName.maxDomainLength];  defaultCHNameRec: NSName.NameRecord ¬ [    org: S[defaultOrg], domain: S[defaultDomain]];      UpdateDefaults: ENTRY Supervisor.AgentProcedure =    BEGIN    ENABLE UNWIND => NULL;    SELECT event FROM      EventTypes.organization => {	appendOrg: PROCEDURE [organization: LONG STRING] = {	  defaultOrg.length ¬ 0;	  String.AppendString[defaultOrg, organization];	  defaultCHNameRec.org.length ¬ defaultOrg.length};	Profile.GetDefaultOrganization[appendOrg]};      EventTypes.domain => {	appendDomain: PROCEDURE [domain: LONG STRING] = {	  defaultDomain.length ¬ 0;	  String.AppendString[defaultDomain, domain];	  defaultCHNameRec.domain.length ¬ defaultDomain.length};	Profile.GetDefaultDomain[appendDomain]};       ENDCASE;    END;  S: PROC [mS: LONG STRING] RETURNS [NSString.String] = INLINE     { RETURN[NSString.StringFromMesaString[mS]] };    Init: PROCEDURE =    BEGIN    Supervisor.AddDependency[client: agent, implementor: Event.tajoDefaults];        -- i don't think i need these when the stub is built in to the bootfile;    UpdateDefaults[EventTypes.organization, NIL, NIL];    UpdateDefaults[EventTypes.domain, NIL, NIL];    END;-- main line code  Init[];  END... 