-- File: LibMessagesImpl.mesa -- bjd                  7-Mar-88 12:08:06-- Copyright (C) 1986, 1987, 1988 by Xerox Corporation. All rights reserved.DIRECTORY  LibMessages USING [MessageKey, totalKeys],  MsgOps USING [Error, HandleFromFile],  XMessage USING [AllocateMessages, Handle, MsgEntry, MsgID,    MsgType, RegisterMessages],  XString USING [FromSTRING, ReaderBody];LibMessagesImpl: PROGRAM   IMPORTS MsgOps, XMessage, XString  EXPORTS LibMessages =   BEGIN  MsgEntry: TYPE = RECORD [    key: LibMessages.MessageKey,    msg: LONG STRING,    id: XMessage.MsgID,    translationNote: LONG STRING ¬ NIL,    translatable: BOOLEAN ¬ TRUE,    type: XMessage.MsgType ¬ userMsg];   GetMessages: PUBLIC PROCEDURE RETURNS [h: XMessage.Handle] = {RETURN[libMsgs]};  libMsgs: XMessage.Handle ¬ NIL;  lastUsedUniqueID: CARDINAL = 72;  InitMessages: PROCEDURE =    BEGIN    entries: ARRAY [0..LibMessages.totalKeys) OF MsgEntry ¬ [      [keyNull, ""L, 0],      -- commands      [keyToggleTracing, "Toggle Tracing"L, 1],      [keyBackupDatabases, "Backup Databases"L, 2],      [keyRecoverDatabase, "Recover Database"L, 3],      [keySetReaders, "Set Readers"L, 4],      [keySetWriters, "Set Writers"L, 5],      [keySetBackupPath, "Set Backup Path"L, 6],      [keyListDatabases, "List Databases"L, 7],      [keyCreateDatabase, "Create Database"L, 8],      [keyDestroyDatabase, "Destroy Database"L, 9],      [keySetAuthenticationLevel, "Set Authentication Level"L, 10],      [keyRegisterDatabase, "Register Database"L,  11],      [keyUnregisterDatabase, "Unregister Database"L, 12],      [keyCheckinLibject, "Checkin Libject"L, 13],                -- prompts      [keyRecoveryPath, "Recovery path"L, 14],      [keyConfirmRecover,        "Recover will delete existing data base.  Confirm"L, 15],      [keyDatabaseName, "Database name"L, 16],      [keyConfirmExpunge,        "Expunge service will delete all databases.  Confirm"L, 17],      [keyConfirm, "Are you sure?"L, 18],      [keyConfirmDestroy, "Destroy <1>.  Confirm"L, 19,        "Destroy <database name>.  Confirm"L],      [keyDatabaseChoice, "Which database?"L, 20],      [keyAuthenticationLevel, "Authentication level needed for opening session"L, 21],      [keyReaders, "Group allowed to read this data base"L, 22],      [keyWriters,"Group allowed to write this data base"L, 23],      [keyBackupPath, "Path to back up files for this data base"L, 24],      [keyBackupVersionsToKeep, "Number of backup versions to keep"L, 25],      [keyVerboseFeedback, "Verbose feedback?"L, 26],            -- informational      [keyStartingLibrarianService, "Starting Librarian Service"L, 27],      [keyUnregistering, "Unregistering '<1>' ... "L, 28,         "Unregistering '<database name>' ... "L],      [keyDone, "done."L, 29],      [keyRegistering, "Registering '<1>' ... "L, 30,        "Registering '<database name>' ... "L],      [keyDestroying, "Destroying '<1>' ... "L, 31,        "Destroying '<database name>' ... "L],      [keyCreating, "Creating '<1>' ... "L, 32,        "Creating '<database name>' ... "L],      [keyStarted, "up and running"L, 33],      [keyStarting, "on the way up"L, 34],      [keyStopped, "now stopped"L, 35],      [keyStopping, "shutting down"L, 36],      [keyStrong, "strong"L, 37],      [keySimple, "simple"L, 38],      [keyReadersColon, "  Readers:  "L, 39],      [keyWritersColon, "  Writers:  "L, 40],      [keyAsterisk, "*"L, 41],      [keyAuthenticationLevelColon, "  Authentication level:  "L, 42],      [keyBackupPathColon, "  Backup path:  "L, 43],      [keyDontBackup, "don't backup"L, 44],      [keyTracingOff, "No more tracing."L, 45],      [keyTracingOn, "Tracing now on."L, 46],      [keyOpeningSession, "<1>: opening for <2>"L, 47,        "<database name>: opening for <user name>"L],      [keyClosingSession, "<1>: closed by <2>"L, 48,        "<database name>: closed by <user name>"L],      [keyLoadingDatabase, "<1>: being loaded."L, 49,        "<database name>: being loaded."L],      [keyStartingBackup, "<1>: backup started."L, 50,        "<database name>: backup started."L],      [keyCompletedBackup, "<1>: backup completed."L, 51,        "<database name>: backup completed."L],      [keyStartingRecovery, "<1>: recovery started."L, 52,        "<database name>: recovery started."L],      [keyCompletedRecovery, "<1>: recovery completed."L, 53,        "<database name>: recovery completed."L],      -- errors      [keyServiceNotStarted, "Librarian Service NOT started"L, 54],      [keyFilesInUse, "Files in use."L, 55],      [keyContinuingToNextDatabase, "  Continuing to next database."L, 56],      [keyAlreadyExists, "already exists"L, 57],      [keyCommandCancelled, "  Command cancelled."L, 58],      [keyDatabaseBeingRecovered, "Database is being recovered."L, 59],      [keyDatabaseUnavailable, "  Database is unavailable."L, 60],      [keyDatabaseNeedsRecovery, "<1>: needs to be recovered."L, 61,        "<database name>: needs to be recovered."L],      [keyProblemsDeletingDatabase, "Problems deleting old data base files."L, 62],      [keyBackupErrorStoreFailed, "Store of <1><2>.<3> failed:  <4>"L, 63,        "Store of <pathname><root>.<extension> failed:  <reason for failure>"L],      [keyBackupErrorRetrieveFailed, "Retrieve of <1><2>.<3> failed:  <4>"L, 64,        "Retrieve of <pathname><root>.<extension> failed:  <reason for failure>"L],    -- Extras, cause i didn't want to renumber all the stupid things    -- prompts      [keyLibjectName, "Libject name"L, 65],    -- informational      [keyCheckingInLibject, "Checking in <1> ... "L, 66,        "Checking in '<libject name>' ... "L],    -- errors      [keyNotCheckedOut, "Not checked out."L, 67],      [keyNoSuchDatabase, "No such database."L, 68],      [keyUnknownLibrarianError, "Unknown librarian error."L, 69],      [keyNotFound, "Not found."L, 70],      [keyNotProductFactored, "Not Product Factored."L, 71],      [keyLibrarianService, "Librarian Service"L, 72],      [keyIllegalDatabaseName, "Illegal database name.  Special characters not allowed."L, 73],      [keyOutOfVirtualMemory, "Out of virtual memory.  Stop and restart service or reboot."L, 74],      [keyLS, "LS"L, 75]      ]; -- entries    messages: ARRAY [0..LibMessages.totalKeys) OF XMessage.MsgEntry ¬ NULL;    FOR i: CARDINAL IN [0..LibMessages.totalKeys) DO      messages[i] ¬ [        msgKey: ORD[entries[i].key], msg: XString.FromSTRING[entries[i].msg],        translationNote: entries[i].translationNote,        translatable: entries[i].translatable, type: entries[i].type,        id: entries[i].id];      ENDLOOP;    XMessage.RegisterMessages[      h: libMsgs, messages: DESCRIPTOR[messages], stringBodiesAreReal: FALSE];    END; -- InitMessages  RegisterMessages: PROCEDURE =    BEGIN    found: BOOLEAN ¬ TRUE;    libMsgs ¬ MsgOps.HandleFromFile[      file: "LibrarianService.messages"L, domainName: "LibrarianService"L,      clientData: NIL, proc: NIL      ! MsgOps.Error => {found ¬ FALSE; CONTINUE}];    IF ~found THEN       BEGIN      libMsgs ¬ XMessage.AllocateMessages[        applicationName: "LibrarianService"L,        maxMessages: LibMessages.totalKeys, clientData: NIL, proc: NIL];      InitMessages[];      END;    END; -- RegisterMessages       --Mainline code        RegisterMessages[];END...LOG [time - person - action] 5-Aug-86 12:55:56 - bjd - Created file. 1-Nov-87 20:00:16 - bjd - allow nonexistant message file.