-- Copyright (C) 1981, 1983, 1986  by Xerox Corporation. All rights reserved. -- BcdUtilDefs.mesa--   Satterthwaite	July 10, 1980  3:16 PM--   Schmidt		November 6, 1980  9:11 PM--   Lewis		15-Dec-81 10:44:46--   Johnsson		15-Jun-83 17:56:58--   MEW		16-Jun-86 10:28:08DIRECTORY  Alloc USING [Handle],  BcdDefs USING [    CTIndex, EXPIndex, FPIndex, FTIndex, GFIndex, IMPIndex, Link, MTIndex,    MTRecord, Namee, NameRecord, NTIndex, SGIndex, SGRecord, SPIndex, TMIndex,    TYPIndex, VersionStamp],  BcdOps USING [NameString],  Symbols: FROM "BcdSymbols" USING [CXIndex, HTIndex, STIndex],  String USING [SubString],  Table USING [Base],  Tree: FROM "BcdTree" USING [Link];BcdUtilDefs: DEFINITIONS =  BEGIN OPEN BcdDefs;  HTIndex: TYPE = Symbols.HTIndex;  BcdBasePtr: TYPE = LONG POINTER TO BcdBases;  BcdBases: TYPE = RECORD [    etb, mtb, lfb, ctb, itb, sgb, ftb, enb, tyb, tmb, ntb, spb, fpb, atb: Table.Base,    ssb, apb: BcdOps.NameString];  BcdLimitPtr: TYPE = LONG POINTER TO BcdLimits;  BcdLimits: TYPE = RECORD [    ft: FTIndex,    ct: CTIndex,    mt: MTIndex,    et: EXPIndex,    it: IMPIndex,    sg: SGIndex,    nt: NTIndex,    tm: TMIndex,    sp: SPIndex,    fp: FPIndex]; -- bcd-specific operations    EnterConfig: PROC [      bcd: BcdBasePtr, oldCti: CTIndex, name: HTIndex]    RETURNS [cti: CTIndex];  EnterModule: PROC [      bcd: BcdBasePtr, oldMti: MTIndex, name: HTIndex]    RETURNS [mti: MTIndex];  EnterImport: PROC [      bcd: BcdBasePtr, oldIti: IMPIndex, copyName: BOOLEAN]    RETURNS [iti: IMPIndex];  EnterExport: PROC [      bcd: BcdBasePtr, oldEti: EXPIndex, copyName: BOOLEAN]    RETURNS [eti: EXPIndex];  EnterType: PROC [      bcd: BcdBasePtr, oldTypi: TYPIndex]    RETURNS [typi: TYPIndex];  EnterTypeMap: PROC [      bcd: BcdBasePtr, oldTmi: TMIndex]    RETURNS [tmi: TMIndex];  EnterSpace: PROC [      bcd: BcdBasePtr, oldSpi: SPIndex]    RETURNS [spi: SPIndex];  EnterFramePack: PROC [      bcd: BcdBasePtr, oldFpi: FPIndex]    RETURNS [fpi: FPIndex];  HtiForName: PROC [bcd: BcdBasePtr, n: NameRecord] RETURNS [HTIndex];  MapName: PROC [bcd: BcdBasePtr, n: NameRecord] RETURNS [NameRecord];  MergeFile: PROC [bcd: BcdBasePtr, oldFti: FTIndex] RETURNS [fti: FTIndex]; -- other operations   EnterName: PROC [ss: String.SubString] RETURNS [NameRecord];  NameForHti: PROC [hti: HTIndex] RETURNS [NameRecord];  NameForSti: PROC [sti: Symbols.STIndex] RETURNS [NameRecord];    EnterFile: PROC [name: LONG STRING] RETURNS [fti: FTIndex];  SetFileVersion: PROC [fti: FTIndex, v: BcdDefs.VersionStamp];  EqVersions: PROC [fti1, fti2: FTIndex] RETURNS [BOOLEAN];  EquivalentVersions: PROC [v1, v2: BcdDefs.VersionStamp] RETURNS [BOOLEAN];    GetGfiForMti: PROC [mti: MTIndex] RETURNS [GFIndex] = INLINE {    RETURN[LOOPHOLE[LOOPHOLE[mti,CARDINAL]/SIZE[BcdDefs.MTRecord]+1]]};  GetMtiForGfi: PROC [gfi: GFIndex] RETURNS [MTIndex] = INLINE {    RETURN[LOOPHOLE[(gfi-1)*SIZE[BcdDefs.MTRecord]]]};    GetGfiForLink: PROC [link: BcdDefs.Link] RETURNS [gfi: GFIndex];  GetGfi: PROC [n: CARDINAL ¬ 1] RETURNS [gfi: GFIndex];  GetDummyGfi: PROC [n: CARDINAL ¬ 1] RETURNS [gfi: CARDINAL];    NewContext: PROC RETURNS [cxi: Symbols.CXIndex];  ContextForTree: PROC [t: Tree.Link] RETURNS [Symbols.CXIndex];  NewSemanticEntry: PROC [hti: HTIndex] RETURNS [sti: Symbols.STIndex];    CreateInstanceName: PROC [hti: HTIndex, item: Namee];  InstanceName: PROC [item: Namee] RETURNS [NameRecord];  EnterSegment: PROC [seg: SGRecord] RETURNS [sgi: SGIndex];  -- Administrative Procedures  Init: PROC [ownTable: Alloc.Handle];  Reset: PROC;    anyNewModules: BOOLEAN;  END.