-- Copyright (C) 1981  by Xerox Corporation. All rights reserved. -- File BcdTree.mesa-- Last modified by Satterthwaite, 22-Apr-81 11:52:56-- Last modified by Lewis, 15-Dec-81 10:36:21DIRECTORY  BcdDefs USING [treetype],  Symbols: FROM "BcdSymbols" USING [HTIndex, HTNull, STIndex],  Table USING [Base, Finger, Limit, Selector];Tree, Literals: DEFINITIONS = {  Finger: TYPE = Table.Finger;  Base: TYPE = Table.Base;  treeType: Table.Selector = BcdDefs.treetype;  Link: TYPE = RECORD [    SELECT tag: * FROM      subtree => [index: Tree.Index],      hash => [index: Symbols.HTIndex],      symbol => [index: Symbols.STIndex],      literal => [info: Literals.LitRecord]      ENDCASE];  Node: TYPE = MACHINE DEPENDENT RECORD [    free (0: 0..0): BOOLEAN,	-- reserved for allocator    name (0: 1..4): NodeName,    attr1 (0: 5..5), attr2 (0: 6..6), attr3 (0: 7..7): BOOLEAN,    shared (0: 8..8): BOOLEAN,    nSons (0: 9..15): [0..MaxNSons],    info (1): UNSPECIFIED,    son (2): ARRAY [1..1) OF Tree.Link];  MaxNSons: CARDINAL = 177B;  Index: TYPE = Table.Base RELATIVE POINTER [0..Table.Limit) TO Tree.Node;  NullIndex: Tree.Index = FIRST[Tree.Index];  Null: Tree.Link = [subtree[index: Tree.NullIndex]];  NullId: Tree.Link = [hash[index: Symbols.HTNull]];  NodeName: TYPE = {   -- general tree constructors    list, item,   -- declarations    source,    config,   -- expressions    module,    assign,    plus,    then,   -- nil    none    };     -- tree manipulation  Id: TYPE = RECORD [baseP: Table.Finger, link: Tree.Link];  Scan: TYPE = PROC [t: Tree.Link];  Map: TYPE = PROC [t: Tree.Link] RETURNS [v: Tree.Link];  Test: TYPE = PROC [t: Tree.Link] RETURNS [BOOLEAN]; -- literals  LTIndex, STIndex: TYPE = Symbols.HTIndex;  LitRecord: TYPE = RECORD [    SELECT litTag: * FROM      word => [index: LTIndex],      string => [index: STIndex]      ENDCASE];  }.