-- Copyright (C) 1981  by Xerox Corporation. All rights reserved. -- file BcdTreeOps.mesa-- last modified by Satterthwaite,  5-Oct-81 10:13:03-- last modified by Lewis, 10-Dec-81 15:53:49DIRECTORY  Literals: FROM "BcdTree" USING [LTIndex, STIndex],  Symbols: FROM "BcdSymbols" USING [HTIndex, ISEIndex],  Tree: FROM "BcdTree";TreeOps: DEFINITIONS = { -- tree construction interface  Initialize, Reset, Finalize: PROC;  PushTree: PROC [v: Tree.Link];  PopTree: PROC RETURNS [Tree.Link];  InsertTree: PROC [Tree.Link, CARDINAL];  ExtractTree: PROC [CARDINAL] RETURNS [Tree.Link];  MakeNode: PROC [name: Tree.NodeName, count: INTEGER] RETURNS [Tree.Link];  MakeList: PROC [size: INTEGER] RETURNS [Tree.Link];  PushNode: PROC [name: Tree.NodeName, count: INTEGER];  PushList, PushProperList: PROC [size: INTEGER];  PushHash: PROC [hti: Symbols.HTIndex];  PushSe: PROC [sei: Symbols.ISEIndex];  PushLit: PROC [lti: Literals.LTIndex];  PushStringLit: PROC [sti: Literals.STIndex];  SetInfo: PROC [info: UNSPECIFIED];  SetAttr: PROC [attr: [1..3], value: BOOLEAN]; -- tree deallocation  FreeNode: PROC [node: Tree.Index];  FreeTree: PROC [t: Tree.Link] RETURNS [Tree.Link]; -- tree attributes  GetHash: PROC [t: Tree.Link] RETURNS [Symbols.HTIndex];  GetNode: PROC [t: Tree.Link] RETURNS [Tree.Index];  GetSe: PROC [t: Tree.Link] RETURNS [Symbols.ISEIndex];  NthSon: PROC [t: Tree.Link, n: CARDINAL] RETURNS [Tree.Link];  OpName: PROC [t: Tree.Link] RETURNS [Tree.NodeName];  Shared: PROC [t: Tree.Link] RETURNS [BOOLEAN];  SetShared: PROC [t: Tree.Link, shared: BOOLEAN]; -- tree manipulation  UpdateTree: PROC [root: Tree.Link, map: Tree.Map] RETURNS [v: Tree.Link]; -- list testing  ListLength: PROC [t: Tree.Link] RETURNS [CARDINAL];  ListHead: PROC [t: Tree.Link] RETURNS [Tree.Link];  ListTail: PROC [t: Tree.Link] RETURNS [Tree.Link]; -- list manipulation  ScanList: PROC [root: Tree.Link, action: Tree.Scan];  SearchList: PROC [root: Tree.Link, test: Tree.Test];  ReverseScanList: PROC [root: Tree.Link, action: Tree.Scan];  UpdateList: PROC [root: Tree.Link, map: Tree.Map] RETURNS [Tree.Link];  ReverseUpdateList: PROC [root: Tree.Link, map: Tree.Map] RETURNS [Tree.Link]; -- cross-table tree copying  CopyTree: PROC [root: Tree.Id, map: Tree.Map] RETURNS [v: Tree.Link];  IdentityMap: Tree.Map;  NodeSize: PROC [baseP: Tree.Finger, node: Tree.Index] RETURNS [CARDINAL];  }.