-- Copyright (C) 1982  by Xerox Corporation. All rights reserved. -- PrintUserCm.mesa - edited by-- RXJ     	13-Oct-82 14:22:06DIRECTORY  CmFile USING [    Close, Error, FindSection, Handle, NextValue, TableError, UserDotCmOpen],  Press USING [micasPerInch],  PressStream USING [Parameters],  PrintOps ,  Profile USING [GetUser],  String USING [    AppendChar, AppendString, CopyToNewString, Empty, Equivalent, Replace],  StringLookUp USING [noMatch, TableDesc],  Token USING [    Decimal, FilterProcType, FreeTokenString, Item, MaybeQuoted,    Quote, WhiteSpace];PrintUserCm: PROGRAM  IMPORTS CmFile, Profile, String, Token  EXPORTS PrintOps =  BEGIN      SetupHardCopyOptions:PUBLIC PROCEDURE [z: UNCOUNTED ZONE] RETURNS [    userName, sprucePrinter, interpressPrinter, pFont, lFont: LONG STRING ¬ NIL,    parameters: PressStream.Parameters] =    BEGIN    Option: TYPE = MACHINE DEPENDENT {      interpress(0), press, lFont, pFont,      printedBy, orientation, columns,      noMatch(StringLookUp.noMatch)};    DefinedOption: TYPE = Option[interpress..columns];    optionTable: ARRAY DefinedOption OF LONG STRING ¬ [      interpress: "Interpress"L,      press: "Press"L,      lFont: "LandscapeFont"L,      pFont: "PortraitFont"L,      printedBy: "PrintedBy"L,      orientation: "Orientation"L,      columns: "Columns"L];    userCm: CmFile.Handle ¬ NIL;    i: Option;    quarterInch: CARDINAL = Press.micasPerInch/4;    CheckType: PROCEDURE [h: CmFile.Handle, table: StringLookUp.TableDesc]      RETURNS [index: CARDINAL] = CmFile.NextValue;    NonWhiteSpace: Token.FilterProcType = {      RETURN[~Token.WhiteSpace[c, data]]};    MyNextValue: PROCEDURE [      h: CmFile.Handle, table: LONG DESCRIPTOR FOR ARRAY DefinedOption OF LONG STRING]      RETURNS [index: Option] = LOOPHOLE[CheckType];    lFont ¬ String.CopyToNewString["Gacha6"L, z];    pFont ¬ String.CopyToNewString["Gacha8"L, z];    parameters.margins ¬ ALL[3*quarterInch];    userCm ¬ CmFile.UserDotCmOpen[!CmFile.Error => CONTINUE];    IF userCm # NIL AND CmFile.FindSection[userCm, "HardCopy"L] THEN DO      SELECT (i ¬ MyNextValue[userCm, DESCRIPTOR[optionTable]        ! CmFile.TableError => RESUME]) FROM        noMatch => EXIT;        interpress =>	  BEGIN	  value: LONG STRING = Token.MaybeQuoted[userCm, NIL, NonWhiteSpace, Token.Quote];	  String.Replace[@interpressPrinter, value, z];	  [] ¬ Token.FreeTokenString[value];	  END;        press =>	  BEGIN	  value: LONG STRING = Token.Item[userCm];	  String.Replace[@sprucePrinter, value, z];	  [] ¬ Token.FreeTokenString[value];	  END;        lFont =>	  BEGIN	  value: LONG STRING = Token.Item[userCm];	  String.Replace[@lFont, value, z];	  [] ¬ Token.FreeTokenString[value];	  END;        pFont =>	  BEGIN	  value: LONG STRING = Token.Item[userCm];	  String.Replace[@pFont, value, z];	  [] ¬ Token.FreeTokenString[value];	  END;        printedBy =>	  BEGIN	  value: LONG STRING = Token.MaybeQuoted[	    userCm, NIL, NonWhiteSpace, Token.Quote];	  otherString: STRING ¬ [100];	  FOR i: CARDINAL IN [0..value.length) DO	    IF value[i] = '$ THEN {	      CopyUser: PROCEDURE [name, password: LONG STRING] = {	        IF name # NIL THEN String.AppendString[otherString, name]};	      Profile.GetUser[CopyUser]}	    ELSE String.AppendChar[otherString, value[i]];	    ENDLOOP;	  String.Replace[@userName, otherString, z];	  [] ¬ Token.FreeTokenString[value];	  END;        columns =>	  BEGIN	  value: CARDINAL = Token.Decimal[userCm, FALSE];	  IF value # 0 THEN parameters.columns ¬ value;	  END;        orientation =>	  BEGIN	  value: LONG STRING = Token.Item[userCm];	  IF String.Equivalent[value, "Landscape"L] THEN {	    parameters.mode ¬ landscape;	    parameters.margins ¬ [	      top: 3*quarterInch,	      bottom: 2*quarterInch,	      left: 2*quarterInch,	      right: 2*quarterInch]}	  ELSE IF String.Equivalent[value, "Portrait"L] THEN	    parameters.mode ¬ portrait;	  [] ¬ Token.FreeTokenString[value];	  END;        ENDCASE;      ENDLOOP;    IF String.Empty[userName] THEN {      CopyUser: PROCEDURE [name, password: LONG STRING] = {	userName ¬ String.CopyToNewString[name, z]};      Profile.GetUser[CopyUser]};    IF userCm # NIL THEN [] ¬ CmFile.Close[userCm];    END;        END.