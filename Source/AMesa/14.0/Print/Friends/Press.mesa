-- Copyright (C) 1982  by Xerox Corporation. All rights reserved. -- Press.mesa - edited by:-- RXJ     	 8-Oct-82  9:33:47DIRECTORY  Environment USING [Block],  Stream USING [Handle],  String USING [SubString];Press: DEFINITIONS =  BEGIN  Coordinate: TYPE = RECORD [x, y: Mica];    Mica: TYPE = LONG INTEGER;  micasPerInch: CARDINAL = 2540;    Rational: TYPE = RECORD [num: LONG INTEGER, den: LONG CARDINAL];  Unimplemented: ERROR;      -- Fonts  FontAlias: TYPE = [0..255];    FontWeight: TYPE = {medium, bold --, light--};    FontSlope: TYPE = {regular, italic};    WidthHandle: TYPE = LONG POINTER TO READONLY ARRAY CHARACTER OF Mica;  -- Graphics  StrokeEnd: TYPE = MACHINE DEPENDENT {square(0), butt, round};    Encoding: TYPE = MACHINE DEPENDENT {OldPress(0), Interpress82, last(65535)};    Handle: TYPE = LONG POINTER TO Interface;    Interface: TYPE = RECORD [    data: PRIVATE LONG POINTER,    -- Text    PutBlock: PROCEDURE [Handle, Environment.Block],    PutString: PROCEDURE [Handle, LONG STRING],    PutSubString: PROCEDURE [Handle, String.SubString],    CharWidth: PROCEDURE [Handle, CHARACTER, FontAlias] RETURNS [Mica],        -- Graphics - all of these assume appropriate trajectories are already on the stack    LineTo: PROCEDURE [h: Handle, place: Coordinate],    LineToX: PROCEDURE [h: Handle, x: Mica],    LineToY: PROCEDURE [h: Handle, y: Mica],    MoveTo: PROCEDURE [h: Handle, place: Coordinate],    MakeOutline: PROCEDURE [h: Handle, n: CARDINAL],    MaskFill: PROCEDURE [h: Handle],    MaskStroke: PROCEDURE [h: Handle],    MaskRectangle: PROCEDURE [h: Handle, width, height: Mica, place: Coordinate],    SetStrokeEnd: PROCEDURE [h: Handle, end: Press.StrokeEnd],    SetStrokeWidth: PROCEDURE [h: Handle, width: Mica],    StartUnderline: PROCEDURE [h: Handle],    MaskUnderline: PROCEDURE [h: Handle, dy: Mica, height: Mica],        -- Color    SetGray: PROCEDURE [h: Handle, percentBlack: [0..100]],        -- Positioning    SetXY: PROCEDURE [Handle, Coordinate],    SetXRel: PROCEDURE [Handle, Mica],    SetYRel: PROCEDURE [Handle, Mica],        -- Special Text Operations    SetAmplifySpace: PROCEDURE [h: Handle, amplification: Rational],    SetCorrectMeasure: PROCEDURE [h: Handle, dx, dy: Mica],    BeginCorrectBody, EndCorrectBody: PROCEDURE [Handle],        -- Transformations    Rotate: PROCEDURE [h: Handle, degrees: INTEGER],    Scale: PROCEDURE [h: Handle, s: Rational],    Scale2: PROCEDURE [h: Handle, x, y: Rational],    Translate: PROCEDURE [h: Handle, x, y: Mica],    Concat: PROCEDURE [h: Handle],    ConcatT: PROCEDURE [h: Handle],        -- Saving state    BeginSaveSimpleBody, EndSaveSimpleBody: PROCEDURE [Handle],        -- Global State    Delete: PROCEDURE [Handle],        Start: PROCEDURE [h: Handle, output: Stream.Handle, name: LONG STRING ¬ NIL],    Finish, Abort: PROCEDURE [Handle],    NewPlate: PROCEDURE [Handle],     ClearAliases: PROCEDURE [Handle],    DefineAlias: PROCEDURE [      h: Handle, alias: FontAlias, name: LONG STRING, size: Mica,      w: FontWeight ¬ medium, s: FontSlope ¬ regular],    DescribeAlias: PROCEDURE [h: Handle, alias: FontAlias]      RETURNS [fullname: LONG STRING, size: Mica, w: FontWeight,      s: FontSlope, widths: WidthHandle],    SetFont: PROCEDURE [Handle, FontAlias],    SetFontNameSpacePrefix: PROCEDURE [Handle, LONG STRING],    zone: UNCOUNTED ZONE,    encoding: Encoding];      END...  