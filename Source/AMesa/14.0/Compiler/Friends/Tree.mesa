-- Copyright (C) 1981, 1983, 1985, 1986  by Xerox Corporation. All rights reserved. -- file Tree.Mesa-- Satterthwaite,	October 5, 1982 11:30 am-- Donahue,		 9-Dec-81 16:39:08-- Sweet,		 2-Aug-83 13:43:40-- Wagner		16-Aug-86 11:27:58DIRECTORY  Table USING [Base, Selector, Limit, chunkType],  Literals USING [LitRecord],  Symbols USING [HTIndex, ISEIndex, HTNull];Tree: DEFINITIONS = {  treeType: Table.Selector = Table.chunkType;  Base: TYPE = Table.Base;  Finger: TYPE = LONG POINTER TO Base;  Limit: CARDINAL = Table.Limit;   -- data structures  Link: TYPE = RECORD [    SELECT tag: * FROM      subtree => [index: Tree.Index],      hash => [index: Symbols.HTIndex],      symbol => [index: Symbols.ISEIndex],      literal => [info: Literals.LitRecord]      ENDCASE];  Info: TYPE [SIZE[CARDINAL]];  Node: TYPE = MACHINE DEPENDENT RECORD [    free (0: 0..0): BOOLEAN,	-- reserved for allocator    name (0: 1..8): NodeName,    attr1 (0: 9..9), attr2 (0: 10..10), attr3 (0: 11..11): BOOLEAN,    shared (0: 12..12): BOOLEAN,    nSons (0: 13..15): [0..MaxNSons],    info (1): Info,    son (2): ARRAY [1..1) OF Tree.Link];  AttrId: TYPE = [1..3];    MaxNSons: CARDINAL = 7;  Index: TYPE = Base RELATIVE POINTER [0..Limit) TO Tree.Node;  NullIndex: Tree.Index = FIRST[Tree.Index];  Null: Tree.Link = [subtree[index: Tree.NullIndex]];  NullId: Tree.Link = [hash[index: Symbols.HTNull]];  NodeName: TYPE = {   -- general tree constructors    list, item,   -- declarations    decl, typedecl,    basicTC, enumeratedTC, recordTC, monitoredTC, variantTC,    refTC, pointerTC, listTC, arrayTC, arraydescTC, sequenceTC,    procTC, processTC, portTC, signalTC, errorTC, programTC,    anyTC, definitionTC, unionTC, relativeTC,    subrangeTC, longTC, opaqueTC, zoneTC, linkTC, varTC,    implicitTC, frameTC, discrimTC,    entry, internal,    unit, diritem, module, body, inline, lambda, block,  -- statements    assign, extract,    if,    case, casetest, caseswitch,    bind,    do, forseq, upthru, downthru,    return, result,    goto, exit, loop,    free,    resume, reject, continue, retry, catchmark,    restart, stop,    lock, wait, notify, broadcast, unlock,    null,    label,    open,    enable, catch,    dsk, lsk, xe, xf,    syscall, checked, spareS2, spareS3,    subst, call, portcall, signal, error, syserror, xerror,    start, join,   -- expressions    apply,    callx, portcallx, signalx, errorx, syserrorx, startx, fork, joinx,    index, dindex, seqindex, reloc,    construct, union, rowcons, sequence, listcons,    substx,    ifx, casex, bindx,    assignx, extractx,    or, and,    relE, relN, relL, relGE, relG, relLE, in, notin,    plus, minus, times, div, mod,    dot, cdot, dollar,    create,    not,    uminus,    addr,    uparrow,    min, max, lengthen, abs, all,    size, first, last, pred, succ,    arraydesc, length, base,    loophole,    nil,    new,    void,    clit, llit,    cast, check, float, pad, chop, safen,    syscallx, narrow, istype,    openx,    mwconst, cons,    atom, typecode,    stringinit, textlit, signalinit, procinit,    intOO, intOC, intCO, intCC,    thread,    none,    exlist,    initlist,    ditem,    shorten,    self,    gcrt,    proccheck,        ord,    val,        mergecons};       LinkSeq: PRIVATE TYPE = RECORD [SEQUENCE length: CARDINAL OF Tree.Link];  LinkStack: PRIVATE TYPE = LONG POINTER TO LinkSeq;  }.