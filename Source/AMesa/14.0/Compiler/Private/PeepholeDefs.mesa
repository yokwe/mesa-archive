-- Copyright (C) 1982  by Xerox Corporation. All rights reserved. -- file PeepholeDefs.mesa-- last edited by Sweet  1-Nov-82 15:34:45-- last edited by Satterthwaite January 6, 1981  1:21 PMDIRECTORY  Alloc USING [Notifier],  CodeDefs,  FOpCodes,  PrincOps;PeepholeDefs: DEFINITIONS =  BEGIN OPEN CodeDefs;  PeepComponent: TYPE = RECORD [    index: CodeDefs.CodeCCIndex,    inst: BYTE,    min: BOOLEAN,    params: ARRAY [1..3] OF WORD];  NullComponent: PeepComponent = [    index: CodeDefs.CodeCCNull,    inst: FOpCodes.qNULL,    min: FALSE,    params: [0,0,0]];  PeepState: TYPE = RECORD [ -- can't use current Machine Dep since holes    SELECT OVERLAID * FROM      old => [	a: CodeDefs.CodeCCIndex,	aInst: BYTE,	aMin: BOOLEAN,	aP: ARRAY [1..3] OF WORD,	b: CodeDefs.CodeCCIndex,	bInst: BYTE,	bMin: BOOLEAN,	bP: ARRAY [1..3] OF WORD,	c: CodeDefs.CodeCCIndex,	cInst: BYTE,	cMin: BOOLEAN,	cP: ARRAY [1..3] OF WORD],      fast => [aComp, bComp, cComp: PeepComponent],      ENDCASE];  NullState: PeepState = [fast[NullComponent, NullComponent, NullComponent]];  JumpPeepState: TYPE = RECORD[    c: CodeDefs.JumpCCIndex,    bP, cP: ARRAY [1..3] OF WORD,    bInst: BYTE,    bMin: BOOLEAN,    b: CodeDefs.CodeCCIndex,    cInst: BYTE,    cMin: BOOLEAN];  NullJumpState: JumpPeepState = [    c: CodeDefs.JumpCCNull,    bP: [0,0,0],    cP: [0,0,0],    bInst: FOpCodes.qNULL,    bMin: FALSE,    b: CodeDefs.CodeCCNull,    cInst: FOpCodes.qNULL,    cMin: FALSE];      ConsPeepState: TYPE = RECORD [a, b, c, d: PeepComponent];  NullConsState: ConsPeepState = [    NullComponent, NullComponent, NullComponent, NullComponent];  StateExtent: TYPE = {abc, bc, c};  CJump: ARRAY CodeDefs.JumpType[JumpE..ZJumpN] OF CodeDefs.JumpType = [	JumpN, JumpE, JumpGE, JumpL, JumpLE, JumpG,	UJumpGE, UJumpL, UJumpLE, UJumpG, ZJumpN, ZJumpE];  SetRealInst: PROC [BOOLEAN];  NextInteresting: PROC [c: CodeDefs.CCIndex] RETURNS [CodeDefs.CCIndex];  PrevInteresting: PROC [c: CodeDefs.CCIndex] RETURNS [CodeDefs.CCIndex];  InitParameters: PROC [    p: POINTER TO PeepState, ci: CodeDefs.CodeCCIndex, extent: StateExtent];  InitConsState: PROC [p: POINTER TO ConsPeepState, di: CodeDefs.CodeCCIndex];  InitJParametersBC: PROC [    p: POINTER TO JumpPeepState, ci: CodeDefs.JumpCCIndex];  SlidePeepState2: PROC [p: POINTER TO PeepState, ci: CodeDefs.CodeCCIndex];  SlidePeepState1: PROC [p: POINTER TO PeepState, ci: CodeDefs.CodeCCIndex];  SlideConsState: PROC [p: POINTER TO ConsPeepState, di: CodeDefs.CodeCCIndex];  PeepZ: PROC [start: CodeDefs.CodeCCIndex];  HalfByteGlobal: PROC [c: CodeDefs.CCIndex, double: BOOLEAN ¬ FALSE] RETURNS [BOOLEAN];  HalfByteLocal: PROC [c: CodeDefs.CCIndex, double: BOOLEAN ¬ FALSE] RETURNS [BOOLEAN];  LoadInst: PROC [c: CodeDefs.CCIndex] RETURNS [BOOLEAN];  DblLoadInst: PROC [c: CodeDefs.CCIndex] RETURNS [BOOLEAN];  PackPair: PROC [l,r: [0..16)] RETURNS [w: WORD];  UnpackPair: PROC [w: WORD] RETURNS [l,r: [0..16)];  UnpackFD: PROC [d: PrincOps.FieldDescriptor] RETURNS [p,s: CARDINAL];  MC0: PROC [i: BYTE, minimal: BOOLEAN];  Delete2: PROC [a,b: CodeDefs.CCIndex];  Delete3: PROC [a,b,c: CodeDefs.CCIndex];  PeepholeANotify: Alloc.Notifier;  PeepholeZNotify: Alloc.Notifier;  PeepholeUNotify: Alloc.Notifier;  RemoveThisPop: PROC [ci: CodeDefs.CCIndex] RETURNS [didThisTime: BOOLEAN];  CommuteCells: PUBLIC PROC [a, b: CodeDefs.CCIndex];  start: CodeDefs.CodeCCIndex;  NextIsPush: PROC [c: CCIndex] RETURNS [BOOLEAN];  Peep1, Peep2, Peep3, Peep4, Peep5, Peep6, Peep7, Peep8,   Peep9, Peep10, Peep11, Peep12: PROC;  END.