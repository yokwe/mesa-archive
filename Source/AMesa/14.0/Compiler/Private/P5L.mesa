-- Copyright (C) 1982  by Xerox Corporation. All rights reserved. -- file P5L.mesa-- last modified by Sweet, 22-Oct-82 17:11:07-- last modified by Satterthwaite, July 22, 1982 10:25 amDIRECTORY  CodeDefs: TYPE USING [    BoVarIndex, Lexeme, MoveDirection, VarComponent, VarIndex, VarTag,    wordlength],  Symbols: TYPE USING [ContextLevel, ISEIndex, RecordSEIndex, ISENull];P5L: DEFINITIONS =  BEGIN OPEN Symbols, CodeDefs;  -- from VarUtils  AdjustComponent: PROC [    var: POINTER TO VarComponent, rSei: RecordSEIndex, fSei: ISEIndex,    tBits: CARDINAL];  AllLoaded: PROC [r: VarIndex, junkOk: BOOLEAN ¬ FALSE] RETURNS [BOOLEAN];  ComponentForLex: PROC [l: Lexeme, allowFields: BOOLEAN ¬ FALSE]    RETURNS [VarComponent];  ComponentForSE: PROC [sei: ISEIndex] RETURNS [var: VarComponent];  CopyLex: PROC [l: Lexeme] RETURNS [Lexeme];  CopyToTemp: PROC [r: VarIndex, tsei: ISEIndex ¬ ISENull]    RETURNS [var: VarComponent, sei: ISEIndex];  CopyVarItem: PROC [r: VarIndex] RETURNS [rr: VarIndex];  EasilyLoadable: PROC [var: VarComponent, dir: MoveDirection]    RETURNS [evar: VarComponent];  EasyToLoad: PROC [var: VarComponent, dir: MoveDirection] RETURNS [BOOLEAN];  FieldOfComponent: PROC [    var: POINTER TO VarComponent, wd, bd, wSize, bSize: CARDINAL ¬ 0];  FieldOfComponentOnly: PROC [    var: POINTER TO VarComponent, wd, bd, wSize, bSize: CARDINAL ¬ 0];  FieldOfVar: PROC [r: VarIndex, wd, bd, wSize, bSize: CARDINAL ¬ 0];  FieldOfVarOnly: PROC [r: VarIndex, wd, bd, wSize, bSize: CARDINAL ¬ 0];  GenVarItem: PROC [tag: VarTag] RETURNS [r: VarIndex];  InCode: PROC [r: VarIndex] RETURNS [BOOLEAN];  IsCopyKnown: PROC [var: VarComponent]    RETURNS [known: BOOLEAN, cvar: VarComponent];  LongVarAddress: PROC [r: VarIndex] RETURNS [BOOLEAN];  ModComponent: PROC [var: POINTER TO VarComponent, wd, bd: CARDINAL ¬ 0];  NormalLex: PROC [nwords: CARDINAL, long, code: BOOLEAN ¬ FALSE]    RETURNS [Lexeme];  NormalizeExp: PROC [    r: VarIndex, tempsei: ISEIndex ¬ ISENull, codeOk: BOOLEAN ¬ FALSE]    RETURNS [nwords: CARDINAL, long: BOOLEAN, tsei: ISEIndex];  OVarItem: PROC [var: VarComponent] RETURNS [r: VarIndex];  ReleaseLex: PROC [lex: Lexeme];  ReleaseVarItem: PROC [r: VarIndex];  ReusableCopies: PROC [    r: VarIndex, dir: MoveDirection, stackOk: BOOLEAN, stackFree: BOOLEAN ¬ FALSE]    RETURNS [first, next: VarIndex];  StackSpareAddr: PROC [r: VarIndex] RETURNS [BOOLEAN];  StackSpareLoad: PROC [r: VarIndex] RETURNS [BOOLEAN];  TOSAddrLex: PROC [size: CARDINAL, long: BOOLEAN ¬ FALSE] RETURNS [bdo Lexeme];  TOSCodeAddrLex: PROC [size: CARDINAL] RETURNS [bdo Lexeme];  TOSComponent: PROC [size: CARDINAL ¬ 1] RETURNS [VarComponent];  TOSLex: PROC [size: CARDINAL ¬ 1] RETURNS [Lexeme];  VarAddressEasy: PROC [r: VarIndex] RETURNS [BOOLEAN];  VarAlignment: PROC [r: VarIndex, dir: MoveDirection]    RETURNS [bd, bSize: [0..wordlength), wSize: CARDINAL];  VarFinal: PROC;  VarForLex: PROC [l: Lexeme] RETURNS [r: VarIndex];  VarInit: PROC;  VarStackWords: PROC [r: VarIndex] RETURNS [nW: CARDINAL];  -- from VarBasics  AddrComponent: PROC [var: VarComponent] RETURNS [avar: VarComponent];  AddrForVar: PROC [r: VarIndex, codeOk: BOOLEAN ¬ FALSE]    RETURNS [avar: VarComponent];  BaseComponent: PROC [lvl: ContextLevel] RETURNS [VarComponent];  GenAdd: PROC [delta: UNSPECIFIED, long: BOOLEAN ¬ FALSE];  GenAnd: PROC [delta: UNSPECIFIED];  GenRFC: PROC [wd: CARDINAL, bd: [0..16), len: [1..16]];  GenShift: PROC [delta: UNSPECIFIED];  LoadAddress: PROC [r: VarIndex, codeOk: BOOLEAN ¬ FALSE]    RETURNS [long: BOOLEAN];  LoadBoth: PROC [atC1, atC2: POINTER TO VarComponent, abelian: BOOLEAN];  LoadSum: PROC [atB, atD: POINTER TO VarComponent] RETURNS [bpSize: [1..2]];  MakeBo: PROC [r: VarIndex] RETURNS [bor: BoVarIndex];  MakeComponent: PROC [r: VarIndex, allowFields: BOOLEAN ¬ FALSE]    RETURNS [var: VarComponent];  VarVarAssign: PROC [to, from: VarIndex, isexp: BOOLEAN] RETURNS [l: Lexeme];  Words: PROC [w, b: CARDINAL] RETURNS [CARDINAL];  -- from VarMove  LoadComponent: PROC [var: VarComponent];  LoadVar: PROC [r: VarIndex];  StoreComponent: PROC [var: VarComponent];  StoreVar: PROC [r: VarIndex];  END.