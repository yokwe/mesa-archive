-- File: MCHStringExtras.mesa - last edit:-- Sturtevant.PA       12-Feb-85 17:42:22-- Copyright (C) 1985 by Xerox Corporation. All rights reserved.DIRECTORY  NSString USING [FreeString, nullString, String],  String USING [FreeString];MCHStringExtras: DEFINITIONS IMPORTS NSString, String =  BEGIN  « MesaStringFromNSString - convert from NSString to LONG STRING »  MesaStringFromNSString: PROCEDURE [s: NSString.String, z: UNCOUNTED ZONE]    RETURNS [string: LONG STRING];  «  * ScopedMesaStringFromNSString - callBack is called w/ the LONG STRING  * coresponding to s  »  ScopedMesaStringFromNSString: PROCEDURE [s: NSString.String,    callBack: CallBack, clientData: LONG POINTER ¬ NIL];  « FreeString - like String.FreeString, but tolerates NIL »  -- tolerates NIL string  FreeString: PROCEDURE [z: UNCOUNTED ZONE, s: LONG STRING] = INLINE {    IF s # NIL THEN String.FreeString[z, s]; };  « NSFreeString - version of FreeString that smashes nullString to string »  NSFreeString: PROCEDURE    [z: UNCOUNTED ZONE, s: LONG POINTER TO NSString.String] = INLINE {      NSString.FreeString[z, s­]; s­ ¬ NSString.nullString; };  « NSIsEmpty - check for empty NSString »  NSIsEmpty: PROCEDURE [s: NSString.String] RETURNS [isEmpty: BOOLEAN] = INLINE {    RETURN[s.length = 0 OR s.bytes = NIL OR s.maxlength = 0]; };  «  * CallBack - procedure to call with the string data  * clientData first to be compatible with Put  »  CallBack: TYPE = PROCEDURE [LONG POINTER ¬ NIL, LONG STRING];  END.LOG  14-Jan-85 14:10:57 - Sturtevant - created