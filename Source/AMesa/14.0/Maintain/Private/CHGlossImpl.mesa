-- CHGlossImpl.mesa-- Last edited by MWeeks, 16-Aug-84 18:39:25DIRECTORY  CH USING [ReturnCode],  CHGloss,  CHProtocol USING [thisTryWasDown, wrongServer],  String USING [AppendChar, AppendOctal, AppendString],  Window USING [Handle];CHGlossImpl: PROGRAM IMPORTS String EXPORTS CHGloss =  BEGIN  -- constructs a string of the form "CH.ReturnCode[done, first]".  ReturnCodeToString: PUBLIC PROC [rc: CH.ReturnCode, proc: PROC[LONG UNSPECIFIED,LONG STRING],      sw:LONG UNSPECIFIED] =    BEGIN    proc[sw,"CH.ReturnCode["L];    SELECT rc.code FROM      done => proc[sw,"done"L];      notAllowed => proc[sw,"notAllowed"L];      rejectedTooBusy => proc[sw,"rejectedTooBusy"L];      allDown => proc[sw,"allDown"L];      badProtocol => proc[sw,"badProtocol"L];      illegalPropertyID => proc[sw,"illegalPropertyID"L];      illegalOrgName => proc[sw,"illegalOrgName"L];      illegalDomainName => proc[sw,"illegalDomainName"L];      illegalLocalName => proc[sw,"illegalLocalName"L];      noSuchOrg => proc[sw,"noSuchOrg"L];      noSuchDomain => proc[sw,"noSuchDomain"L];      noSuchLocal => proc[sw,"noSuchLocal"L];      propertyIDNotFound => proc[sw,"propertyIDNotFound"L];      wrongPropertyType => proc[sw,"wrongPropertyType"L];      noChange => proc[sw,"noChange"L];      outOfDate => proc[sw,"outOfDate"L];      overflowOfName => proc[sw,"overflowOfName"L];      overflowOfDataBase => proc[sw,"overflowOfDataBase"L];      CHProtocol.wrongServer => proc[sw,"wrongServer"L];      credentialsInvalid => proc[sw,"credentialsInvalid"L];      VAL[61] => proc[sw,"verifierInvalid"L];      VAL[62] => proc[sw,"verifierExpired"L];      VAL[63] => proc[sw,"verifierReused"L];      VAL[64] => proc[sw,"credentialsExpired"L];      credentialsTooWeak => proc[sw,"credentialsTooWeak"L];      wasUpNowDown => proc[sw,"wasUpNowDown"L];      CHProtocol.thisTryWasDown => proc[sw,"thisTryWasDown"L];      ENDCASE => Unknown[proc, rc.code,sw];    proc[sw,", "L];    SELECT rc.which FROM      first => proc[sw,"first"L];      second => proc[sw,"second"L];      ENDCASE => Unknown[proc, rc.which,sw];    proc[sw,"]"L];    END;  Unknown: PROCEDURE [proc: PROC[sw:Window.Handle,s:LONG STRING], h: UNSPECIFIED,sw:Window.Handle] =    BEGIN    s: STRING _ [10];    String.AppendString[s, "?("L];    String.AppendOctal[s, h];    String.AppendChar[s, ')];    proc[sw,s];    END;  END.LOG12-Jan-84 18:10:12 - Gealy - Created19-Mar-84 14:12:15 - Gealy - Print private return codes.