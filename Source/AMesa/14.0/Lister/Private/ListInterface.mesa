-- File: ListInterface.mesa - last edit:-- JBD                  4-Mar-87 14:17:47-- Bruce,              13-Jan-81 11:04:10-- Loretta,            24-Aug-81 15:14:02-- Rhonda,              5-Oct-81 20:57:09-- Lewis,               2-Dec-81 16:39:52-- MEW                 21-Jan-86 15:35:01-- Copyright (C) 1981, 1983, 1986, 1987 by Xerox Corporation. All rights reserved. DIRECTORY  BcdOps USING [BcdBase],  CommandUtil USING [GetNth],  Format USING [Line, NumberFormat],  ListerDefs USING [    AddCommand, HelpProc, ListerProc, Load,     noCode, NoFGT, OpenOutput, Put, PutBcdID,     PutCR, PutNumber, PutSei, write],  SymbolOps USING [FirstCtxSe, NextSe, LinkMode, XferMode],  Symbols USING [ISEIndex, ISENull, TransferMode],  SymbolTable USING [Handle];ListInterface: PROGRAM    IMPORTS CommandUtil, Format, ListerDefs, SymbolOps =  BEGIN OPEN ListerDefs, Symbols;    sH: SymbolTable.Handle;    PrintInterface: PROCEDURE =    BEGIN    sei: Symbols.ISEIndex;    FOR sei ¬ SymbolOps.FirstCtxSe[sH, sH.stHandle.outerCtx],       SymbolOps.NextSe[sH, sei] UNTIL sei = Symbols.ISENull DO      SELECT SymbolOps.LinkMode[sH, sei] FROM	val =>	  BEGIN	  PutValue[sH.seb[sei].idValue, sei];	  PutModeName[SymbolOps.XferMode[sH, sH.seb[sei].idType]];	  PutCR[];	  END;	ref =>	  BEGIN	  PutValue[sH.seb[sei].idValue, sei];	  ListerDefs.Put["EXPORTED Variable"L];	  PutCR[];	  END;	manifest => NULL; -- constant	ENDCASE;      ENDLOOP;    END;      PutValue: PROCEDURE [u: UNSPECIFIED, sei: Symbols.ISEIndex] =    BEGIN    number: Format.NumberFormat = [10, FALSE, FALSE, 4];    PutNumber[u, number];    ListerDefs.Put[" -- "L];    PutSei[sH, sei];    ListerDefs.Put[": "L];    END;      ModePrintName: ARRAY Symbols.TransferMode OF LONG STRING =    ["PROCEDURE", "PORT", "SIGNAL", "ERROR", "PROCESS", "PROGRAM", "NONE"];    PutModeName: PROCEDURE [n: Symbols.TransferMode] = {ListerDefs.Put[ModePrintName[n]]};      Interface: PROC [root: LONG STRING] = {    bcd: BcdOps.BcdBase;    [bcd: bcd, sH: sH] ¬ ListerDefs.Load[root: root, flags: ListerDefs.noCode      ! NoFGT => RESUME];    IF bcd.definitions THEN NULL ELSE GOTO notDefs;    ListerDefs.OpenOutput[root, "il"L];    PutBcdID[bcd];    PrintInterface[];    EXITS      notDefs => Format.Line[        ListerDefs.write, "Error: object file is not a defs!"L];    };      CallInterface: ListerDefs.ListerProc =     BEGIN    Interface[CommandUtil.GetNth[argList, 0]];    END;      HelpInterface: ListerDefs.HelpProc =    BEGIN    ListerDefs.write["Interface[""Filename""] "L];    END;  Init: PROC =    BEGIN    ListerDefs.AddCommand["Interface"L, CallInterface, HelpInterface];    END;          Init[];    END.