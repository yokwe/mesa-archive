-- DumpFiles.mesa-- BGY     	  14-Jan-85 14:48:57-- Copyright (C) Xerox Corporation 1983, 1984, 1985. All rights reserved.DIRECTORY  Ascii,  Emulator,  DumpsterOps,  Format,  FormSW,  Heap,  Put,   Runtime,   StateDefs,  TerminalOps,  Tool,  ToolWindow,  Window;  DumpFiles: PROGRAM   IMPORTS    DumpsterOps, FormSW, Heap, Put, Runtime, TerminalOps, Tool ={      HeaderType: TYPE =     ARRAY Emulator.TerminalType OF  CARDINAL ¬ ALL[0];    TableHandle: TYPE = LONG POINTER TO Table;  Table: TYPE =  ARRAY [0..0) OF UNSPECIFIED;    FileHandle: TYPE = LONG POINTER TO FileType;  FileType: TYPE = RECORD [    head: HeaderType,    data: Table];      DataHandle: TYPE = LONG POINTER TO Data;  Data: TYPE = MACHINE DEPENDENT RECORD [    msgSW(0): Window.Handle ¬ NIL,    fileSW(2): Window.Handle ¬ NIL,    formSW(4): Window.Handle ¬ NIL];      td: DataHandle ¬ NIL;  tool: Window.Handle ¬ NIL;  pos:  CARDINAL ¬ 0;  i: Emulator.TerminalType ¬ FIRST[Emulator.TerminalType];    table: FileHandle;  z: UNCOUNTED ZONE = Heap.systemZone;    InitFile: PROC = {    Put.Line[td.fileSW, "Reading Terminal.bcd"L];    table  ¬ Runtime.GetTableBase[Runtime.GlobalFrame[LOOPHOLE[      TerminalOps.Terminal]]];    pos ¬ 0;    };      CloseFile: PROC = {    Put.Line[td.fileSW, "Finished."L];    };      Transition: ToolWindow.TransitionProcType =    BEGIN    SELECT TRUE FROM      old = inactive =>        IF td = NIL THEN td ¬ z.NEW[Data ¬ []];      new = inactive =>        IF td # NIL THEN {	  z.FREE[@td]};	        ENDCASE;    END;    Dump: FormSW.ProcType = {    states: DumpsterOps.Handle ¬       z.NEW[DumpsterOps.States[Emulator.TerminalType.LAST.ORD + 1]];    InitFile[];    FOR i IN Emulator.TerminalType DO      states[i.ORD] ¬ LOOPHOLE[@table.data[table.head[i]]] ENDLOOP;    DumpsterOps.Dump[states, Write];    CloseFile[];    };      Write: Format.StringProc = {Put.Text[td.fileSW, s]};    MakeForm: FormSW.ClientItemsProcType ={    OPEN FormSW;    nItems: CARDINAL = 1;    items ¬ AllocateItemDescriptor[nItems];    items[0] ¬ CommandItem[      tag: "Dump"L, place: [0, line0], proc: Dump];    RETURN[items: items, freeDesc: TRUE];    };  MakeSWs: Tool.MakeSWsProc = {    logName: STRING ¬ [40];    Tool.UnusedLogName[unused: logName, root: "DumpFiles.log"L];    td.msgSW ¬ Tool.MakeMsgSW[window: window];    td.formSW ¬ Tool.MakeFormSW[window: window, formProc: MakeForm];    td.fileSW ¬ Tool.MakeFileSW[window: window, name: logName];    };  Init: PROCEDURE =    BEGIN    tool ¬ Tool.Create[      makeSWsProc: MakeSWs, initialState: default,      clientTransition: Transition, name: "DumpFiles"L,      cmSection: "DumpFiles"L];    END;      Init[];  }.