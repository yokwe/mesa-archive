-- Copyright (C) 1984  by Xerox Corporation. All rights reserved. -- Floppy Disk Tool - last edit by: CAJ   on: 24-Jan-85 15:22:08-- Startup and global-- This is an experimental tool to provide various utility and testing functions-- for the floppy disk.DIRECTORY  Exec USING [AddCommand, ExecProc, OutputProc, RemoveCommand],  FloppyChannel USING [    Attributes, Context, Error, GetDeviceAttributes, GetContext],  Format USING [StringProc],  GumoutDefs USING [    CommandProcessor, Data, DataHandle, GetHandle, MakeActionForm,    MakeParamForm, NotifyCommandProcessor, StateType],  Heap USING [Create, Delete],  Runtime USING [GetBcdTime],  String USING [AppendString],  Time USING [Append, Packed, Unpack],  Tool USING [    Create, Destroy, MakeFileSW, MakeFormSW, MakeMsgSW, MakeSWsProc,    UnusedLogName],  ToolWindow USING [Activate, TransitionProcType],  Version USING [Append],  Window USING [Handle];GumoutCentral: PROGRAM  IMPORTS Exec, FloppyChannel, GumoutDefs, Heap, Runtime, String, Time, Tool,    ToolWindow, Version  EXPORTS GumoutDefs =  BEGIN  -- Public Variables  state: PUBLIC GumoutDefs.StateType ¬ null;  toolData: PUBLIC GumoutDefs.DataHandle ¬ NIL;  nCylinders: PUBLIC CARDINAL ¬ 0;  nHeads: PUBLIC CARDINAL ¬ 0;  nSectors: PUBLIC CARDINAL ¬ 0;  -- Private Variables  commandProcessor: PROCESS;  heap: UNCOUNTED ZONE ¬ NIL;  wh: Window.Handle ¬ NIL;  -- Tool's window  -- Global Event Routines  ClientTransition: ToolWindow.TransitionProcType =    -- This procedure is called whenever the tools system determines that this    -- Tool is undergoing a user invoked transition (to/from active, inactive,    -- tiny).    BEGIN    SELECT TRUE FROM      old = inactive =>        BEGIN        IF heap = NIL THEN heap ¬ Heap.Create[initial: 1];	IF toolData = NIL THEN          BEGIN toolData ¬ heap.NEW[GumoutDefs.Data ¬ []]; InitToolData[]; END;        -- FORK process to do floppy work        commandProcessor ¬ FORK GumoutDefs.CommandProcessor;        END;      new = inactive =>        BEGIN	IF toolData # NIL THEN          BEGIN          state ¬ quit;          GumoutDefs.NotifyCommandProcessor[];          JOIN commandProcessor;          heap.FREE[@toolData];          toolData ¬ NIL;	  END;	IF heap ~= NIL THEN {Heap.Delete[heap]; heap ¬ NIL};	END;      ENDCASE;    END;  -- Tool and Exec routines  GumoutCommand: Exec.ExecProc =   BEGIN    IF wh # NIL THEN ToolWindow.Activate[wh]    ELSE wh ¬ MakeTool[];  END;   Help: Exec.ExecProc =    BEGIN    OutputProc: Format.StringProc ¬ Exec.OutputProc[h];    h.OutputProc[][     "Gumout is a utility for the floppy disk.  It provides floppy operations at the FloppyChannel level and the facility to display the contents of sectors in various formats."L];    END;  Init: PROCEDURE =    BEGIN    Exec.AddCommand["Gumout.~"L, GumoutCommand, Help, Unload];    END;  InitToolData: PROCEDURE =    BEGIN    toolData.drivePresent ¬ TRUE;    toolData.floppyDrive ¬ GumoutDefs.GetHandle[ !      FloppyChannel.Error => {toolData.drivePresent ¬ FALSE; CONTINUE}];    toolData.function ¬ read;    toolData.print ¬ FALSE;    toolData.fill ¬ ones;    toolData.printHow ¬ octal;    IF toolData.drivePresent THEN      BEGIN      attr: FloppyChannel.Attributes ¬ FloppyChannel.GetDeviceAttributes[        toolData.floppyDrive];      c: FloppyChannel.Context ¬ FloppyChannel.GetContext[toolData.floppyDrive];      nCylinders ¬ attr.numberOfCylinders;      nHeads ¬ attr.numberOfHeads;      toolData.context ¬ [protect: c.protect, format: IBM, density: c.density,        sectorLength: c.sectorLength];      toolData.startAddr ¬ toolData.endAddr ¬ [sector: 1, head: 0, cylinder: 0];      END    ELSE  -- no drive present => arbitrary values      BEGIN      toolData.context ¬        [protect: TRUE, format: IBM, density: double, sectorLength: 0];      toolData.startAddr ¬ [sector: 0, head: 0, cylinder: 0];      toolData.endAddr ¬ [sector: 0, head: 0, cylinder: 0];      -- note that both these addresses are bogus: there is no sector 0.      END;    END;  MakeSWs: Tool.MakeSWsProc =    BEGIN    logName: STRING ¬ [40];    Tool.UnusedLogName[unused: logName, root: "Gumout.log"L];    toolData.msgSW ¬ Tool.MakeMsgSW[window: window];    toolData.actionFormSW ¬ Tool.MakeFormSW[      window: window, formProc: GumoutDefs.MakeActionForm];    toolData.paramFormSW ¬ Tool.MakeFormSW[      window: window, formProc: GumoutDefs.MakeParamForm];    toolData.fileSW ¬ Tool.MakeFileSW[window: window, name: logName];    END;      MakeTool: PROCEDURE RETURNS [wh: Window.Handle] =    BEGIN    name: STRING = [60];    bcdTime: Time.Packed = Runtime.GetBcdTime[];    String.AppendString[name, "Gumout (Floppy Disk Utility) "L];    Version.Append[name];    String.AppendString[name, " of "L];    Time.Append[name, Time.Unpack[bcdTime]];    RETURN[Tool.Create[      makeSWsProc: MakeSWs, initialState: active,      clientTransition: ClientTransition, name: name]]    END;  Unload: Exec.ExecProc =    BEGIN    IF wh # NIL THEN Tool.Destroy [wh];    wh ¬ NIL;    [] ¬ Exec.RemoveCommand[h, "Gumout.~"L];    END;  -- Mainline code  Init[];  END...LOGTime: February 2, 1981  2:37 PM	By: CAJ 	Action: Add log.  Remove Troy format; change herald.Time: 13-Nov-81 17:33:29	By: CAJ 	Action: Converted to Trinity FloppyChannel.Time: 19-Apr-83 17:44:34	By: CAJ 	Action: Converted to Klamath.Time: 14-Jun-84 14:27:38	By: CAJ 	Action: Register Exec command, converted from Storage to Heap.Time: 24-Jan-85 15:21:46	By: CAJ 	Action: Convert to 12.0 FloppyChannel, put version and time in header.