-- Copyright (C) 1988  by Xerox Corporation. All rights reserved. -- FloppyTapeEditMarkerPageSW.mesa	last edited by: CAJ   9-May-88 13:50:16-- This module implements an alternate view for the data display subwindow of the floppy tape editor.DIRECTORY  File USING [Type],  Floppy USING [FileID],  FloppyEditInternal USING [data, heap, Msg, swapWindowKey],  FloppyEditUtilities USING [ReplaceFileID, ReplaceFileIDString, ValidateFileID],  FloppyTapeFormat USING [MarkerPage],  FormSW USING [    AllocateItemDescriptor, ClientItemsProcType, CommandItem, DisplayItem,    FilterProcType, line0, line1, line2, line3, line4, LongNumberItem,    LongNumberNotifyProcType, NumberItem, NumberNotifyProcType, ProcType,    StringEditProc, TagOnlyItem, StringItem],  MsgSW USING [Clear],  RuntimeInternal USING [Bug],  String USING [Replace],  Window USING [Handle],  WindowSwap USING [RegisterView];FloppyTapeEditMarkerPageSW: PROGRAM  IMPORTS    FloppyEditInternal, FloppyEditUtilities, FormSW, MsgSW, RuntimeInternal,    String, WindowSwap =  BEGIN  --//////////////////  -- Local TYPEs, constants, and variables  FormItems: TYPE = {    markerPage, seal, version, file, type, logicalSize, timeStamp,    markerPageType, padIndex, padValue, next, back};  -- This changes if FloppyTapeFormat.MarkerPage format changes  maxPadIndex: CARDINAL = 245;  markerPage: LONG POINTER TO FloppyTapeFormat.MarkerPage ¬    LOOPHOLE[FloppyEditInternal.data.sectorBuffer];  idString: LONG STRING;  padIndex: CARDINAL;  padValue: CARDINAL;  timeStamp: LONG CARDINAL;  --//////////////////  -- Errors  BugType: TYPE = {indexOutOfBounds, noData, noMarkerPage};  Bug: PROCEDURE [bug: BugType] = {RuntimeInternal.Bug[bug]};  --//////////////////  -- Procedures  Back: FormSW.ProcType =    BEGIN    MsgSW.Clear[FloppyEditInternal.data.msgSW];    padIndex ¬ IF padIndex = 0 THEN maxPadIndex ELSE padIndex - 1;    padValue ¬ markerPage.pad[padIndex];    FormSW.DisplayItem[sw, FormItems.padIndex.ORD];    FormSW.DisplayItem[sw, FormItems.padValue.ORD];    END;  -- Back  ChangeFileID: FormSW.FilterProcType =    --[sw: Window.Handle, item: FormSW.ItemHandle, insert: CARDINAL,    -- string: LONG STRING]    BEGIN    FormSW.StringEditProc[sw, item, insert, string];    FloppyEditUtilities.ReplaceFileID[@idString, LOOPHOLE[@markerPage.file]];    END;  -- ChangeFileID  ChangePadIndex: FormSW.NumberNotifyProcType =    -- [sw: Window.Handle, item: FormSW.ItemHandle, index: CARDINAL,    -- oldValue: UNSPECIFIED]    BEGIN    -- Ensure index value cannot be set out of bounds so users needn't check.    IF padIndex IN [0..maxPadIndex] THEN      BEGIN      padValue ¬ markerPage.pad[padIndex];      FormSW.DisplayItem[sw, FormItems.padValue.ORD];      END    ELSE      BEGIN      padIndex ¬ oldValue;      FloppyEditInternal.Msg["Index out of bounds", TRUE];      FormSW.DisplayItem[sw, FormItems.padIndex.ORD];      END;    END;  --ChangeNextPadIndex  ChangePadValue: FormSW.NumberNotifyProcType =    -- [sw: Window.Handle, item: FormSW.ItemHandle, index: CARDINAL,    -- oldValue: UNSPECIFIED]    BEGIN    -- called when pad value field is changed    IF padIndex IN [0..maxPadIndex] THEN markerPage.pad[padIndex] ¬ padValue    ELSE Bug[indexOutOfBounds];  -- shouldn't be able to set to bad value    END;  -- ChangePadValue  ChangeTimeStamp: FormSW.LongNumberNotifyProcType =    -- [sw: Window.Handle, item: FormSW.ItemHandle, index: CARDINAL,    -- oldValue: UNSPECIFIED]    BEGIN    markerPage.timeStamp ¬ LOOPHOLE[timeStamp];    END;  -- ChangeTimestamp  CleanupMarkerPageSW: PROCEDURE =    -- Make data buffer match display.    -- The file ID string gets a possibly redundant update here because it can    -- be edited (via delete only) without tripping the notify proc.    BEGIN    valid: BOOLEAN;    id: Floppy.FileID;    [valid, id] ¬ FloppyEditUtilities.ValidateFileID[idString];    IF valid THEN markerPage.file ¬ LOOPHOLE[id];    END;  -- CleanupMarkerPageSW  DestroyMarkerPageSW: PROCEDURE =    -- Give back storage when going away for good.    BEGIN    String.Replace[@idString, NIL, FloppyEditInternal.heap];    END;  FillMarkerPageSW: PROCEDURE =    -- Make display match data buffer.    BEGIN    IF markerPage = NIL THEN Bug[noMarkerPage];    FloppyEditUtilities.ReplaceFileIDString[@idString, LOOPHOLE[markerPage.file]];    padIndex ¬ 0;    padValue ¬ markerPage.pad[padIndex];    timeStamp ¬ markerPage.timeStamp;    END;  -- FillMarkerPageSW  MakeMarkerPageSW: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN FSW: FormSW;    nItems: CARDINAL = FormItems.LAST.ORD + 1;    markerPage ¬ LOOPHOLE[FloppyEditInternal.data.sectorBuffer];    idString ¬ NIL;    items ¬ FSW.AllocateItemDescriptor[nItems];    items[FormItems.markerPage.ORD] ¬ FSW.TagOnlyItem[      tag: "MarkerPage"L, place: [3, FSW.line0]];    items[FormItems.seal.ORD] ¬ FSW.NumberItem[      tag: "seal "L, place: [125, FSW.line0], signed: FALSE, notNegative: TRUE,      radix: octal, default: 177777B, value: @markerPage.seal];    items[FormItems.version.ORD] ¬ FSW.NumberItem[      tag: "version  "L, place: [235, FSW.line0], signed: FALSE,      notNegative: TRUE, radix: decimal, default: 177777B,      value: @markerPage.version];    items[FormItems.file.ORD] ¬ FSW.StringItem[      tag: "file "L, place: [3, FSW.line1], inHeap: FALSE,      string: @idString, filterProc: ChangeFileID];    items[FormItems.type.ORD] ¬ FSW.NumberItem[      tag: "type "L, place: [180, FSW.line1], signed: FALSE, notNegative: TRUE,      radix: octal, default: 177777B, value: @markerPage.type];    items[FormItems.logicalSize.ORD] ¬ FSW.LongNumberItem[      tag: "logicalSize "L, place: [3, FSW.line2], signed: FALSE,      notNegative: TRUE, radix: decimal, default: 177777B,      value: @markerPage.logicalSize];    items[FormItems.timeStamp.ORD] ¬ FSW.LongNumberItem[      tag: "timeStamp "L, place: [180, FSW.line2], signed: FALSE,      notNegative: TRUE, radix: octal, default: 177777B,      value: @timeStamp, proc: ChangeTimeStamp];    items[FormItems.markerPageType.ORD] ¬ FSW.NumberItem[      tag: "markerPageType "L, place: [3, FSW.line3], signed: FALSE,      notNegative: TRUE, radix: octal, default: 177777B, value: @markerPage.type];    items[FormItems.padIndex.ORD] ¬ FSW.NumberItem[      tag: "pad index "L, place: [3, FSW.line4], signed: FALSE,      notNegative: TRUE, radix: decimal, default: 0, value: @padIndex,      proc: ChangePadIndex];    items[FormItems.padValue.ORD] ¬ FSW.NumberItem[      tag: "value "L, place: [150, FSW.line4], signed: FALSE, notNegative: TRUE,      radix: octal, default: 0, value: @padValue, proc: ChangePadValue];    items[FormItems.next.ORD] ¬ FSW.CommandItem[      tag: "Next"L, place: [300, FSW.line4], proc: Next];    items[FormItems.back.ORD] ¬ FSW.CommandItem[      tag: "Back"L, place: [360, FSW.line4], proc: Back];    RETURN[items, TRUE]    END;  -- MakeMarkerPageSW  Next: FormSW.ProcType =    BEGIN    MsgSW.Clear[FloppyEditInternal.data.msgSW];    padIndex ¬ (padIndex + 1) MOD (maxPadIndex + 1);    padValue ¬ markerPage.pad[padIndex];    FormSW.DisplayItem[sw, FormItems.padIndex.ORD];    FormSW.DisplayItem[sw, FormItems.padValue.ORD];    END;  -- NextNext  -- Module initialization:  -- Register this subwindow as an alternate view for the data subwindow  WindowSwap.RegisterView[    key: FloppyEditInternal.swapWindowKey, viewName: "MarkerPage"L,    makeFormSW: MakeMarkerPageSW, viewFromDataProc: FillMarkerPageSW,    dataFromViewProc: CleanupMarkerPageSW, destroyViewProc: DestroyMarkerPageSW];  END.LOG 9-May-88 13:50:06   CAJ	Created file.