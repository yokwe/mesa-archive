-- Copyright (C) 1984, 1985  by Xerox Corporation. All rights reserved. -- FloppyEditScavengeSW.mesa	last edited by: CAJ	 7-May-85 13:32:42-- This module implements an alternate view for the data display subwindow of the floppy disk editor.DIRECTORY  Floppy USING [Error],  FloppyChannel USING [Context, Error, GetContext, SetContext],  FloppyEditInternal USING [data, GetDrive, heap, swapWindowKey],  FloppyExtras USING [ExtrasError, NewScavenge],  FloppyExtras4 USING [problem],  FormSW USING [    AllocateItemDescriptor, BooleanItem, ClientItemsProcType, CommandItem,    DisplayItem, line0, line1, ProcType, StringItem],  MsgSW USING [Clear],  PrincOps USING [ControlLink],  String USING [AppendString, Replace],  WindowSwap USING [RegisterView];FloppyEditScavengeSW: PROGRAM  IMPORTS    Floppy, FloppyChannel, FloppyEditInternal, FloppyExtras, FloppyExtras4,    FormSW, MsgSW, String, WindowSwap =  BEGIN  --//////////////////  -- Local TYPEs, constants, and variables  FormItems: TYPE = {scavenge, inProgress, completionStatus};  completionStatus: LONG STRING;  inProgress: BOOLEAN ¬ FALSE;  --//////////////////  -- Procedures  Scavenge: FormSW.ProcType =    BEGIN    okay: BOOLEAN ¬ FALSE;    saveContext: FloppyChannel.Context ¬ FloppyChannel.GetContext[      FloppyEditInternal.data.handle];    MsgSW.Clear[FloppyEditInternal.data.msgSW];    inProgress ¬ TRUE;    completionStatus.length ¬ 0;    FormSW.DisplayItem[sw, FormItems.inProgress.ORD];    FormSW.DisplayItem[sw, FormItems.completionStatus.ORD];    okay ¬ FloppyExtras.NewScavenge[      FloppyEditInternal.GetDrive[] !      FloppyChannel.Error => {        String.AppendString[completionStatus, "FloppyChannel.Error"L]; CONTINUE};      FloppyExtras.ExtrasError => {        String.AppendString[completionStatus, "FloppyExtras.ExtrasError"L];        CONTINUE};      Floppy.Error => {        String.AppendString[completionStatus, "Floppy.Error"L]; CONTINUE}];    inProgress ¬ FALSE;    [] ¬ FloppyChannel.SetContext[FloppyEditInternal.data.handle, saveContext];    FormSW.DisplayItem[sw, FormItems.inProgress.ORD];    IF completionStatus.length = 0 THEN      BEGIN      IF okay THEN String.AppendString[completionStatus, "OK"L]      ELSE        String.AppendString[completionStatus,          SELECT FloppyExtras4.problem FROM            allocMapInconsistent => "allocMapInconsistent"L,            badPageTable => "badPageTable"L,            bootFile => "bootFile"L,            duplicateFileID => "duplicateFileID"L,            duplicateFileList => "duplicateFileList"L,            fileList => "fileList"L,            fileListEntry => "fileListEntry"L,            freeSpaceConflict => "freeSpaceConflict"L,            ioError => "ioError"L,            none => "(shouldn't get this one)"L,            sectorNine => "sectorNine"L,            ENDCASE => "no such error"L];      END;    FormSW.DisplayItem[sw, FormItems.completionStatus.ORD];    END;  CleanupScavengeSW: PROCEDURE =    -- Make data buffer match display.    -- NOT NEEDED    {};  DestroyScavengeSW: PROCEDURE =    -- Give back resources when view is going away for good.    {String.Replace[@completionStatus, NIL, FloppyEditInternal.heap]};  FillScavengeSW: PROCEDURE =    -- Make display match data buffer.    -- NOT NEEDED    {};  Init: PROCEDURE =    BEGIN    p: PrincOps.ControlLink ¬ LOOPHOLE[FloppyExtras.NewScavenge];    p.indirect ¬ p.proc ¬ FALSE;    -- Register this subwindow as an alternate view for the data subwindow    WindowSwap.RegisterView[      key: FloppyEditInternal.swapWindowKey, viewName: "Scavenge"L,      makeFormSW: MakeScavengeSW, viewFromDataProc: FillScavengeSW,      dataFromViewProc: CleanupScavengeSW, destroyViewProc: DestroyScavengeSW];    END;  MakeScavengeSW: PUBLIC FormSW.ClientItemsProcType =    BEGIN    nItems: CARDINAL = FormItems.LAST.ORD + 1;    completionStatus ¬ FloppyEditInternal.heap.NEW[StringBody[25]];    items ¬ FormSW.AllocateItemDescriptor[nItems];    items[FormItems.scavenge.ORD] ¬ FormSW.CommandItem[      tag: "Scavenge"L, place: [0, FormSW.line0], proc: Scavenge      --, z: FloppyEditInternal.heap-- ];    items[FormItems.inProgress.ORD] ¬ FormSW.BooleanItem[      tag: "inProgress"L, place: [110, FormSW.line0], readOnly: TRUE,      switch: @inProgress --, z: FloppyEditInternal.heap-- ];    items[FormItems.completionStatus.ORD] ¬ FormSW.StringItem[      tag: "Completion status"L, place: [0, FormSW.line1], readOnly: TRUE,      inHeap: FALSE, string: @completionStatus];    RETURN[items, TRUE]    END;  -- Module initialization:  Init[];  END.LOG19-Nov-84 17:47:47   CAJ	Created file.30-Jan-85 19:39:28   CAJ	Added save context, display problem type. 7-May-85 13:32:37   CAJ	Added DestroyScavengeSW, use default heap in MakeForm. 3-Oct-87 18:06:30   RSV        Use FloppyExtras4 instead of sharing FloppyImplPublicD.