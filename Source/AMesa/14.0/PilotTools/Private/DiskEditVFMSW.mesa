-- Copyright (C) 1984, 1988  by Xerox Corporation. All rights reserved. -- DiskEditVFMSW.mesa     1-Mar-88 10:12:27 by CAJ  DIRECTORY  DiskEditInternal USING [dataPtr, dataWindowKey],  File USING [ID, PageNumber, Type],  FormSW USING [    AllocateItemDescriptor, ClientItemsProcType, LabelItem,    LongNumberItem, newLine, NumberItem, sameLine, StringItem],  Heap USING [systemZone],  String USING [AppendChar, AppendOctal, AppendString, FreeString, Replace],  VolFileMapImpl USING [Buffer, numberOfDataEntries],  Volume USING [PageNumber],  WindowSwap USING [RegisterView];DiskEditVFMSW: PROGRAM  IMPORTS DiskEditInternal, FormSW, Heap, String, WindowSwap  SHARES VolFileMapImpl =  BEGIN  vfmPage: LONG POINTER TO VolFileMapImpl.Buffer ¬ LOOPHOLE[DiskEditInternal.dataPtr];  idStrings: ARRAY[0..VolFileMapImpl.numberOfDataEntries) OF LONG STRING;  itemsPerEntry: CARDINAL = 4;    -- there are four fields in each entry.  CleanupVFMSW: PROCEDURE = {};  DestroyVFMSW: PROCEDURE =    BEGIN    -- This procedure returns resources when the view is about to be destroyed.    FOR i: CARDINAL IN [0..VolFileMapImpl.numberOfDataEntries) DO      String.FreeString[z: Heap.systemZone, s: idStrings[i]];      idStrings[i] ¬ NIL;      ENDLOOP;    END;  FillVFMSW: PROCEDURE =    BEGIN    ReplaceFIDString: PROCEDURE [      heapString: LONG POINTER TO LONG STRING, id: File.ID] =      BEGIN      s: STRING ¬ [64];      p: POINTER TO ARRAY [0..SIZE[File.ID]) OF UNSPECIFIED = LOOPHOLE[@id];      String.AppendChar[s, '[];      FOR i: [0..SIZE[File.ID]) IN [0..SIZE[File.ID] - 1) DO        String.AppendOctal[s, p[i]];        String.AppendString[to: s, from: ", "L];        ENDLOOP;      String.AppendOctal[s, p[SIZE[File.ID] - 1]];      String.AppendChar[s, ']];      --assumed strings taken from system heap      String.Replace[heapString, s, Heap.systemZone];      END;    FOR i: CARDINAL IN [0..VolFileMapImpl.numberOfDataEntries) DO      ReplaceFIDString[@idStrings[i], vfmPage.data[i].key.fileID]      ENDLOOP;    END;  MakeVFMSW: FormSW.ClientItemsProcType =    BEGIN OPEN FormSW;    nItems: CARDINAL =VolFileMapImpl.numberOfDataEntries*itemsPerEntry+1;    items ¬ AllocateItemDescriptor[nItems];        items[0] ¬ FormSW.LabelItem[      tag: "Volume File Map"L, place: FormSW.newLine];    FOR i: CARDINAL IN [0..VolFileMapImpl.numberOfDataEntries) DO      j: CARDINAL = i*itemsPerEntry+1;      idStrings[i] ¬ Heap.systemZone.NEW[StringBody[64]];      items[j] ¬ FormSW.StringItem[        tag: "ID"L, inHeap: TRUE, string: @idStrings[i], readOnly: TRUE,	place: FormSW.newLine];      items[j+1] ¬ FormSW.LongNumberItem[        tag: " File Page"L, signed: FALSE, notNegative: TRUE,	value: @vfmPage.data[i].key.filePage, place: [150, sameLine]];      items[j+2] ¬ FormSW.LongNumberItem[        tag: " Volume Page"L, signed: FALSE, notNegative: TRUE,	value: @vfmPage.data[i].volumePage, place: [300, sameLine]];      items[j+3] ¬ FormSW.NumberItem[        tag: " Type"L, signed: FALSE, notNegative: TRUE,	value: @vfmPage.data[i].key.type, place: [450, sameLine]];      ENDLOOP;    RETURN[items, TRUE]    END;  -- Module initialization:  -- Register this subwindow as an alternate view for the data subwindow  WindowSwap.RegisterView[    key: DiskEditInternal.dataWindowKey, viewName: "VFM page"L,    makeFormSW: MakeVFMSW, viewFromDataProc: FillVFMSW,    dataFromViewProc: CleanupVFMSW,    destroyViewProc: DestroyVFMSW];  END.LOGTime:	16-Oct-82 13:38:59	By: JXP   Action:	Created File.Time:	13-Oct-83 10:57:40	By: JXP   Action:	Convert to 11.0b.Time:   12-Jan-84 12:13:04	By: KEK    Action:	Decimalized FilePage item and Volume Page item; added label.Time:	 5-Sep-84 14:05:11	By: CAJ Action:	Added registering window view via WindowSwap.Time:	29-Feb-88 13:58:24	By: CAJ Action:	Added DestroyVFMSW.