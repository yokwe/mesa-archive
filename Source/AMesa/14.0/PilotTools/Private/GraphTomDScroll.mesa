-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- GraphTomDScroll.mesa (last edited by Jonathan JXG     28-Jun-83 12:00:02)DIRECTORY  GraphTomDOps,  Scrollbar USING [Create, Destroy, ScrollProcType, ScrollbarProcType],  Window USING [Box, Dims, GetBox, GetParent, Handle, InvalidateBox, Validate];      GraphTomDScroll:  MONITOR   LOCKS globalInfo USING globalInfo:GraphTomDOps.GlobalInfoP   IMPORTS GraphTomDOps, Scrollbar, Window  EXPORTS GraphTomDOps =  BEGIN OPEN GraphTomDOps;          CreateScrollbar: PUBLIC PROCEDURE[w:Window.Handle] =    {Scrollbar.Create[w, vertical, DoScroll, ScrollbarInfo]};      DestroyScrollbar: PUBLIC PROCEDURE[w:Window.Handle] =    {Scrollbar.Destroy[w, vertical]};     DoScroll: Scrollbar.ScrollProcType =     BEGIN    LockedDoScroll: ENTRY PROCEDURE[globalInfo:GlobalInfoP] =      BEGIN      visibleBox:Window.Box ¬ VisibleBox[window];      ofWhat:CARDINAL ¬         (IF direction=relative THEN globalInfo.currentDims.h ELSE visibleBox.dims.h);      offset:INTEGER ¬ MulDiv[percent, ofWhat, 100];      SELECT direction         FROM        forward  => NULL;        backward => offset ¬ -offset;        relative => offset ¬ offset-globalInfo.yOffset;       ENDCASE;     IF offset<-globalInfo.yOffset THEN offset ¬ globalInfo.yOffset;      offset ¬ offset - ((globalInfo.yOffset+offset) MOD globalInfo.rowH);       IF offset=0 THEN RETURN;          FOR i:CARDINAL IN [0..LENGTH[globalInfo.items])        DO         Adjust: PROCEDURE[a:LONG POINTER TO INTEGER, b:INTEGER] = INLINE {a­ ¬ a­ - b};        itemInfo:ItemInfoP ¬ globalInfo.items[i].client;        Adjust[@itemInfo.rowBox.place.y, offset];        Adjust[@itemInfo.labelBox.place.y, offset];        Adjust[@itemInfo.hwmBox.place.y, offset];        Adjust[@itemInfo.graphBox.place.y, offset]        ENDLOOP;            globalInfo.yOffset ¬ globalInfo.yOffset+offset;      Window.InvalidateBox[window, [[0,0],visibleBox.dims]];      Window.Validate[window];      END;          LockedDoScroll[GetGlobalInfo[window]];    END;        ScrollbarInfo: Scrollbar.ScrollbarProcType =    BEGIN     globalInfo:GlobalInfoP ¬ GetGlobalInfo[window];    box ¬ VisibleBox[window];  -- ensure window clipped by parent!    offset  ¬ MIN[100, MulDiv[globalInfo.yOffset, 100, globalInfo.currentDims.h]];    IF offset=100    THEN portion ¬ 0    ELSE portion ¬ MulDiv[MIN[globalInfo.currentDims.h-globalInfo.yOffset, box.dims.h],       		          100, globalInfo.currentDims.h];    END;          VisibleBox: PROCEDURE[sw:Window.Handle] RETURNS [box:Window.Box] =    BEGIN    parentDims:Window.Dims ¬ Window.GetBox[Window.GetParent[sw]].dims;    fullBox:Window.Box ¬ Window.GetBox[sw];    RETURN [[[0,0],              [fullBox.dims.w, MIN[fullBox.dims.h, parentDims.h-fullBox.place.y]]]];    END;     END....    