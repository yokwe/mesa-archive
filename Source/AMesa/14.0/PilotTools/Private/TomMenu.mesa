-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- TomMenu.mesa (last edited by Jonathan JXG     11-Feb-83 11:37:31)DIRECTORY  FormSW USING [FreeHintsProcType, Hints, MenuProcType],  MFile USING [EnumerateDirectory, EnumerateProc, Error],  TomOps,   String USING [CopyToNewString, FreeString],  Window USING [Handle];   TomMenu:  MONITOR    LOCKS ctx USING ctx: TomOps.CtxHandle  IMPORTS MFile, String, TomOps  EXPORTS TomOps   SHARES TomOps =  BEGIN OPEN TomOps;    MainFormMenuProc: PUBLIC FormSW.MenuProcType	=    BEGIN    ctx:CtxHandle ¬ GetContext[sw];    names:Names;  freeNamesProc:FreeNamesProcType;    [names, freeNamesProc] ¬       SELECT index         FROM        iDisplay   => GetDisplayNames[],        iParmFile  => ParmFileNames[],        iInterface => Enter[GetInterfaceNamesAndCatchErrors, ctx],        iVariable  => Enter[GetVariableNamesAndCatchErrors, ctx],        ENDCASE => ERROR;    RETURN [names, freeNamesProc, TRUE];    END;      ParmFileNames:     PROCEDURE[] RETURNS [names:Names, freeNamesProc:FreeNamesProcType] =    BEGIN    CountThem: MFile.EnumerateProc = { n ¬ n+1; RETURN [FALSE] };    PutThemIn: MFile.EnumerateProc =      { seq[i] ¬ String.CopyToNewString[s:name, z:z];         i¬i+1; RETURN [i>n] };        seq:SeqOfStringsP;    i, n: CARDINAL ¬ 0;         MFile.EnumerateDirectory["*.tom"L, CountThem, filesOnly     			     ! MFile.Error => {n ¬ 0; CONTINUE}];    seq ¬ z.NEW[SeqOfStrings[MAX[1,n]]];    IF n>0     THEN      MFile.EnumerateDirectory["*.tom"L, PutThemIn, filesOnly]    ELSE       BEGIN      seq[0] ¬ String.CopyToNewString[s:"no files"L, z:z];      n ¬ 1      END;          RETURN [ArrayFromSequence[seq, n], FreeNames];    END;          FreeNames: PUBLIC PROCEDURE [names:Names] =    BEGIN    n:CARDINAL;  seq:SeqOfStringsP;    [seq, n] ¬ SequenceFromArray[names];    FOR i:CARDINAL IN [0..n) DO String.FreeString[z, seq[i]] ENDLOOP;    z.FREE[@seq]    END;   Enter:     ENTRY PROCEDURE [menuProc:GetNamesAndCatchErrorsProcType, ctx:CtxHandle]     RETURNS[names:Names, freeNamesProc:FreeNamesProcType] =        {RETURN menuProc[ctx]};                    END...         