-- Copyright (C) 1984, 1988  by Xerox Corporation. All rights reserved. -- DiskEditDriver.mesa  29-Feb-88  9:52:28 by CAJ DIRECTORY  DiskEditInternal USING [InitializeViewSwappingWindow,    MakeDataSW, MakeLabelSW, MakeParamSW],  Environment USING [wordsPerPage],  File USING [nullFile],  Heap USING [systemZone],  PilotDisk USING [Label],  Runtime USING [GetBcdTime],  Space USING [Map],  String USING [    AppendChar, AppendOctal, AppendString, AppendSubString, InvalidNumber,    Replace, StringToOctal, SubString, SubStringDescriptor],  System USING [nullID, UniversalID],  Time USING [Append, Packed, Unpack],  Tool USING [Create, MakeFormSW, MakeMsgSW, MakeSWsProc],  ToolWindow USING [State, TransitionProcType],  Version USING [Append],  Window USING [Handle],  WindowSwap USING [DeactivateViewsWindow, Key, nullKey, ReactivateViewsWindow];DiskEditDriver: PROGRAM  IMPORTS DiskEditInternal, Heap, Runtime, Space, String, Time, Tool,    Version, WindowSwap  EXPORTS DiskEditInternal =  BEGIN  -- global data  toolWindow: PUBLIC Window.Handle ¬ NIL;  dataSW: PUBLIC Window.Handle;  labelSW: PUBLIC Window.Handle;  msgSW: PUBLIC Window.Handle;  paramSW: PUBLIC Window.Handle;  dataPtr: PUBLIC LONG POINTER TO ARRAY [0..Environment.wordsPerPage) OF WORD    ¬ NIL;  diskLabel: PUBLIC LONG POINTER TO PilotDisk.Label ¬ NIL;  dataWindowKey: PUBLIC WindowSwap.Key ¬ WindowSwap.nullKey;  ActivateTool: PROCEDURE =    BEGIN    menuWindows: ARRAY [0..3) OF Window.Handle;    menuWindows[0] ¬ msgSW;    menuWindows[1] ¬ paramSW;    menuWindows[2] ¬ labelSW;    WindowSwap.ReactivateViewsWindow[key: dataWindowKey, defaultSW: dataSW,      otherWindows: DESCRIPTOR[BASE[menuWindows], 3]];    END;  DeactivateTool: PROCEDURE =    {WindowSwap.DeactivateViewsWindow[key: dataWindowKey]};  MakeSWs: Tool.MakeSWsProc =    BEGIN    -- Make the initial tool subwindows    msgSW ¬ Tool.MakeMsgSW[window: window, lines: 1];    paramSW ¬ Tool.MakeFormSW[      window: window, formProc: DiskEditInternal.MakeParamSW];    labelSW ¬ Tool.MakeFormSW[      window: window, formProc: DiskEditInternal.MakeLabelSW];    dataSW ¬ Tool.MakeFormSW[      window: window, formProc: DiskEditInternal.MakeDataSW];    -- At initial Create time, the WindowSwap stuff is not yet active.  For    -- activate tool, the alternate view windows, if any, must be recreated.    IF dataWindowKey ~= WindowSwap.nullKey THEN ActivateTool[];    END;  ReplaceUIDString: PUBLIC PROCEDURE [    heapString: LONG POINTER TO LONG STRING, id: System.UniversalID] =    BEGIN    s: STRING ¬ [64];    p1: LONG POINTER = @id;  -- workaround compiler delicacy    p: LONG POINTER TO ARRAY [0..SIZE[System.UniversalID]) OF UNSPECIFIED = p1;    String.AppendChar[s, '[];    FOR i: [0..SIZE[System.UniversalID]) IN [0..SIZE[System.UniversalID] - 1) DO      String.AppendOctal[s, p[i]];      String.AppendString[to: s, from: ", "L];      ENDLOOP;    String.AppendOctal[s, p[SIZE[System.UniversalID] - 1]];    String.AppendChar[s, ']];    --assumed strings taken from system heap    String.Replace[heapString, s, Heap.systemZone];    END;  Transition: ToolWindow.TransitionProcType =    BEGIN    SELECT TRUE FROM      old = new => RETURN;      new = active =>        BEGIN	IF old = tiny THEN ActivateTool[];	-- IF old = inactive, MakeSWs does it all.	END;      new = tiny => IF old = active THEN DeactivateTool[];      new = inactive => DeactivateTool[];      ENDCASE => ERROR;    END;  ValidateUID: PUBLIC PROCEDURE [s: LONG STRING]    RETURNS [valid: BOOLEAN, id: System.UniversalID] =    BEGIN    currentNumber: STRING ¬ [64];    startPos: CARDINAL;    curPos: CARDINAL;    len: CARDINAL;    subStringDesc: String.SubStringDescriptor;    subString: String.SubString ¬ @subStringDesc;    p1: LONG POINTER = @id;  -- workaround compiler delicacy    p: LONG POINTER TO ARRAY [0..SIZE[System.UniversalID]) OF UNSPECIFIED = p1;    id ¬ System.nullID;    valid ¬ TRUE;    -- Skip over any leading characters that are not octal digits    FOR startPos IN [0..s.length) DO      IF s[startPos] IN ['0..'7] THEN EXIT;      REPEAT FINISHED => GO TO nullReturn;  -- a bogus UID was given      ENDLOOP;    -- Now process each word of the UID    FOR word: [0..SIZE[System.UniversalID]) IN [0..SIZE[System.UniversalID]) DO      -- parse each word      curPos ¬ startPos;      WHILE s[curPos] IN ['0..'7] DO        curPos ¬ curPos + 1;        IF curPos >= s.length THEN RETURN;  -- Truncate the UID        ENDLOOP;      IF s[curPos] = 'B OR s[curPos] = 'b THEN len ¬ curPos - startPos + 1      ELSE len ¬ curPos - startPos;      currentNumber.length ¬ 0;      subString­ ¬ [s, startPos, len];      String.AppendSubString[to: currentNumber, from: subString];      p[word] ¬ String.StringToOctal[        currentNumber ! String.InvalidNumber => GO TO nullReturn];      startPos ¬ startPos + len;      UNTIL s[startPos] IN ['0..'7] DO        startPos ¬ startPos + 1;        IF startPos >= s.length THEN RETURN;  -- Truncate the UID        ENDLOOP;      ENDLOOP;    EXITS nullReturn => RETURN[FALSE, System.nullID];    END;  Init: PROCEDURE =    BEGIN    name: STRING = [50];    bcdTime: Time.Packed = Runtime.GetBcdTime[];    -- First create spaces needed to run correctly    dataPtr ¬ Space.Map[[File.nullFile, 0, 1]].pointer;    diskLabel ¬ Space.Map[[File.nullFile, 0, 1]].pointer;    -- Now create the tool with a nice, date stamped, name    String.AppendString[name, "Disk Editor "L];    Version.Append[name];    String.AppendString[name, " of "L];    Time.Append[name, Time.Unpack[bcdTime]];    toolWindow ¬ Tool.Create[      name: name, makeSWsProc: MakeSWs, clientTransition: Transition,      initialState: active];    -- Now that the tool is all created, set up the view swapping subwindow.    -- We let whoever implements the default window export this.    DiskEditInternal.InitializeViewSwappingWindow[];    END;  Init[];  END.LOG4-Sep-81 10:14:09	WDK       LONGify, converted to Tajo 8.1-Mar-82 14:01:18	CAJ    Changed herald to 8.0.13-May-82  9:21:27	AWL         The menu should be permanent.26-Apr-83 10:42:50	EKN      Update to Klamath (and Sierra: use Window.InitializeWindow to set contents of window instead of accessing fields of window yourself) 1-Jul-83 16:54:21	Yien    Removed Menu.SetPNR from procedure ToolCreateSubwindow. Changed herald to 11.0a.15-Jul-83 14:57:29	AWL          Use NIL as default value for ToolCreateSubwindow.display.13-Jan-84 14:24:12	KEK        Add VFM view stuff per JXP   , initialized some variables, 11.0g version stamp. 5-Sep-84 13:51:54	CAJ    Convert to WindowSwap; get header version number via Version.22-Apr-85 16:44:59	CAJ    Transition handles views properly in tiny <=> inactive transition.29-Feb-88  9:51:51	CAJ    LONG the POINTERs.