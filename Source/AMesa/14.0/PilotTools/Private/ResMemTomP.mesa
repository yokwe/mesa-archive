-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- ResMemTomP.mesa    (last edited by JXG     25-Apr-83 15:22:50)DIRECTORY  ResMemPerf,  TomP;  ResMemTomP:   PROGRAM  IMPORTS ResMemPerf, TomP =  BEGIN    allFrameFaults, largeFrameFaults, currentSmallFramePages, currentLargeFramePages,    currentlargeFramePages,  resHeapAllocates, resHeapFrees, resHeapSplits, first64KSegments, pdaSegments,  reservedMStoreAllocations,  swapOutBursts,  swapUnitRunsProcessed, vmDatabaseFullSearches, vmDatabaseFastSearches:   		LONG CARDINAL ¬ 0;    UpdateVariables: TomP.UpdateVariablesProcType =    BEGIN        -- FrameFault    allFrameFaults ¬ ResMemPerf.allFrameFaults;    largeFrameFaults ¬ ResMemPerf.largeFrameFaults;    currentSmallFramePages ¬ ResMemPerf.currentSmallFramePages;    currentLargeFramePages ¬ ResMemPerf.currentLargeFramePages;        -- ResidentHeap    resHeapAllocates ¬ ResMemPerf.resHeapAllocates;    resHeapFrees ¬ ResMemPerf.resHeapFrees;    resHeapSplits ¬ ResMemPerf.resHeapSplits;    first64KSegments ¬ ResMemPerf.resHeapSegments[first64K];    pdaSegments ¬ ResMemPerf.resHeapSegments[pda];        -- RealMemory    reservedMStoreAllocations ¬ ResMemPerf.reservedMStoreAllocations;        -- SwapOutControl    swapOutBursts ¬ ResMemPerf.swapOutBursts;        -- VMDatabase    swapUnitRunsProcessed ¬ ResMemPerf.swapUnitRunsProcessed;    vmDatabaseFullSearches ¬ ResMemPerf.vmDatabaseFullSearches;    vmDatabaseFastSearches ¬ ResMemPerf.vmDatabaseFastSearches;        END;      GetFrameFaultVariable: TomP.GetVariableProcType =    BEGIN    SELECT index    FROM      0 => RETURN [["allFrameFaults", @allFrameFaults]];      1 => RETURN [["largeFrameFaults", @largeFrameFaults]];      2 => RETURN [["currentSmallFramePages", @currentSmallFramePages, FALSE]];      3 => RETURN [["currentLargeFramePages", @currentLargeFramePages, FALSE]];      ENDCASE => RETURN [["invalid index", NIL]];    END;          GetResidentHeapVariable: TomP.GetVariableProcType =    BEGIN    SELECT index    FROM      0 => RETURN [["allocates", @resHeapAllocates]];      1 => RETURN [["frees", @resHeapFrees]];      2 => RETURN [["splits", @resHeapSplits]];      3 => RETURN [["segmentsInFirst64K", @first64KSegments, FALSE]];      4 => RETURN [["segmentsInPDA", @pdaSegments, FALSE]];      ENDCASE => RETURN [["invalid index", NIL]];    END;  GetRealMemoryVariable: TomP.GetVariableProcType =    BEGIN    SELECT index    FROM      0 => RETURN [["reservedMStoreAllocs", @reservedMStoreAllocations]];      ENDCASE => RETURN [["invalid index", NIL]];    END;  GetSwapOutControlVariable: TomP.GetVariableProcType =    BEGIN    SELECT index    FROM      0 => RETURN [["bursts", @swapOutBursts]];      ENDCASE => RETURN [["invalid index", NIL]];    END;      GetVMDatabaseVariable: TomP.GetVariableProcType =    BEGIN    SELECT index    FROM      0 => RETURN [["swapUnitRunsProcessed", @swapUnitRunsProcessed]];      1 => RETURN [["fullSearches", @vmDatabaseFullSearches]];      2 => RETURN [["fastSearches", @vmDatabaseFastSearches]];      ENDCASE => RETURN [["invalid index", NIL]];    END;      [] ¬ TomP.Register[name:"FrameFault", nVariables:4,  		getVariableProc:GetFrameFaultVariable,	        updateVariablesProc:UpdateVariables];      [] ¬ TomP.Register[name:"ResidentHeap", nVariables:5,  		getVariableProc:GetResidentHeapVariable,	        updateVariablesProc:UpdateVariables]; 		     [] ¬ TomP.Register[name:"RealMemory", nVariables:1,  		getVariableProc:GetRealMemoryVariable,	        updateVariablesProc:UpdateVariables];				     [] ¬ TomP.Register[name:"SwapOutControl", nVariables:1,  		getVariableProc:GetSwapOutControlVariable,	        updateVariablesProc:UpdateVariables];						     [] ¬ TomP.Register[name:"VMDatabase", nVariables:3,  		getVariableProc:GetVMDatabaseVariable,	        updateVariablesProc:UpdateVariables];		      END.    