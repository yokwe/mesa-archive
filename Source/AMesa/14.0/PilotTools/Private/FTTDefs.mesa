-- Copyright (C) 1987  by Xerox Corporation. All rights reserved. -- FTTDefs.mesa,   last edited by RSV   1-May-87 15:44:36DIRECTORY  Environment USING [],  File USING [ID, File, PageCount, PageNumber, Type],  Floppy USING [BootFilePointer, Density, ErrorType, FileHandle, FileID,      nullBootFilePointer, PageCount, PageNumber, Sides, VolumeHandle],  FloppyExtras USING [ExtrasErrorType],  FormSW USING [ClientItemsProcType, Enumerated, ProcType],  Inline USING [LongNumber],  Space USING [Interval, nullInterval, PageCount],  Window USING [Handle];  FTTDefs : DEFINITIONS SHARES Floppy =  BEGIN  -- SIGNALS   redoparams: SIGNAL[msg: LONG STRING];     --raised throughout the modules to show user the problems that are occuring   reduceCount: SIGNAL;     --resumable signal raised to indicate client caused change in count     --occurrs if user tries to create a space larger than the file      --that will be mapped from it/ It is reduced to the size of the file-- Types and Variables  DescriptorDensityType: TYPE = ARRAY Floppy.Density OF FormSW.Enumerated;  DescriptorSidesType: TYPE = ARRAY Floppy.Sides OF FormSW.Enumerated;  DescriptorArrayType: TYPE = ARRAY CARDINAL [0..3) OF FormSW.Enumerated;    PrintCharOrNumb:TYPE = {PrintChars, PrintNumber};  ExistingORNewFile:TYPE = {Old, New};  WriteFrom: TYPE = {ExistingVM, String};  			  DataHandle: TYPE = LONG POINTER TO Data;  Data: TYPE = MACHINE DEPENDENT RECORD [    -- File subwindow stuff    fileSW(0): Window.Handle ¬ NIL,    -- Form subwindow stuff    formSW(2): Window.Handle ¬ NIL,    -- Message subwindow Handle    msgSW(4): Window.Handle ¬ NIL,    -- Display VM Option subwindow Handle    DVMOptionSW(6): Window.Handle ¬ NIL,    --Write String subwindow Handle    writeStringSW(8): Window.Handle ¬ NIL,    --Form subwindow for Option window Handle    optionFormSW(10): Window.Handle ¬ NIL,    --Option Window Handle    optionSW(12): Window.Handle ¬ NIL,    --Get a File option subwindow    getAFileOptionSW(14): Window.Handle ¬ NIL,        --Parameters and a few necessary variables    drive(16): CARDINAL ¬ 0,    maxNumberOfFileListEntries(17): CARDINAL ¬ 0,    density(18): Floppy.Density ¬ default,    sides(19): Floppy.Sides ¬ default,    --needs to be True to reformat if volume already open    reFormat(20): BOOLEAN ¬ FALSE,    volumeHandle(21): Inline.LongNumber ¬  [num [0,0]],    fileID(23): Floppy.FileID ¬ [0,0],    size(25): Floppy.PageCount ¬ 1,    type(27): CARDINAL ¬ 0,    first(28): Floppy.PageNumber ¬ 0,    count(30): Floppy.PageCount ¬ 1,    --allows me to check whether the vm space already created will suffice    lastSpaceCount(32): Floppy.PageCount ¬ 0,    vm(34): LONG CARDINAL ¬ 0,    start(36): CARDINAL ¬ 0,    length(37): CARDINAL ¬ 0,    printFromVM(38): PrintCharOrNumb ¬ NULL,    vmInterval(39): Space.Interval ¬ Space.nullInterval,    fileCapFrom(43): ExistingORNewFile ¬ NULL,    resetSize(44): BOOLEAN ¬ FALSE,    oldIndex(45): CARDINAL ¬ 0,    page(46): Floppy.PageNumber ¬ 0,    startingPageNumber(48): Floppy.PageNumber ¬ 1,    pilotMicrocode(50): Floppy.BootFilePointer ¬ Floppy.nullBootFilePointer,    diagnosticMicrocode(54): Floppy.BootFilePointer ¬ Floppy.nullBootFilePointer,    germ(58): Floppy.BootFilePointer ¬ Floppy.nullBootFilePointer,    pilotBootFile(62): Floppy.BootFilePointer ¬ Floppy.nullBootFilePointer,    --IF True will write the string in WriteString StringSW onto the Floppy else it writes from vm    writeFrom(66): WriteFrom ¬ NULL,        labelString(67): LONG STRING ¬ NIL,    pilotFile(69): LONG STRING ¬ NIL,    pilotFileID(71): LONG STRING ¬ NIL,    --string that holds text types in WriteString StringSW    backingString(73): LONG STRING ¬ NIL,    entireFile(75): BOOLEAN ¬ TRUE,    pilotPage(76): File.PageNumber ¬ 0,    fileHandle(78): LONG CARDINAL ¬ 0,    numberOfFiles(80): CARDINAL ¬ 0];    -- Types used for converting from Floppy.Filehandle and Floppy.VolumeHandle to-- printable CARDINALs  FileRecType : TYPE = RECORD [    volWA: CARDINAL ¬ 0,    volWB: CARDINAL ¬ 0,    fIDa: CARDINAL ¬ 0,    fIDb: CARDINAL ¬ 0];  VolumeRecType:TYPE = RECORD[    volA: CARDINAL ¬ 0,    volB: CARDINAL ¬ 0];         toolData: DataHandle;  wh: Window.Handle;    densitydesc: DescriptorDensityType;  sidesdesc: DescriptorSidesType;-- Public Procedures from FTTMakeFormAImpl.mesa-- These procedures make the forms for the optionSWs that they are named for-- (These correspond to the currently implemented Floppy code)  FormatMakeOptions: FormSW.ClientItemsProcType;  CreateFileMakeOptions: FormSW.ClientItemsProcType;  CopyToPilotFileMakeOptions: FormSW.ClientItemsProcType;  OpenMakeOptions: FormSW.ClientItemsProcType;  DeleteFileMakeOptions: FormSW.ClientItemsProcType;  CopyFromPilotFileMakeOptions: FormSW.ClientItemsProcType;  CloseMakeOptions: FormSW.ClientItemsProcType;  ReadMakeOptions: FormSW.ClientItemsProcType;  GetFileAttributesMakeOptions: FormSW.ClientItemsProcType;  GetAttributesMakeOptions: FormSW.ClientItemsProcType;  WriteMakeOptions: FormSW.ClientItemsProcType;  GetNextFileMakeOptions: FormSW.ClientItemsProcType;  SetRootFileMakeOptions: FormSW.ClientItemsProcType;  SetBootFilesMakeOptions: FormSW.ClientItemsProcType;  -- Public Procedures from FTTMakeFormBImpl.mesa-- These procedures make the forms for the optionSWs that they are named for-- (These correspond to the unimplemented Floppy code)  CompactMakeOptions: FormSW.ClientItemsProcType;  ScavengeMakeOptions: FormSW.ClientItemsProcType;  GetNextBadSectorMakeOptions: FormSW.ClientItemsProcType;  ReplaceBadSectorMakeOptions: FormSW.ClientItemsProcType;  CreateInitialMakeOptions: FormSW.ClientItemsProcType;  GetBootFilesMakeOptions: FormSW.ClientItemsProcType;  MakeImageMakeOptions: FormSW.ClientItemsProcType;  CreateFloppyFromImageMakeOptions: FormSW.ClientItemsProcType;  GetImageAttributesMakeOptions: FormSW.ClientItemsProcType;  PagesForImageMakeOptions: FormSW.ClientItemsProcType;  -- Public Procedures from FTTImpl.mesa  RemoveOptions: FormSW.ProcType;  -- Public Procedures from FTTApplyOptionsAImpl.mesa-- These procedures get the parameters ready and then calls the appropriate-- Floppy code to be tested  FormatApplyOptions: FormSW.ProcType;  CreateFileApplyOptions: FormSW.ProcType;  CopyToPilotFileApplyOptions: FormSW.ProcType;  ApplyOpenOptions: FormSW.ProcType;  DeleteFileApplyOptions: FormSW.ProcType;  CopyFromPilotFileApplyOptions: FormSW.ProcType;  CloseApplyOptions: FormSW.ProcType;  ReadApplyOptions: FormSW.ProcType;  GetFileAttributesApplyOptions: FormSW.ProcType;  GetAttributesApplyOptions: FormSW.ProcType;  WriteApplyOptions: FormSW.ProcType;  GetNextFileApplyOptions: FormSW.ProcType;  SetRootFileApplyOptions: FormSW.ProcType;  SetBootFilesApplyOptions: FormSW.ProcType;  OpenFilesApplyOptions: FormSW.ProcType;  CreateandOpenApplyOptions: FormSW.ProcType;  -- Public Procedures from FTTApplyOptionsBImpl.mesa-- These procedures get the parameters ready and then calls the appropriate-- Floppy code to be tested  CompactApplyOptions: FormSW.ProcType;  ScavengeApplyOptions: FormSW.ProcType;  GetNextBadSectorApplyOptions: FormSW.ProcType;  ReplaceBadSectorApplyOptions: FormSW.ProcType;  CreateInitialApplyOptions: FormSW.ProcType;  GetBootFilesApplyOptions: FormSW.ProcType;  MakeImageApplyOptions: FormSW.ProcType;  CreateFloppyFromImageApplyOptions: FormSW.ProcType;  GetImageAttributesApplyOptions: FormSW.ProcType;  PagesForImageApplyOptions: FormSW.ProcType;  -- Public Procedures from FTTPrintImpl.mesa    -- These procedures handle everything having to do with printing into the-- FloppyTestTool Window  DisplayVMOptionsWindow: FormSW.ProcType;  RemoveDisplayOption: FormSW.ProcType;  PrintCreateFileReturns: PROCEDURE [fileHandle:Floppy.FileHandle];  PrintOpensReturns: PROCEDURE [vHandle:Floppy.VolumeHandle];  PrintGetFileAttributesReturns: PROCEDURE [    size: Floppy.PageCount, filetype: File.Type];  PrintGetAttributesReturns: PROCEDURE [    labelString: LONG STRING, freeSpace: Floppy.PageCount,    largestBlock: Floppy.PageCount, fileList: Floppy.FileHandle,    rootFile: Floppy.FileHandle, density: Floppy.Density[single..double],    sides: Floppy.Sides[one..two], maxFileListEntries: CARDINAL];  PrintGetNextFileReturns: PROCEDURE [fileH: Floppy.FileHandle];  PrintScavengeReturns: PROCEDURE [ok: BOOLEAN];  PrintGetNextBadSectorReturns: PROCEDURE [    newIndex: CARDINAL, file: Floppy.FileHandle, page: Floppy.PageNumber];  PrintReplaceBadSectorReturns: PROCEDURE [readError: BOOLEAN];  PrintCreateInitialReturns: PROCEDURE [fileHandle: Floppy.FileHandle];  PrintGetBootFilesReturns: PROCEDURE [    initialMicrocode:Floppy.BootFilePointer,    pilotMicrocode:Floppy.BootFilePointer,    diagnosticMicrocode:Floppy.BootFilePointer,    germ:Floppy.BootFilePointer,    pilotBootFile:Floppy.BootFilePointer];  PrintFileSizeProc: PROCEDURE [place: Window.Handle, fileSize: File.PageCount];   PrintErrorProc: PROCEDURE [place: Window.Handle, msg: LONG STRING];  PrintDataErrorProc: PROCEDURE [    place: Window.Handle, fHandle: Floppy.FileHandle,    page: Floppy.PageNumber, vm: LONG POINTER];  PrintGetImageAttributesReturns: PROCEDURE [    maxNumberOfFiles: CARDINAL, currentNumberOfFiles: CARDINAL,    density: Floppy.Density, sides: Floppy.Sides];  PrintPagesForImageReturns: PROCEDURE [pages: Floppy.PageNumber];    ClearmsgSW: PROCEDURE;								-- Public Procedures from FTTApplySetUpImpl.mesa-- Does set ups for apply options; includes creating spaces, creating files.  ValidateFileID: PROCEDURE [s: LONG STRING]    RETURNS [valid: BOOLEAN, id: File.ID];  ReplaceFileIDString: PROCEDURE [    heapString: LONG POINTER TO LONG STRING, id: File.ID];  LoopHoleFile: PROCEDURE [fileID: LONG STRING] RETURNS [file: File.File];  ConvertFile: PROCEDURE [file: File.File];  CreateSpace: PROCEDURE [size : Space.PageCount];  GetAFileOptionsWindow: FormSW.ProcType;  MinFileSize: PROCEDURE [file: FileRecType, count: Floppy.PageCount]    RETURNS [recount: Floppy.PageCount];  RemoveGetAFileOption: FormSW.ProcType;    SetSizeOfImageFile: FormSW.ProcType;    -- Public Procedures from FTTErrorImpl.mesa-- Handles the error exceptions for the modules  ErrorHandlingProc: PROCEDURE [error: Floppy.ErrorType];  ExtraErrorHandlingProc: PROCEDURE [error: FloppyExtras.ExtrasErrorType];   END...LOG10-Feb-82 17:53:53  LXD  created file.26-Oct-82 13:40:32  ET   Added in ExtraErrorHandlingProc using FloppyExtras, plus others. 3-Apr-87 18:28:35  RSV  Added copyright notice.  Folded in above changes.  Old arrows to new arrows.  Go to current version of File. 1-May-87 15:44:43  RSV  Changed PrintScavengeReturns to reflect status from FloppyExtras.NewScavenge.