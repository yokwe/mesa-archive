Subject: [Dewey:]<P> ¬ BeanCounter.bcd!3To: SDD-Pilot, Neely, PurvesReply-to: KrauterMotto: "Slow to mature but quality that will last!"This is a re-re-issue of the same tool I stored yesterday and the day before -- I added ~another~ little something: now you have to specify the logical volume you want it to tabulate (and it need not be the volume you are running the hack on)...It's called BeanCounter, and what it really tabulates is runs (page groups) on your disk.  You type "BeanCounter.bcd" into the exec and it registers the command "CountBeans.~".  Type "CountBeans.~ <volume>" into the exec and you get to watch it puruse all the pages of the logical volume specified in the command line.  It prints out a little dot for every hundred pages it's purused, and it takes about 5 minutes to do a 35000 page volume.  Then it'll spew out a bunch of numbers, telling you mainly about the logical volume's fragmentation (see the end of the msg).  It's kinda simple, so I invite interested parties to improve on it.Files stored are:	[Dewey:]<P>BeanCounter.df	[Dewey:]<P>BeanCounter.doc (just this message)	[Dewey:]<P>BeanCounter.bcd	[Dewey:]<P>BeanCounter.mesaRestrictions and comments:	<>The current code can only handle up to 5000 files on an LV	    -- but this is easily increased (or decreased), and the	    number of free pages required to run it adjust accordingly.	<>I think the Help and Unload procs for this ("CountBeans")	    work okay.	<>I think the code is documented well enough to be able to	    change it.	<>There must be about 60 free pages on your LV.  When you	    run it, you'll see your free page count drop by about	    this much (and the printed statistics will reflect the	    decreased number).  Upon completion, the pages are	    recovered of course!	<>The printed statistics are perturbed by the taking of the	    statistics in the following ways:	    Total temporary files is inc'ed by one.	    Total free pages is dec'ed by about 60.	    Total allocated pages is inc'ed by about 60.	    Total number of runs is inc'ed by about 1.	    The Run size distribution count for runs between	      50 and 200 pages is bumped by about 1.	    Here is a sample of the information it spews out when it's finished:>CountBeans.~ CoPilot.........!.........!.........!.........!..... [...]	Total pages on this LV: 34276	Total allocated pages on this LV: 30016	Total free pages on this LV: 4260       *Total files on this LV: 700	Total temporary files on this LV: 4	Total anonymous files on this LV: 1      **Total number of runs on this LV: 1154     ***Biggest allocated run size on this LV: 2454	Biggest free run size on this LV: 340    ****Ave and Max number of runs in a file on this LV: 1 and 82		(file ID of most fragmented file is 0145770B)	Run distribution across entire LV			alloc	free  runs-in-file   *****	size	count	count	count		1	101	74	597		2	90	47	55		3	41	30	17		4	45	30	4		5	86	33	7		6	78	15	2		7	76	17	4		8	70	10	2		9	67	18	3	 = 10 & < 20	282	26	5	 = 20 & < 50	135	26	2	 = 50 & <200	65	16	2	 =200 & < 1K	13	1	0		>=1K	5	0	0	*     [This number should be equal to the sum of the temporaryFiles, anonymousFiles, filesVisibleToYou, plus three.]**    [this means allocated runs.  I didn't total up the free runs...]***   [probably my bootfile...]****  [These two numbers are a summary statement about how fragmented the files as a whole are on this volume.  The first number is just the total number of files divided by the total number of (allocated) runs on this volume -- usually just one page.  The second number is the number of runs found in the most fragmented file.]***** [The first column is a count.  The second column is the \number/ of allocated runs that have that many pages in them.  The summation of the second column should add up to the figure shown for "Total number of runs".  The third column is the number of free runs that have that many pages in them.  The fourth column is the different one: this is the number of files that are fragmented into that number of page groups.]/karey-------------------------------------------------------------------------