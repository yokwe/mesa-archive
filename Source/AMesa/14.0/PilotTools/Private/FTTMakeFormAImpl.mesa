-- Copyright (C) 1987  by Xerox Corporation. All rights reserved. -- FTTMakeFormAImpl.mesa,   last edited by RSV   3-Apr-87 18:32:38DIRECTORY  Floppy,  FormSW USING [    AllocateItemDescriptor, ClientItemsProcType, CommandItem,    EnumeratedDescriptor, EnumeratedItem, NumberItem, LongNumberItem, StringItem,    Enumerated, line0, line1, line2, line3, line4, line5, line6, NotifyProcType,    ProcType, BooleanItem],  FTTDefs,  UserTerminal USING [];  FTTMakeFormAImpl: PROGRAM  IMPORTS FormSW, FTTDefs  EXPORTS FTTDefs  SHARES Floppy =    BEGIN OPEN FTTDefs;    -- Variable declarations  densitydesc: PUBLIC DescriptorDensityType ¬ [    ["single"L, Floppy.Density[single]], ["double"L, Floppy.Density[double]],    ["default"L, Floppy.Density[default]]];      sidesdesc: PUBLIC DescriptorSidesType ¬ [    ["one"L, Floppy.Sides[one]], ["two"L, Floppy.Sides[two]],    ["default"L, Floppy.Sides[default]]];     -- Coverts from an enumerated type of Floppy.Density to DescriptorArrayType    -- so can use Descriptor Arrays    DescriptorDensityTypeConversion: PROCEDURE [     densityDescriptor: DescriptorDensityType]     RETURNS [descriptor: FormSW.EnumeratedDescriptor] = INLINE     {RETURN [DESCRIPTOR[LOOPHOLE[densityDescriptor, DescriptorArrayType]]]};            -- Coverts from an enumerated type of Floppy.Sides to DescriptorArrayType so   -- can use Descriptor Arrays       DescriptorSidesTypeConversion: PROCEDURE [sidesDescriptor: DescriptorSidesType]     RETURNS[descriptor: FormSW.EnumeratedDescriptor] = INLINE     {RETURN [DESCRIPTOR[LOOPHOLE[sidesDescriptor, DescriptorArrayType]]]};  FormatMakeOptions: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN FormSW;    sidesdescConverted: EnumeratedDescriptor;    densitydescConverted: EnumeratedDescriptor;    nOptions: CARDINAL = 8;    densitydescConverted ¬ DescriptorDensityTypeConversion[densitydesc];    sidesdescConverted ¬ DescriptorSidesTypeConversion[sidesdesc];    items ¬ AllocateItemDescriptor[nOptions];    items[0] ¬ NumberItem[tag: "Drive"L, place: [0, line0], signed: FALSE,      notNegative: TRUE, value: @toolData.drive];    items[1] ¬ NumberItem[      tag: "maxNumberOfFileListEntries"L, place: [150, line0], signed: FALSE,      notNegative: TRUE, value: @toolData.maxNumberOfFileListEntries];    items[2] ¬ StringItem[      tag: "labelString"L, place: [0, line1], string: @toolData.labelString,      inHeap: TRUE];    items[3] ¬ BooleanItem[      tag: "Reformat"L, place: [250,line1], switch: @toolData.reFormat];    items[4] ¬ EnumeratedItem[tag: "Sides"L, place: [0, line2], feedback: all,      value: @toolData.sides, choices: sidesdescConverted];    items[5] ¬ CommandItem[      tag: "Abort"L, place: [250, line2], proc: RemoveOptions];    items[6] ¬ EnumeratedItem[tag: "Density"L, place: [0, line3], feedback: all,      value: @toolData.density, choices: densitydescConverted ];    items[7] ¬ CommandItem[      tag: "Do it"L, place: [250, line3], proc: FormatApplyOptions];    RETURN[items, TRUE]    END;      CreateFileMakeOptions: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN FormSW;    nOptions: CARDINAL = 6;    items ¬ AllocateItemDescriptor[nOptions];    items[0] ¬ NumberItem[tag: "VolumeHandle word1"L, place: [0, line0],      signed: FALSE, notNegative: TRUE, value: @toolData.volumeHandle.lowbits];    items[1] ¬ NumberItem[      tag: "word2"L, place: [180, line0], signed: FALSE, notNegative: TRUE,      value: @toolData.volumeHandle.highbits];    items[2] ¬ LongNumberItem[tag: "size"L, place: [0, line1], signed: FALSE,      notNegative: TRUE, value: @toolData.size];    items[3] ¬ NumberItem[      tag: "type"L, place: [180, line1], signed: FALSE, notNegative: TRUE,      value: @toolData.type];    items[4] ¬ CommandItem[      tag: "Abort"L, place: [250, line2], proc: RemoveOptions];    items[5] ¬ CommandItem[      tag: "Do it"L, place: [250, line3], proc: CreateFileApplyOptions ];    RETURN[items, TRUE]    END;      CopyToPilotFileMakeOptions: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN FormSW;    nOptions: CARDINAL = 12;    items ¬ AllocateItemDescriptor[nOptions];    items[0] ¬ NumberItem[tag: "VolumeHandle word1"L, place: [0, line0],      signed: FALSE, notNegative: TRUE, value: @toolData.volumeHandle.lowbits];    items[1] ¬ NumberItem[      tag: "word2"L, place: [180, line0], signed: FALSE, notNegative: TRUE,      value: @toolData.volumeHandle.highbits];    items[2] ¬ NumberItem[tag: "FileID word1"L, place: [0, line1], signed: FALSE,      notNegative: TRUE, value: @toolData.fileID.a];    items[3] ¬ NumberItem[      tag: "word2"L, place: [180, line1], signed: FALSE, notNegative: TRUE,      value: @toolData.fileID.b];    items[4] ¬ StringItem[tag: "pilotFile"L, place: [0, line2],      string: @toolData.pilotFileID, inHeap: TRUE];    items[5] ¬ LongNumberItem[tag: "count(pages)"L, place: [0, line3],       signed: FALSE, notNegative: TRUE, value: @toolData.count];    items[6] ¬ BooleanItem[      tag: "entireFile"L, place: [180, line3], switch: @toolData.entireFile];    items[7] ¬ LongNumberItem[tag: "firstFloppyPage"L, place: [0, line4],      signed: FALSE, notNegative: TRUE, value: @toolData.first];    items[8] ¬ LongNumberItem[tag: "firstPilotPage"L, place: [180, line4],      signed: FALSE, notNegative: TRUE, value: @toolData.pilotPage];    items[9] ¬ CommandItem[tag: "GetAFile"L, place: [100, line5],      proc: GetAFileOptionsWindow];    items[10] ¬ CommandItem[      tag: "Abort"L, place: [250, line5], proc: RemoveOptions];    items[11] ¬ CommandItem[      tag: "Do it"L, place: [250, line6], proc: CopyToPilotFileApplyOptions];    RETURN[items, TRUE]     END;      OpenMakeOptions: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN FormSW;    nOptions: CARDINAL = 3;    items ¬ AllocateItemDescriptor[nOptions];    items[0] ¬ NumberItem[tag: "Drive"L, place: [0, line0], signed: FALSE,      notNegative: TRUE, value: @toolData.drive];    items[1] ¬ CommandItem[      tag: "Abort"L, place: [150, line1], proc: RemoveOptions];    items[2] ¬ CommandItem[      tag: "Do it"L, place: [250, line1], proc: ApplyOpenOptions];    RETURN[items, TRUE]     END;      DeleteFileMakeOptions: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN FormSW;    nOptions: CARDINAL = 6;    items ¬ AllocateItemDescriptor[nOptions];    items[0] ¬ NumberItem[tag: "VolumeHandle word1"L, place: [0, line0],       signed: FALSE, notNegative: TRUE, value: @toolData.volumeHandle.lowbits];    items[1] ¬ NumberItem[tag: "word2"L, place: [180, line0], signed: FALSE,      notNegative: TRUE, value: @toolData.volumeHandle.highbits];    items[2] ¬ NumberItem[tag: "FileID word1"L, place: [0, line1], signed: FALSE,      notNegative: TRUE, value: @toolData.fileID.a];    items[3] ¬ NumberItem[tag: "word2"L, place: [180, line1], signed: FALSE,      notNegative: TRUE, value: @toolData.fileID.b];    items[4] ¬ CommandItem[      tag: "Abort"L, place: [250, line2], proc: RemoveOptions];    items[5] ¬ CommandItem[      tag: "Do it"L, place: [250, line3], proc: DeleteFileApplyOptions ];    RETURN[items, TRUE]     END;      CopyFromPilotFileMakeOptions: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN FormSW;    nOptions: CARDINAL = 12;    items ¬ AllocateItemDescriptor[nOptions];    items[0] ¬ StringItem[      tag: "pilotFile"L, place: [0, line0], string: @toolData.pilotFileID,      inHeap: TRUE];    items[1] ¬ NumberItem[tag: "VolumeHandle word1"L, place: [0, line1],      signed: FALSE, notNegative: TRUE, value: @toolData.volumeHandle.lowbits];    items[2] ¬ NumberItem[tag: "word2"L, place: [180, line1], signed: FALSE,      notNegative: TRUE, value: @toolData.volumeHandle.highbits];    items[3] ¬ NumberItem[tag: "FileID word1"L, place: [0, line2], signed: FALSE,      notNegative: TRUE, value: @toolData.fileID.a];    items[4] ¬ NumberItem[tag: "word2"L, place: [180, line2], signed: FALSE,      notNegative: TRUE, value: @toolData.fileID.b];    items[5] ¬ LongNumberItem[tag: "count(pages)"L, place: [0, line3],       signed: FALSE, notNegative: TRUE, value: @toolData.count];    items[6] ¬ BooleanItem[      tag: "entireFile"L, place: [180, line3], switch: @toolData.entireFile];    items[7] ¬ LongNumberItem[tag: "firstPilotPage"L, place: [0, line4],       signed: FALSE, notNegative: TRUE, value: @toolData.pilotPage];    items[8] ¬ LongNumberItem[tag: "firstFloppyPage"L, place: [180, line4],      signed: FALSE, notNegative: TRUE, value: @toolData.first];    items[9] ¬ CommandItem[      tag: "GetAFile"L, place: [100, line5], proc: GetAFileOptionsWindow];    items[10] ¬ CommandItem[      tag: "Abort"L, place: [250, line5], proc: RemoveOptions];    items[11] ¬ CommandItem[      tag: "Do it"L, place: [250, line6], proc: CopyFromPilotFileApplyOptions];    RETURN[items, TRUE]     END;      CloseMakeOptions: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN FormSW;    nOptions: CARDINAL = 4;    items ¬ AllocateItemDescriptor[nOptions];    items[0] ¬ NumberItem[tag: "VolumeHandle word1"L, place: [0, line0],      signed: FALSE, notNegative: TRUE, value: @toolData.volumeHandle.lowbits];    items[1] ¬ NumberItem[tag: "word2"L, place: [180, line0], signed: FALSE,      notNegative: TRUE, value: @toolData.volumeHandle.highbits];    items[2] ¬ CommandItem[      tag: "Abort"L, place: [150, line1], proc: RemoveOptions];    items[3] ¬ CommandItem[      tag: "Do it"L, place: [250, line1], proc: CloseApplyOptions ];    RETURN[items, TRUE]     END;      ReadMakeOptions: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN FormSW;    nOptions: CARDINAL = 9;     items ¬ AllocateItemDescriptor[nOptions];    items[0] ¬ NumberItem[tag: "VolumeHandle word1"L, place: [0, line0],      signed: FALSE, notNegative: TRUE, value: @toolData.volumeHandle.lowbits];    items[1] ¬ NumberItem[tag: "word2"L, place: [180, line0], signed: FALSE,      notNegative: TRUE, value: @toolData.volumeHandle.highbits];    items[2] ¬ NumberItem[tag: "FileID word1"L, place: [0, line1], signed: FALSE,      notNegative: TRUE, value: @toolData.fileID.a];    items[3] ¬ NumberItem[tag: "word2"L, place: [180, line1], signed: FALSE,      notNegative: TRUE, value: @toolData.fileID.b];    items[4] ¬ LongNumberItem[tag: "first"L, place: [0, line2], signed: FALSE,      notNegative: TRUE, value: @toolData.first];    items[5] ¬ LongNumberItem[tag: "count(pages)"L, place: [130, line2],       signed: FALSE, notNegative: TRUE, value: @toolData.count];    items[6] ¬ CommandItem[      tag: "Abort"L, place: [280, line2], proc: RemoveOptions];    items[7] ¬ LongNumberItem[tag: "vm"L, place: [0, line3], signed: FALSE,      notNegative: TRUE, value: @toolData.vm, readOnly: TRUE];    items[8] ¬ CommandItem[      tag: "Do it"L, place: [280, line3], proc: ReadApplyOptions ];    RETURN[items, TRUE]     END;      GetFileAttributesMakeOptions: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN FormSW;    nOptions: CARDINAL = 6;    items ¬ AllocateItemDescriptor[nOptions];    items[0] ¬ NumberItem[tag: "VolumeHandle word1"L, place: [0, line0],      signed: FALSE, notNegative: TRUE, value: @toolData.volumeHandle.lowbits];    items[1] ¬ NumberItem[tag: "word2"L, place: [180, line0], signed: FALSE,      notNegative: TRUE, value: @toolData.volumeHandle.highbits];    items[2] ¬ NumberItem[tag: "FileID word1"L, place: [0, line1], signed: FALSE,      notNegative: TRUE, value: @toolData.fileID.a];    items[3] ¬ NumberItem[tag: "word2"L, place: [180, line1], signed: FALSE,      notNegative: TRUE, value: @toolData.fileID.b];    items[4] ¬ CommandItem[      tag: "Abort"L, place: [250, line2], proc: RemoveOptions];    items[5] ¬ CommandItem[      tag: "Do it"L, place: [250, line3], proc: GetFileAttributesApplyOptions];    RETURN[items, TRUE]     END;       GetAttributesMakeOptions: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN FormSW;    nOptions: CARDINAL = 4;    items ¬ AllocateItemDescriptor[nOptions];    items[0] ¬ NumberItem[tag: "VolumeHandle word1"L, place: [0, line0],      signed: FALSE, notNegative: TRUE, value: @toolData.volumeHandle.lowbits];    items[1] ¬ NumberItem[tag: "word2"L, place: [180, line0], signed: FALSE,      notNegative: TRUE, value: @toolData.volumeHandle.highbits];    items[2] ¬ CommandItem[      tag: "Abort"L, place: [250, line1], proc: RemoveOptions];    items[3] ¬ CommandItem[      tag: "Do it"L, place: [250, line2], proc: GetAttributesApplyOptions];    RETURN[items, TRUE]     END;            WriteMakeOptions: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN FormSW;    nOptions: CARDINAL = 10;    vmWrite: ARRAY [0..2) OF Enumerated ¬      [["Existing VM"L, WriteFrom[ExistingVM]], ["StringSW"L, WriteFrom[String]]];    items ¬ AllocateItemDescriptor[nOptions];    items[0] ¬ NumberItem[tag: "VolumeHandle word1"L, place: [0, line0],       signed: FALSE, notNegative: TRUE, value: @toolData.volumeHandle.lowbits];    items[1] ¬ NumberItem[tag: "word2"L, place: [180, line0], signed: FALSE,      notNegative: TRUE, value: @toolData.volumeHandle.highbits];    items[2] ¬ NumberItem[tag: "FileID word1"L, place: [0, line1],       signed: FALSE, notNegative: TRUE, value: @toolData.fileID.a];    items[3] ¬ NumberItem[tag: "word2"L, place: [180, line1], signed: FALSE,      notNegative: TRUE, value: @toolData.fileID.b];    items[4] ¬ CommandItem[      tag: "Abort"L, place: [280, line1], proc: RemoveOptions];    items[5] ¬ LongNumberItem[tag: "first"L, place: [0, line2], signed: FALSE,      notNegative: TRUE, value: @toolData.first];    items[6] ¬ LongNumberItem[tag: "count(pages)"L, place: [130, line2],      signed: FALSE, notNegative: TRUE, value: @toolData.count];    items[7] ¬ CommandItem[      tag: "Do it"L, place: [280, line2], proc: WriteApplyOptions ];    items[8] ¬ LongNumberItem[tag: "vm"L, place: [0, line3], signed: FALSE,      notNegative: TRUE, value: @toolData.vm, readOnly: TRUE];		    items[9] ¬ EnumeratedItem[tag: "Write From"L, place: [130,line3],       feedback: all, value: @toolData.writeFrom, choices: DESCRIPTOR[vmWrite]];    RETURN[items, TRUE]     END;      GetNextFileMakeOptions: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN FormSW;    nOptions: CARDINAL = 6;    items ¬ AllocateItemDescriptor[nOptions];    items[0] ¬ NumberItem[tag: "VolumeHandle word1"L, place: [0, line0],      signed: FALSE, notNegative: TRUE, value: @toolData.volumeHandle.lowbits];    items[1] ¬ NumberItem[tag: "word2"L, place: [180, line0], signed: FALSE,      notNegative: TRUE, value: @toolData.volumeHandle.highbits];    items[2] ¬ NumberItem[tag: "FileID word1"L, place: [0, line1], signed: FALSE,      notNegative: TRUE, value: @toolData.fileID.a];    items[3] ¬ NumberItem[tag: "word2"L, place: [180, line1], signed: FALSE,      notNegative: TRUE, value: @toolData.fileID.b];    items[4] ¬ CommandItem[      tag: "Abort"L, place: [250, line2], proc: RemoveOptions];    items[5] ¬ CommandItem[      tag: "Do it"L, place: [250, line3], proc: GetNextFileApplyOptions];    RETURN[items, TRUE]     END;          SetRootFileMakeOptions: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN FormSW;    nOptions: CARDINAL = 6;    items ¬ AllocateItemDescriptor[nOptions];    items[0] ¬ NumberItem[tag: "VolumeHandle word1"L, place: [0, line0],       signed: FALSE, notNegative: TRUE, value: @toolData.volumeHandle.lowbits];    items[1] ¬ NumberItem[tag: "word2"L, place: [180, line0], signed: FALSE,      notNegative: TRUE, value: @toolData.volumeHandle.highbits];    items[2] ¬ NumberItem[tag: "FileID word1"L, place: [0, line1], signed: FALSE,      notNegative: TRUE, value: @toolData.fileID.a];    items[3] ¬ NumberItem[tag: "word2"L, place: [180, line1], signed: FALSE,    notNegative: TRUE, value: @toolData.fileID.b];    items[4] ¬ CommandItem[      tag: "Abort"L, place: [250, line2], proc: RemoveOptions];    items[5] ¬ CommandItem[      tag: "Do it"L, place: [250, line3], proc: SetRootFileApplyOptions];    RETURN[items, TRUE]     END;      SetBootFilesMakeOptions: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN FormSW;    sidesdescConverted: EnumeratedDescriptor;    densitydescConverted: EnumeratedDescriptor;    nOptions: CARDINAL = 16;    densitydescConverted ¬ DescriptorDensityTypeConversion[densitydesc];    sidesdescConverted ¬ DescriptorSidesTypeConversion[sidesdesc];    items ¬ AllocateItemDescriptor[nOptions];    items[0] ¬ NumberItem[tag: "VolumeHandle word1"L, place: [0, line0],      signed: FALSE, notNegative: TRUE, value: @toolData.volumeHandle.lowbits];    items[1] ¬ NumberItem[tag: "word2"L, place: [180, line0], signed: FALSE,      notNegative: TRUE, value: @toolData.volumeHandle.highbits];    items[2] ¬ NumberItem[tag: "pilotMicrocode  fileIDa"L, place: [0, line1],      signed: FALSE, notNegative: TRUE, value: @toolData.pilotMicrocode.file.a];    items[3] ¬ NumberItem[tag: "fileIDb"L, place: [240, line1], signed: FALSE,      notNegative: TRUE, value: @toolData.pilotMicrocode.file.b];    items[4] ¬ LongNumberItem[tag: "page"L, place: [355, line1], signed: FALSE,      notNegative: TRUE, value: @toolData.pilotMicrocode.page];    items[5] ¬ NumberItem[      tag: "diagnosticMicrocode  fileIDa"L, place: [0, line2], signed: FALSE,      notNegative: TRUE, value: @toolData.diagnosticMicrocode.file.a];    items[6] ¬ NumberItem[      tag: "fileIDb"L, place: [240, line2], signed: FALSE, notNegative: TRUE,      value: @toolData.diagnosticMicrocode.file.b];    items[7] ¬ LongNumberItem[tag: "page"L, place: [355, line2], signed: FALSE,      notNegative: TRUE, value: @toolData.diagnosticMicrocode.page];    items[8] ¬ NumberItem[tag: "germ  fileIDa"L, place: [0, line3], signed: FALSE,      notNegative: TRUE, value: @toolData.germ.file.a];    items[9] ¬ NumberItem[tag: "fileIDb"L, place: [240, line3], signed: FALSE,      notNegative: TRUE, value: @toolData.germ.file.b];    items[10] ¬ LongNumberItem[tag: "page"L, place: [355, line3], signed: FALSE,      notNegative: TRUE, value: @toolData.germ.page];    items[11] ¬ NumberItem[tag: "pilotBootFile  fileIDa"L, place: [0, line4],      signed: FALSE, notNegative: TRUE, value: @toolData.pilotBootFile.file.a];    items[12] ¬ NumberItem[tag: "fileIDb"L, place: [240, line4], signed: FALSE,      notNegative: TRUE, value: @toolData.pilotBootFile.file.b];    items[13] ¬ LongNumberItem[tag: "page"L, place: [355, line4], signed: FALSE,      notNegative: TRUE, value: @toolData.pilotBootFile.page];    items[14] ¬ CommandItem[      tag: "Abort"L, place: [250, line5], proc: RemoveOptions];    items[15] ¬ CommandItem[      tag: "Do it"L, place: [250, line6], proc: SetBootFilesApplyOptions ];    RETURN[items, TRUE]     END;     END...  LOG20-Nov-81 12:15:06  LXD  created file. 3-Apr-87 18:32:38  RSV  Added copyright notice.  Convert to new FTTDefs.