-- Copyright (C) 1983, 1985, 1987  by Xerox Corporation. All rights reserved. -- MugFile.mesa	last edited by: CAJ     17-Dec-87  9:29:30-- File Subwindow handling for the Disk Torment-and-Scavenge ToolDIRECTORY  File USING [Create, Error, File, ID],  Format USING [NumberFormat],  FormSW USING [    AllocateItemDescriptor, BooleanItem, ClientItemsProcType, CommandItem,    DisplayItem, line0, line1, line2, LongNumberItem, nextPlace, NumberItem,    ProcType],  MugInternal USING [BadCommand, toolData, NewCommand, Unimplemented],  Put USING [Char, CR, LongNumber, Number, Text],  Volume USING [NotOpen],  Window USING [Handle];MugFile: PROGRAM  IMPORTS File, FormSW, MugInternal, Put, Volume  EXPORTS MugInternal  SHARES File -- to get at capability fields-- =  BEGIN  fileCountIndex, fileSizeIndex, fileTypeIndex, permIndex: CARDINAL;  MakeFileSW: PUBLIC FormSW.ClientItemsProcType =    BEGIN OPEN F: FormSW, M: MugInternal;    i: CARDINAL ¬ 0;    nItems: CARDINAL = 7;    items ¬ F.AllocateItemDescriptor[nItems];    items[i] ¬ F.CommandItem[      tag: "Create file(s)"L, place: [0, F.line0], proc: CreateFiles];    items[fileSizeIndex ¬i¬i+1] ¬ F.LongNumberItem[      tag: "Size "L, place: [35, F.line1], signed: FALSE, notNegative: TRUE,      radix: decimal, default: 1, value: @M.toolData.fileSize];    items[fileTypeIndex ¬i¬i+1] ¬ F.NumberItem[      tag: "Type "L, place: F.nextPlace, signed: FALSE, notNegative: TRUE,      radix: octal, default: 177777B, value: @M.toolData.fileType];    items[permIndex ¬i¬i+1] ¬ F.BooleanItem[      tag: "Permanent"L, place: F.nextPlace, switch: @M.toolData.perm];    items[fileCountIndex ¬i¬i+1] ¬ F.NumberItem[      tag: "How many "L, place: [35, F.line2], signed: FALSE, notNegative: TRUE,      radix: decimal, default: 1, value: @M.toolData.fileCount];    items[i¬i+1] ¬ F.CommandItem[      tag: "Set Default Values"L, place: [175, F.line2], proc: SetDefaults];    items[i¬i+1] ¬ F.CommandItem[      tag: "Set Random Values"L, place: [325, F.line2], proc: SetRandom];    RETURN[items: items, freeDesc: TRUE];    END;    CreateFiles: FormSW.ProcType =    BEGIN OPEN t: MugInternal.toolData;    file: File.File;    dFormat: Format.NumberFormat = [base: 10, zerofill: FALSE, unsigned: TRUE,      columns: 0];    oFormat: Format.NumberFormat = [base: 8, zerofill: FALSE, unsigned: TRUE,      columns: 0];    MugInternal.NewCommand[];    THROUGH [0..t.fileCount) DO      file ¬ File.Create[volume: t.volIDs[t.volume], initialSize: t.fileSize,        type: t.fileType	! File.Error => {IF type = reservedType THEN GOTO fileError ELSE REJECT};	  Volume.NotOpen => GOTO notOpen;];      Put.Text[t.logSW, "Created "L];      WriteFileID[t.logSW, file];      Put.Text[t.logSW, "  size="L];      Put.LongNumber[t.logSW, t.fileSize, dFormat];      Put.Text[t.logSW, "  type="L];      Put.Number[t.logSW, t.fileType, oFormat];      Put.CR[t.logSW];      ENDLOOP;  -- number of files to create    EXITS      fileError => MugInternal.BadCommand["Can't create file of that type"L];      notOpen => MugInternal.BadCommand["Volume not open"L];    END;  SetDefaults: FormSW.ProcType =    BEGIN OPEN t: MugInternal.toolData;    MugInternal.NewCommand[];    t.fileSize ¬ 1;    t.fileType ¬ LOOPHOLE[177777B];    t.perm ¬ FALSE;    t.fileCount ¬ 1;    FormSW.DisplayItem[sw, fileSizeIndex];    FormSW.DisplayItem[sw, fileTypeIndex];    FormSW.DisplayItem[sw, permIndex];    FormSW.DisplayItem[sw, fileCountIndex];    END;  SetRandom: FormSW.ProcType =    {MugInternal.Unimplemented[]};      WriteFileID: PUBLIC PROC[h: Window.Handle, file: File.File] =    BEGIN    id: ARRAY [0..idSize) OF WORD = LOOPHOLE[file.fileID];    idSize: CARDINAL = SIZE[File.ID];    format: Format.NumberFormat = [base: 8, zerofill: FALSE, unsigned: TRUE,      columns: 0];    Put.Char[h, '[];    FOR i: CARDINAL IN [0..idSize-1) DO      Put.Number[h, id[i], format];      Put.Text[h, "B, "L];      ENDLOOP;    Put.Number[h, id[idSize-1], format];    Put.Text[h, "B]"L];    END;     END.LOG  Time:    10-Sep-81 15:29:21  By: CAJ 	 Action: Created file.  Time:     2-Oct-81 15:20:37  By: CAJ 	 Action: Added implementation for  	 CreateFiles, SetDefaults, support.  Time:    14-Apr-83 10:46:58  By: EKN    Action: Update to Klamath (File.Capabilty => File.File)    Time:     7-Nov-85 16:52:44  By: RSV    Action: Catch Volume.NotOpen in CreateFiles to avoid crash.  Time:    17-Dec-87  9:29:25  By: CAJ 	  Action: Changed default file type to 177777B from 0.  Made file size representation decimal.