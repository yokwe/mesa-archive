-- NSTerminalOps.mesa-- BGY     	23-Sep-85 17:54:39-- Copyright (C) 1984, 1985 by Xerox Corporation. All rights reserved.DIRECTORY  AddressTranslation,  CH,  Emulator,  Format,  GateStream,  GateStreamExtras,  MSegment,  Queue,  RS232CEnvironment,  StateDefs,  Stream,  System,  TTY,  TTYServiceTypes,  Window;NSTerminalOps: DEFINITIONS = {  DataHandle: TYPE = LONG POINTER TO Data;  Data: TYPE = MACHINE DEPENDENT RECORD [    msgSW(0): Window.Handle ¬ NIL,    formSW(2): Window.Handle ¬ NIL,    ttySW(4): Window.Handle ¬ NIL,    hostType(6): LONG CARDINAL ¬ TTYServiceTypes.exec,    stream(8): Stream.Handle ¬ NIL,    host(10): LONG STRING ¬ NIL,    service(12): System.NetworkAddress ¬ System.nullNetworkAddress,    watcherProcess(18): PROCESS ¬ NIL,    putDataProcess(19): PROCESS ¬ NIL,    getDataProcess(20): PROCESS ¬ NIL,    tty(21): TTY.Handle ¬ TTY.nullHandle,    aborted(23): BOOLEAN ¬ FALSE,    optionW(24): Window.Handle ¬ NIL,    optformSW(26): Window.Handle ¬ NIL,    localMode(28):PROCESS ¬ NIL,    phoneNumber(29): LONG STRING ¬ NIL,    duplexity(31): RS232CEnvironment.Duplexity ¬ full,    charLength(32): RS232CEnvironment.CharLength ¬ 7,    parity(33): RS232CEnvironment.Parity ¬ even,    stopBits(34): RS232CEnvironment.StopBits ¬ 1,    lineSpeed(35): RS232CEnvironment.LineSpeed ¬ bps1200,    flowControl(36): RS232CEnvironment.FlowControl ¬ [none, 0, 0],    realphoneNumber(39): LONG STRING ¬ NIL,    realduplexity(41): RS232CEnvironment.Duplexity ¬ full,    realcharLength(42): RS232CEnvironment.CharLength ¬ 7,    realparity(43): RS232CEnvironment.Parity ¬ even,    realstopBits(44): RS232CEnvironment.StopBits ¬ 1,    reallineSpeed(45): RS232CEnvironment.LineSpeed ¬ bps1200,    realflowControl(46): RS232CEnvironment.FlowControl ¬ [none, 0, 0],    reallineNumber(49): CARDINAL ¬ 0,    lineNumber(50): CARDINAL ¬ 0,    commParams(51): RS232CEnvironment.CommParamObject ¬ TRASH,    session(58): GateStreamExtras.SessionParameterObject ¬ TRASH,    terminal(66): Emulator.TerminalType ¬ adm3a,    refresh(67): Emulator.RefreshHint  ¬ always,    realterminal(68): Emulator.TerminalType ¬ adm3a,    realrefresh(69): Emulator.RefreshHint  ¬ always,    realhost(70): LONG STRING ¬ NIL,    q(72): Queue.Handle ¬ TRASH,    filter(74): BOOLEAN ¬ TRUE,    realfilter(75): BOOLEAN ¬ TRUE,    logIn(76): BOOLEAN ¬ TRUE,    reallogIn(77): BOOLEAN ¬ TRUE,    authenticate(78): BOOLEAN ¬ TRUE,    realauthenticate(79): BOOLEAN ¬ TRUE,    busy(80): BOOLEAN ¬ FALSE,    dataFile(81): LONG STRING ¬ NIL,    realdataFile(83): LONG STRING ¬ NIL,    state(85): StateDefs.Handle ¬ NIL,    segment(87): MSegment.Handle ¬ NIL,    connectorProcess(89): PROCESS ¬ NIL,    transport(90): ARRAY[0..2) OF GateStream.TransportObject ¬ TRASH];  FormItems: TYPE = {connect, disconnect, breakKey, another, destroy, options};  Strings: TYPE = LONG POINTER TO StringSequence;  StringSequence: TYPE = RECORD[    SEQUENCE length: CARDINAL OF LONG STRING];      Ports: TYPE = LONG POINTER TO PortSequence;  PortSequence: TYPE = RECORD[    SEQUENCE length: CARDINAL OF Pointer];    Pointer: TYPE = LONG POINTER TO Element;  Element: TYPE = RECORD[    next: Pointer ¬ NIL,    name: LONG STRING ¬ NIL,    lineNumber: CARDINAL ¬ 0,    addr: System.NetworkAddress,    charLength: RS232CEnvironment.CharLength,    parity: RS232CEnvironment.Parity,    stopBits: RS232CEnvironment.StopBits,    flowControl: RS232CEnvironment.FlowControl,    duplexity: RS232CEnvironment.Duplexity,    lineSpeed: RS232CEnvironment.LineSpeed];      Write: PROC[data: DataHandle, s: LONG STRING];  Writeln: PROC[data: DataHandle, s: LONG STRING];  Msg: PROC[data: DataHandle, s: LONG STRING];    -- NSTerminalImpl    FindContext: PROC[sw: Window.Handle] RETURNS [data: DataHandle];    -- NSTerminalErrors    GateError: PROC[data: DataHandle, error: GateStream.ErrorReason];  PrintOther: PROC[data: DataHandle, code: AddressTranslation.Reason];  PrintCHErr: PROC[data: DataHandle, code: CH.Code];  PrintSST: PROC[data: DataHandle, sst: Stream.SubSequenceType];    -- NSTerminalInit  InitPortList:  PROC[Out: Format.StringProc];  AddMenu: PROC[sw: Window.Handle];  RemoveMenu: PROC[sw: Window.Handle];  InitUser: PROC[];  InitContext: PROC[data: DataHandle];  ChangeName: PROC[data: DataHandle];  GetStateTable: PROC[data: DataHandle];  Go: PROC[data: DataHandle] RETURNS [yes: BOOLEAN];  Done: PROC[data: DataHandle];  }.