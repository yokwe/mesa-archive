-- PromBlowToolDefs.mesa-- Internal definitions for PromBlowTool.  This stuff is imported --  and exported by PromBlowToolA and PromBlowToolB-- Last edit by:-- Purves,     27-Aug-85 17:15:09  supports start time and % complete-- created by Purves on 21-Aug-85 18:11:14-- Copyright (C) 1985 by Xerox Corporation. All rights reserved.DIRECTORY   Window USING [Handle];   PromBlowToolDefs: DEFINITIONS = {<<***********>><< T Y P E S >><<***********>>  DataHandle: TYPE = LONG POINTER TO Data;  Data: TYPE = MACHINE DEPENDENT RECORD [    msgSW(0): Window.Handle ¬ NIL,    formSW(2): Window.Handle ¬ NIL,    fileSW(4): Window.Handle ¬ NIL,    fileName(6): LONG STRING ¬ NIL,    list(8): BOOLEAN ¬ FALSE,    checkVirgin(9): BOOLEAN ¬ FALSE,    field(10): Fields [AllBits..FourthNibble] ¬ AllBits,    slices(11): UNSPECIFIED ¬ 1,    start(12): LONG STRING ¬ NIL,    end(14): LONG STRING ¬ NIL,    chip(16): LONG STRING ¬ NIL,    memSize(18): UNSPECIFIED ¬ 2048,    width(19): UNSPECIFIED ¬ 8,    virgin(20): VirginStates ¬ ones,    writeTime(21): UNSPECIFIED ¬ 0,    pMCode(22): UNSPECIFIED ¬ 7,    debug(23): BOOLEAN ¬ FALSE,    percent(24): CARDINAL ¬ 0,    time(25): LONG STRING ¬ NIL];  FormItems: TYPE = {fileName, write, list, checkVirgin, verify, read, catalog, field, slices, start, end, chip, memSize, width, virgin, writeTime, pMCode, debug, confirm, deny, percent, time};    PromSpec: TYPE = RECORD [    chipType: LONG STRING,    wordsize, memsize, virginvalue, writeTime, pMCode: CARDINAL];  Fields: TYPE = {    AllBits, FirstByte, SecondByte, FirstNibble, SecondNibble, ThirdNibble,    FourthNibble};  VirginStates: TYPE = {zeroes, ones};<<*******************>><< V A R I A B L E S >><<*******************>>  data: DataHandle;  isBusy: BOOL;  abort: BOOL;  wh: Window.Handle;  -- Tool's window  heap: UNCOUNTED ZONE;  dataPos, dataLength: LONG CARDINAL;<<*********************>><< P R O C E D U R E S >><<*********************>><<  Procedures from PromBlowToolA  >> Confirmed: PROCEDURE RETURNS [BOOL];<<  Procedures from PromBlowToolB  >> Complain: PROCEDURE [msg: LONG STRING]; FreeImage: PROCEDURE;  DisplayPromSpecs: PROCEDURE; BlowDotBinOrDotProm: PROCEDURE [s: LONG STRING, isVerify: BOOL]; ReadProgrammerBuffer: PROCEDURE;}...