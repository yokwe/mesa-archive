;Remote Heads Test Handler;;--	FXB   .PA	 4-Dec-84  8:57:31	:moved init to FakeDisk.asm;--	FXB   .PA	 3-Dec-84 18:56:45	:created local initialization for OPIE!16;--	FXB   .PA	 1-Oct-84 10:34:20	:use get workMaskForCondition;--	FXB   .PA	28-Sep-84 11:33:33	:OPIE!13 updates;--	FXB   .PA	28-Aug-84 13:18:20	:separated from OPUMBL	NAME 	rhTest$	NOLIST$	INCLUDE(IOPDEFS.asm)$	INCLUDE(IOPMacro.asm)$	INCLUDE(IORegion.asm)$	LISTIORegion		SEGMENT		COMMON 			Assume DS:IORegion		EXTRN	rhClientCondition: ClientCondition, upNotifyMask: WORDEXTRN	remHeadsDownNotifyMask: WORD, upNotifyCond: ConditionEXTRN 	remHeadsTestCond: ConditionIORegion		ENDSIOPEInROM	SEGMENT PUBLIC	ASSUME CS: IOPEInROMPUBLIC RemHeadsTestHandlerRemHeadsTestHandler:; SET UP THE CLIENT CONDITION; should be done in MESA world	MOV	AX, OFFSET upNotifyCond 	MOV	rhClientCondition.conditionPtr, AX 	MOV	AX, OFFSET upNotifyMask ; mask Ptr 	MOV	rhClientCondition.clientMaskPtr, AX 	MOV	AX, 1			; mask value 	MOV	rhClientCondition.clientMask, AX 		; GET WORK MASK FOR CONDITION	MOV	BX, remHeadsTestCond	%GetWorkMaskForCondition(OFFSET remHeadsTestCond)	MOV	remHeadsDownNotifyMask, AX 	;-- MESA world needs to get remHeadsDownNotifyMask before doing down Notify	rhLoop:	%WaitForCondition (OFFSET remHeadsTestCond,noTimeout)		; Test "handler":	; invert shared memory, assume ES = 0	MOV 	CX, 150		; number of words in shared memory	MOV	BX, 1200H	;start address of shared memory	XOR	AX, AX	MOV	ES, AX	;zero ES for accessing low RAMinvertMemLoop:	NOT	ES: WORD PTR [BX]	INC	BX	INC 	BX	LOOP	invertMemLoop		%NotifyClientCondition (rhClientCondition)	JMP	rhLoop		IOPEInROM	ENDSEND