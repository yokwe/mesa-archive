-- Copyright (C) 1981, 1982  by Xerox Corporation. All rights reserved. --Timer.mesa - edited by:-- Loretta	 6-Aug-81 16:36:00-- SHayes	 2-Sep-81 15:37:53-- Johnsson	22-Sep-82 16:23:24DIRECTORY  Exec USING [AddCommand, ExecProc, FreeTokenString, GetToken],  Format USING [Char, CR, LongNumber, NumberFormat, StringProc],  String USING [Empty],  System USING [    GetClockPulses, GetGreenwichMeanTime, GreenwichMeanTime, Pulses, PulsesToMicroseconds];Timer: PROGRAM IMPORTS Exec, Format, String, System =  {  OPEN System;  Time: TYPE = RECORD [gmt: GreenwichMeanTime, pulses: Pulses];  Millisecs: TYPE = LONG CARDINAL;  write: Format.StringProc ¬ NIL;  Get: PROC RETURNS [Time] = INLINE {    RETURN[Time[gmt: GetGreenwichMeanTime[], pulses: GetClockPulses[]]]};      MillisecsET: PROC [time: Time] RETURNS [Millisecs] = INLINE {    timeNew: Time ¬ Get[];    RETURN[      IF timeNew.gmt - time.gmt>3600 THEN (timeNew.gmt - time.gmt)*1000      ELSE PulsesToMicroseconds[[timeNew.pulses - time.pulses]]/1000]};  WriteMillisecs: PROC [m: Millisecs] = {    f2: Format.NumberFormat = [base: 10, zerofill: TRUE, unsigned: TRUE, columns: 2];    f3: Format.NumberFormat = [base: 10, zerofill: TRUE, unsigned: TRUE, columns: 3];    fhr: Format.NumberFormat = [base: 10, zerofill: FALSE, unsigned: TRUE, columns: 3];    sec: LONG CARDINAL;    min: LONG CARDINAL;    hr: LONG CARDINAL;    sec ¬ m/1000;    min ¬ sec/60;    hr ¬ min/60;    m ¬ m MOD 1000;    sec ¬ sec MOD 60;    min ¬ min MOD 60;    write[" Elapsed Time:"L];    Format.LongNumber[write, hr, fhr]; Format.Char[write, ':];    Format.LongNumber[write, min, f2]; Format.Char[write, ':];    Format.LongNumber[write, sec, f2]; Format.Char[write, '.];    Format.LongNumber[write, m, f3]; Format.CR[write];    };  globalTime: Time;  Main: Exec.ExecProc = {    filename, switches: LONG STRING ¬ NIL;    milliET:  Millisecs¬ MillisecsET[globalTime];    [filename, switches] ¬ Exec.GetToken[h];    [] ¬ Exec.FreeTokenString[filename];    {ENABLE UNWIND => [] ¬ Exec.FreeTokenString[switches];    SELECT TRUE FROM      String.Empty[switches],      switches[0] = 't => {WriteMillisecs[milliET]; globalTime ¬ Get[]};      switches[0] = 's => WriteMillisecs[milliET];      switches[0] = 'i => globalTime ¬ Get[];      ENDCASE => {write["Switches are {i,s,t,none}! "L]; WriteMillisecs[milliET]}};    [] ¬ Exec.FreeTokenString[switches];   };  Register: PROC = {    Exec.AddCommand["Timer.~"L, Main];    -- Put.Text[wh, "Timer switches: {i(nit), s(ubtotal), none=t(otal)} "L];    globalTime ¬ Get[];    };  Register[];  }...    