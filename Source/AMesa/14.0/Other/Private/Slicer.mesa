-- Copyright (C) 1981, 1983  by Xerox Corporation. All rights reserved. -- File: Slicer.mesa - last edit by-- Sandman,	February 14, 1981-- Karlton,	18-Nov-81 18:56:28-- Loretta,	20-Apr-83 11:53:33DIRECTORY  Process USING [Detach, priorityNormal, SetPriority, SetTimeout],  ProcessOperations USING [IndexToHandle, Requeue],  ProcessPriorities USING [priorityIOHigh],  PSB USING [PDA, PDABase, PsbHandle],  SpecialSpace USING [MakeProcedureResident];Slicer: MONITOR IMPORTS Process, ProcessOperations, SpecialSpace =BEGINtimer: CONDITION;Slice: ENTRY PROCEDURE =  BEGIN  pda: PSB.PDABase = PSB.PDA;  pLast, process, pNext: PSB.PsbHandle;  Process.SetPriority[ProcessPriorities.priorityIOHigh];  DO    WAIT timer;    pLast ¬ ProcessOperations.IndexToHandle[pda.ready.tail];    process ¬ ProcessOperations.IndexToHandle[pda[pLast].link.next];    FOR process ¬ process, pNext DO      pNext ¬ ProcessOperations.IndexToHandle[pda[process].link.next];      IF pda[process].link.priority = Process.priorityNormal THEN {        ProcessOperations.Requeue[@pda.ready, @pda.ready, process];	EXIT};      IF process = pLast THEN EXIT;      ENDLOOP;    ENDLOOP;  END;Init: PROCEDURE = BEGINSpecialSpace.MakeProcedureResident[Init];Process.SetTimeout[@timer, 2];Process.Detach[FORK Slice];END;Init[];END.