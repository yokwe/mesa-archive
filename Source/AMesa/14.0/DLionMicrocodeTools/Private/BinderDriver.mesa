-- Copyright (C) 1982, 1983  by Xerox Corporation. All rights reserved. -- File: BinderDriver.mesa-- Last edit by: JAC   		16-May-85 18:34:47DIRECTORY  CodeOutputDefs USING [ReInit],  CommandDefs USING [    Bind8085, BinderFileError, InvalidBinderInput, MultipleDef, ReInit,    UndefinedSymbol, UnreferencedSymbol],  Exec USING [AddCommand, CheckForAbort, ExecProc, FreeTokenString, GetToken, OutputProc],  Format USING [Line, LongNumber, StringProc, Text],  Heap USING [Create, Delete],  ListOutputDefs USING [ReInit],  MStream USING [GetLength, Handle, Log, SetLogReadLength],  PrivateStorage USING [],  Stream USING [Delete, PutString],  SymbolTableDefs USING [ClearSymbolTable, NoOpsFile],  SymTabIODefs USING [ReInit],  System USING [CreateIntervalTimer, GetIntervalTime, Microseconds, TimerHandle];BinderDriver: PROGRAM  IMPORTS    CodeOutputDefs, CommandDefs, Exec, Format, Heap, ListOutputDefs, MStream, Stream, SymbolTableDefs, SymTabIODefs, System  EXPORTS PrivateStorage =  BEGIN  heapPointer: PUBLIC UNCOUNTED ZONE;  logHandle: MStream.Handle ¬ NIL;  Driver: Exec.ExecProc  =    BEGIN    bindError: BOOLEAN ¬ FALSE;    name, switches: LONG STRING ¬ NIL;    elapsedTime, tempTime: System.Microseconds;    timerHandle: System.TimerHandle;        DisplayElapsedTime: PROCEDURE = {      zeroFillSeconds: BOOLEAN ¬ FALSE;      Format.Text[Write, "  Time: "L];      elapsedTime ¬ System.GetIntervalTime[t: timerHandle];      tempTime ¬ elapsedTime/60000000;      IF tempTime > 0 THEN         BEGIN	  Format.LongNumber[proc: Write, n: tempTime, format: [base: 10, unsigned: TRUE, zerofill: FALSE, columns: 0]];	  elapsedTime ¬ elapsedTime - (tempTime * 60000000);	  Format.Text[Write, ":"];	  zeroFillSeconds ¬ TRUE;	END;       tempTime ¬ elapsedTime/1000000;      Format.LongNumber[proc: Write, n: tempTime, format: [base: 10, unsigned: TRUE, zerofill: zeroFillSeconds, columns: 2]];      elapsedTime ¬ elapsedTime - (tempTime * 1000000);      tempTime ¬ elapsedTime/1000;      Format.Text[Write,"."L];      Format.LongNumber[proc: Write, n: tempTime, format: [base: 10, unsigned: TRUE, zerofill: TRUE, columns: 3]];      Format.Text[Write, "\n"]};          Write: Format.StringProc = {      Stream.PutString[sH: logHandle, string: s];      Exec.OutputProc[h][s]};          logHandle ¬ MStream.Log[name: "Bind8085.log"L, release: [NIL, NIL]];    DO      timerHandle ¬ System.CreateIntervalTimer[];      IF Exec.CheckForAbort[h: h] THEN          {Stream.Delete[logHandle];	logHandle ¬ NIL; 	RETURN[outcome: abort]};      [name, switches] ¬ Exec.GetToken[h];      IF name = NIL AND switches = NIL THEN EXIT;      IF name = NIL THEN LOOP;      heapPointer ¬ Heap.Create[initial: 1];      Format.Text[Write, "File: "L];      Format.Line[Write, name];      BEGIN      CommandDefs.Bind8085[name, Write !        CommandDefs.BinderFileError =>          BEGIN	  Format.Text[Write, "ERROR:  "L];	  Format.Text[Write, fn];	  Format.Line[Write, " - File Error"L];          GOTO FileError;          END;        CommandDefs.InvalidBinderInput =>          BEGIN          SELECT code FROM            1 => Format.Line[Write, "ERROR:  Invalid Hex Digit in Input"L];            2 => Format.Line[Write, "ERROR:  Invalid File Name"L];            3 => Format.Line[Write, "ERROR:  Attempt to overlay code"L];            4 => Format.Line[Write, "ERROR:  Invalid character in config file"L];            5 => Format.Line[Write, "ERROR:  Bad address in input file"L];            ENDCASE => NULL;          GOTO FileError;          END;        CommandDefs.UndefinedSymbol =>          BEGIN	  Format.Text[Write, "ERROR:  Symbol '"L];	  Format.Text[Write, name];	  Format.Line[Write, "' is still unresolved"L];          bindError ¬ TRUE;          RESUME          ;          END;        CommandDefs.UnreferencedSymbol =>          BEGIN	  Format.Text[Write, "WARNING:  Imported symbol '"L];	  Format.Text[Write, name];	  Format.Line[Write, "' is not referenced"L];	  bindError ¬ TRUE;          RESUME          ;          END;        CommandDefs.MultipleDef =>          BEGIN	  Format.Text[Write, "ERROR:  Symbol '"L];	  Format.Text[Write, name];	  Format.Line[Write, "' is multiply defined"L];          GOTO FileError;          END];      Format.Line[Write, " "L];      IF bindError THEN        BEGIN 	Format.Text[Write, "Errors and/or warnings reported."L];	outcome ¬ error;        END      ELSE Format.Text[Write, "Bind complete."L];      EXITS        FileError =>          BEGIN	  Format.Text[Write, "\nErrors reported."L];	  outcome ¬ error;          END;      END;      SymbolTableDefs.ClearSymbolTable[! SymbolTableDefs.NoOpsFile => CONTINUE];      Heap.Delete[z: heapPointer--, checkEmpty: TRUE--];      heapPointer ¬ NIL;      CodeOutputDefs.ReInit[];      ListOutputDefs.ReInit[];      SymTabIODefs.ReInit[];      CommandDefs.ReInit[];      name ¬ Exec.FreeTokenString[name];       switches ¬ Exec.FreeTokenString[switches];      DisplayElapsedTime[];      MStream.SetLogReadLength[stream: logHandle, position: MStream.GetLength[stream: logHandle]];      ENDLOOP;      Stream.Delete[logHandle];      logHandle ¬ NIL;    END;  Init: PROC =    BEGIN    heapPointer ¬ NIL;    Exec.AddCommand[name: "Bind8085.~"L, proc: Driver];    END;  Init[];  END....    -- LOG  -- ETN        - 12-Apr-82 10:37:06 - Convert to Trinity  -- ETN        -  1-Oct-82 16:47:40 - Change command name  -- DEG     	- 13-Jan-83 15:16:20 - Convert to Sierra  -- DEG     	- 31-Jan-83  7:16:57 - Replace TTY with Format  -- DEG     	- 29-May-83 20:46:47 - Check for the stop key being pressed at least once per source file.  Add timing information.  -- Time: 26-Sep-84 23:04:21	By: DEG     	Action: Added copyright notice and rebuild for 11.1 release.  -- JAC        - 16-May-85 18:35:50 - comment out 'checkEmpty: TRUE' in Heap.Delete of Driver since 12.0 now implements and heap isn't empty