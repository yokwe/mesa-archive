-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- CPKernelMesa.mesa, HGM, 13-Nov-83  1:37:54DIRECTORY  Inline USING [BITAND],  String USING [AppendString],  CP USING [RReg, UReg],  CPKernel USING [Error, ReadOther, ReadRReg, ReadUReg],  CPKernelOps USING [CantWriteThatRegister],  CPSymbols USING [Error, Eval, Symbol];CPKernelMesa: PROGRAM  IMPORTS Inline, String, CPKernel, CPKernelOps, CPSymbols  EXPORTS CPKernel =  BEGIN    ReadPC: PUBLIC PROCEDURE RETURNS [pc: CARDINAL] =    BEGIN    pc ¬ 0;    IF Read["uPCCross"L] # 0 THEN pc ¬ 100H;    pc ¬ pc + Inline.BITAND[Read["PC"L], 0FFH];    pc ¬ pc - (Read["UvC"L]-Read["UvPCpage"L]);    pc ¬ pc * 2;    pc ¬ pc + CPKernel.ReadOther[pc16];    END;      WritePC: PUBLIC PROCEDURE [pc: CARDINAL] =    BEGIN    CPKernelOps.CantWriteThatRegister[];    END;      Read: PROCEDURE [s: LONG STRING] RETURNS [CARDINAL] =    BEGIN    value: CPSymbols.Symbol;    value ¬ CPSymbols.Eval[s !      CPSymbols.Error =>        BEGIN	temp: STRING = [200];        String.AppendString[temp, "Can't find "L];        String.AppendString[temp, s];        String.AppendString[temp, " in symbol table: "L];        String.AppendString[temp, reason];	ERROR CPKernel.Error[temp];        END];    WITH value SELECT FROM      rReg => RETURN[CPKernel.ReadRReg[r]];      uReg => RETURN[CPKernel.ReadUReg[u]];      ENDCASE => ERROR CPKernel.Error["Unexpected type of register from Symbol table"L];    END;  END.