-- Copyright (C) 1982, 1983  by Xerox Corporation. All rights reserved. -- File: TmPass1Impl.mesa-- Last edit by DEG      26-Sep-84 20:56:31-- Last edit by JAC    12-Aug-83 15:48:00-- Edit by ETN   16-Jul-82 11:43:13DIRECTORY  Exec USING [CheckForAbort],  String USING [AppendLongNumber,AppendString],  System USING [GetGreenwichMeanTime],  TmAssembler,  TmControl USING [BeginTime, errorsInThisFile, execHandle, FinishTime, statement, TtyLine, UserAbort],    TmFile USING [OpenNextDf, OpenNextMc],  TmLabel USING [BuildEarlyBinary, ClearHashTable, EndOfStatementProc, InitLTHeap, McFileEndProc, ReleaseLTSpace],  TmModule USING [BreakPhraseMain, InterpretMain];TmPass1Impl: PROGRAM  IMPORTS Exec, String, System, TmAssembler, TmControl, TmFile, TmLabel, TmModule EXPORTS TmModule  =  BEGIN OPEN TmAssembler, TmLabel, TmModule;  Pass1: PUBLIC PROC[] =    BEGIN    Flags: Flagword;    str: LONG STRING ¬ [30];        TotalTime: LONG CARDINAL;            CreateStmtSegment;    InitLTHeap[16,8];    UNTIL TmFile.OpenNextDf[] DO  -- for each .df file            str.length ¬ 0;                        DO  -- for each statement        IF Exec.CheckForAbort[TmControl.execHandle] THEN          ERROR TmControl.UserAbort;                TmControl.statement ¬ Statement[];        DO  -- for each phrase          Flags ¬ BreakPhraseMain[NIL];          IF NOT Flags.Error THEN InterpretMain[Flags];          IF Flags.Semi OR Flags.Eof THEN EXIT;          ENDLOOP;  -- end for each phrase        IF Flags.Eof THEN EXIT;	FreeStmtSpace;        ENDLOOP;  -- end each statement       TmControl.FinishTime ¬ System.GetGreenwichMeanTime[];      TotalTime ¬ TmControl.FinishTime - TmControl.BeginTime;      String.AppendLongNumber[str,TotalTime,10];      String.AppendString[str," second(s)"L];      IF TmControl.errorsInThisFile THEN         String.AppendString[str, "     Errors ..."];      TmControl.TtyLine[str];           ENDLOOP;  -- end each .df file            UNTIL TmFile.OpenNextMc[] DO  -- for each .mc file      ClearHashTable;                  str.length ¬ 0;                  DO  -- for each statement        IF Exec.CheckForAbort[TmControl.execHandle] THEN          ERROR TmControl.UserAbort;                TmControl.statement ¬ Statement[];        DO  -- for each phrase          Flags ¬ BreakPhraseMain[NIL];          IF NOT Flags.Error THEN InterpretMain[Flags];          IF Flags.Semi OR Flags.Eof THEN EXIT;          ENDLOOP;  -- end for each phrase        IF TmControl.statement.firstPhrase # NIL THEN {ProcessStatement[];	  FreeStmtSpace};        IF Flags.Eof THEN EXIT;        ENDLOOP;  -- end each statement      McFileEndProc[];      TmControl.FinishTime ¬ System.GetGreenwichMeanTime[];      TotalTime ¬ TmControl.FinishTime - TmControl.BeginTime;      String.AppendLongNumber[str,TotalTime,10];      String.AppendString[str," second(s)"L];      IF TmControl.errorsInThisFile THEN         String.AppendString[str, "     Errors ..."];      TmControl.TtyLine[str];      ENDLOOP;  -- end each .mc file    ReleaseLTSpace;            DeleteStmtSegment;    END;  -- of ProcessMain proc  ProcessStatement: PUBLIC PROC =    BEGIN    -- Create Encoding records for each Phrase in the statement.    IF EncodeStatement[@TmControl.statement] THEN {      -- Phrases were successfully encoded.      -- Merge the Encoding records for the statement into a single       -- encoding record. This encoding record is allocated by Merge,       -- and it is pointed to by statement.encoding.      IF ~MergeStatementEncoding[@TmControl.statement] THEN {        -- Merge was not  successful.        PrintStatementErrorMsgs[@TmControl.statement];        IF TmControl.statement.encoding # NIL THEN          TmControl.statement.encoding.cy.value ¬ 4;        };      }  -- of Phrases were successfully encoded.    ELSE {  -- Phrases were not successfully encoded.      PrintStatementErrorMsgs[@TmControl.statement];      IF TmControl.statement.encoding # NIL THEN        TmControl.statement.encoding.cy.value ¬ 4};    BuildEarlyBinary[TmControl.statement.encoding];    EndOfStatementProc[];        END;  -- of ProcessStatement proc  END...-- Time: 26-Sep-84 20:56:16	By: DEG     	Action: Added copyright notice and rebuild for 11.1 release.-- 12-Aug-83 15:50:51 - JAC        - Display to screen if there are errors in a file when it is finished processing-- 28-Jul-83 13:43:24 - JAC        - Only FreeStmtSpace if line is a statement-- 22-Jul-83 15:05:32 - JAC        - Delete InitLTHeap from mc loop-- 15-Jul-83 11:58:19 - JAC        - Insert ReleaseLTSpace since the hashTable--   isn't reinitialized for every file anymore-- 14-Jul-83 10:14:12 - JAC        - Rearrange processing time-- 13-Jul-83  9:56:27 - JAC        - Eliminate use of tempHeap-- 12-Jul-83 14:10:45 - JAC        - Move InitHeap out of mc statement loop-- 7-Jul-83 15:32:29 - JAC         -Statement Segment-- 16-Jul-82 11:43:26 - ETN        - TrinityMass Version 1