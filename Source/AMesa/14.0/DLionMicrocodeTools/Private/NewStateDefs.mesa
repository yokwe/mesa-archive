-- Copyright (C) 1979, 1981  by Xerox Corporation. All rights reserved. -- Definitions File:-- This will one day be constructed from the HDF-- Last edited by don October 12, 1979  5:40 PM-- Last edited by PXJ    November 16, 1979  12:37 PM-- Time: 26-Sep-84 23:14:54	By: DEG     	Action: Added copyright notice and rebuild for 11.1 release.-- State of Machine is represented hereNewStateDefs: DEFINITIONS =  BEGIN  oneK: CARDINAL = 1024;  MemoryType: PUBLIC TYPE = {Null, IOPregister, IOPmain};  MemoryUnit: PUBLIC TYPE = CARDINAL;  MemoryAddress: PUBLIC TYPE = CARDINAL;  RegisterUnit: PUBLIC TYPE = CARDINAL;  RegisterAddress: PUBLIC TYPE = {    B, C, D, E, H, L, M, A, PCH, PCL, SPH, SPL, Flags, RIM};  RegisterPairs: PUBLIC TYPE = {BC, x1, DE, x2, HL, x3, SP, PSW, PC};  -- x1, x2, x3 are dummies to keep the numbers straight  Argument: PUBLIC TYPE = RECORD [value: CARDINAL, type: ArgType];  ArgType: PUBLIC TYPE = {regpr, reg, byte, word};  Operation: PUBLIC TYPE = RECORD [value: [0..377B], type: OpType];  --beware these are cast in concrete by 8085asm.ops--  OpType: PUBLIC TYPE = {    UnDef, Type1, Type2, Type3, Type4, Type5, Type6, Type7, Type8, Type9, org,    end, dw, db, ds, page, space, equ, get, imp, exp, file, title, list, nolist,    rst, DefSym, reg, regpair, CPType};  Address: PUBLIC TYPE = RECORD [    SELECT memorytype: MemoryType FROM    IOPregister => [reg: RegisterAddress],    IOPmain => [addr: MemoryAddress],    Null => NULL,    ENDCASE];  ContentValue: PUBLIC TYPE = RECORD [    SELECT memorytype: MemoryType FROM    IOPregister => [val: RegisterUnit], IOPmain => [val: MemoryUnit], ENDCASE];  Instruction: TYPE = RECORD [    inslen: [0..3], insbyte1, insbyte2, insbyte3: [0..377B]];  -- Configuration procedures  MemSize: PROCEDURE RETURNS [MemoryAddress];  GetSaveArea: PROCEDURE RETURNS [MemoryAddress];  GetBreakpointArea: PROCEDURE RETURNS [MemoryAddress];  MemoryExists: PROCEDURE [a: Address] RETURNS [BOOLEAN];  -- and there will be more !  Contents: PROCEDURE [a: Address] RETURNS [ContentValue];  Store: PROCEDURE [a: Address, v: ContentValue];  DoubleContents: PROCEDURE [r1, r2: RegisterAddress] RETURNS [CARDINAL];  DoubleStore: PROCEDURE [r1, r2: RegisterAddress, v: CARDINAL];  ReadMemoryBlock: PUBLIC PROCEDURE [    a: IOPmain Address, n: CARDINAL, target: POINTER];  WriteMemoryBlock: PUBLIC PROCEDURE [    a: IOPmain Address, n: CARDINAL, from: POINTER];  END.