-- File: ChatErrors.mesa - last edit:-- AOF                 15-May-87 18:09:47-- ChatErrors.mesa-- BGY     	28-Jul-84 17:51:54-- DWR    	28-Jan-85 11:07:46-- Copyright (C) 1984, 1987 by Xerox Corporation. All rights reserved.DIRECTORY  AddressTranslation,  CH,  GateStream,  Stream,  NetworkStream,  ChatOps;ChatErrors: PROGRAM   IMPORTS ChatOps  EXPORTS ChatOps = PUBLIC {OPEN ChatOps;    GateError: PROC[data: DataHandle, error: GateStream.ErrorReason] = {    -- locals    errorReason: ARRAY GateStream.ErrorReason OF STRING ¬ [      unimplemented: "unimplement device"L,       noCommunicationHardware: "no communication hardware or invalid line"L,      illegalTransport: "illegal transport service or not supported"L,      mediumConnectFailed: "connection failed -- bad phone number or no answer"L,      badAddressFormat: "bad address format"L,       noDialingHardware: "no dialing hardware"L,      dialingHardwareProblem: "dialing hardware problem"L,      transmissionMediumUnavailable: "transmission medium unavailable"L,      inconsistentParams: "inconsistent parameters"L,      tooManyGateStreams: "too many streams open now -- try again later"L,      bugInGAPCode: "bugInGAPCode"L,      gapNotExported: "gapNotExported"L,      gapCommunicationError: "gapCommunicationError"L,      controllerAlreadyExists: "controller already created (3270)"L,      controllerDoesNotExist: "controller specified by terminal does not exist"L,      deviceAddressInUse: "terminal/printer address in use (3270)"L,      deviceAddressInvalid: "terminal/printer address invalid (3270)"L,      serviceTooBusy: "service busy -- try again later"L,      userNotAuthenticated: "user could not be authenticated"L,      userNotAuthorized: "user not authorized"L,      serviceNotFound: "service not found"L,      registeredTwice: "service registered twice"L,      networkTransmissionMediumHardwareProblem:        "networkTransmissionMediumHardwareProblem"L,      networkTransmissionMediumUnavailable:         "networkTransmissionMediumUnavailable"L,      networkTransmissionMediumNotReady:         "networkTransmissionMediumNotReady"L,      networkNoAnswerOrBusy: "networkNoAnswerOrBusy"L,      noRouteToGAPService: "noRouteToGAPService"L,      gapServiceNotResponding: "gapServiceNotResponding"L,      courierProtocolMismatch: "courierProtocolMismatch"L,      gapVersionMismatch: "gapVersionMismatch"L];    Write[data, "GateStream ERROR: "L];    Write[data, errorReason[error]];    Write[data, "\n"L];    };        PrintOther: PROC[data: DataHandle, code: AddressTranslation.Reason] = {    Msg[data, "\nOther Address Translation: "L];    Msg[data, SELECT code FROM      noUsefulProperties =>"noUsefulProperties"L,      ambiguousSeparators =>"ambiguousSeparators"L,      tooManySeparators =>"tooManySeparators"L,      ENDCASE =>"Unknown error"L];    };  PrintCHErr: PROC[data: DataHandle, code: CH.Code] = {    Msg[data, "\nAddress Translation: "L];    Msg[data, SELECT code FROM      done =>"done"L,      notAllowed =>"notAllowed"L,      rejectedTooBusy =>"rejectedTooBusy"L,      allDown =>"allDown"L,      badProtocol =>"badProtocol"L,      illegalPropertyID =>"illegalPropertyID"L,      illegalOrgName =>"illegalOrgName"L,      illegalDomainName =>"illegalDomainName"L,      illegalLocalName =>"illegalLocalName"L,      noSuchOrg =>"noSuchOrg"L,      noSuchDomain =>"noSuchDomain"L,      noSuchLocal =>"noSuchLocal"L,      propertyIDNotFound =>"propertyIDNotFound"L,      wrongPropertyType =>"wrongPropertyType"L,      noChange =>"noChange"L,      outOfDate =>"outOfDate"L,      overflowOfName =>"overflowOfName"L,      overflowOfDataBase =>"overflowOfDataBase"L,      wasUpNowDown =>"wasUpNowDown"L,      ENDCASE =>"Unknown CH error"L];    };              PrintSST: PROC[data: DataHandle, sst: Stream.SubSequenceType] = {    Msg[data, "\nSubsequence change: "L];    Msg[data, SELECT sst FROM      GateStream.none => "none"L,      GateStream.interrupt => "interrupt"L,      GateStream.resume => "resume"L,      GateStream.audibleSignal => "audibleSignal"L,      GateStream.areYouThere => "areYouThere"L,      GateStream.iAmHere => "iAmHere"L,      GateStream.abortGetTransaction => "abortGetTransaction"L,      GateStream.abortPutTransaction => "abortPutTransaction"L,      GateStream.endOfTransaction => "endOfTransaction"L,      GateStream.yourTurnToSend => "yourTurnToSend"L,      GateStream.disconnect => "disconnect"L,      GateStream.transparentDataFollows => "transparentDataFollows"L,      GateStream.endOfTransparentData => "endOfTransparentData"L,      GateStream.abortMark => "abortMark"L,      GateStream.parameters => "parameters"L,      GateStream.parityError => "parityError"L,      GateStream.garbledReceiveData => "garbledReceiveData"L,      GateStream.mediumUp => "mediumUp"L,      GateStream.mediumDown => "mediumDown"L,      GateStream.ourAccessIDRejected => "ourAccessIDRejected"L,      GateStream.weRejectedAccessID => "weRejectedAccessID"L,      GateStream.noGetForData => "noGetForData"L,      GateStream.unsupportedProtocolFeature => "unsupportedProtocolFeature"L,      GateStream.unexpectedRemoteBehavior => "unexpectedRemoteBehavior"L,      GateStream.unexpectedSoftwareFailure => "unexpectedSoftwareFailure"L,      GateStream.remoteNotResponding => "remoteNotResponding"L,      GateStream.remoteNotReceiving => "remoteNotReceiving"L,      GateStream.excessiveRetransmissions => "excessiveRetransmissions"L,      GateStream.chain3270 => "chain3270"L,      GateStream.unchained3270 => "unchained3270"L,      GateStream.readModified3270 => "readModified3270"L,      GateStream.readModifiedAll3270 => "readModifiedAll3270"L,      GateStream.readBuffer3270 => "readBuffer3270"L,      GateStream.status3270 => "status3270"L,      GateStream.testRequest3270 => "testRequest3270"L,      GateStream.sscpData => "sscpData"L,      GateStream.configurationMismatch3270 => "configurationMismatch3270"L,      GateStream.hostPolling3270 => "hostPolling3270"L,      GateStream.hostNotPolling3270 => "hostNotPolling3270"L,      GateStream.bindFailed => "bindFailed"L,      GateStream.puActive => "puActive"L,      GateStream.puInactive => "puInactive"L,      GateStream.spareSSTValue1 => "spareSSTValue1"L,      GateStream.spareSSTValue2 => "spareSSTValue2"L,      NetworkStream.closeReplySST => "closeReplySST"L,      NetworkStream.closeSST => "closeSST"L,      GateStream.sstToRemoveAttentionByte => "sstToRemoveAttentionByte"L,      GateStream.endOfTransactionAck => "endOfTransactionAck"L,      GateStream.cleanup => "cleanup"L,      ENDCASE => "???"L];    Msg[data, "\n"L];    };    }.