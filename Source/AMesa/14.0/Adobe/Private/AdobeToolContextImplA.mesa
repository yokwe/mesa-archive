-- Copyright (C) 1983, 1984, 1985  by Xerox Corporation. All rights reserved. --File: AdobeToolContextImplA.mesa-- Freedman  	19-Jul-83 11:26:51-- RSF	 	28-Feb-84 16:25:10-- JCS	 	31-Jul-85 15:48:58DIRECTORY  AdobeOps USING [    ARSystemHandle, FieldList, FormSWOrder, nilARNumber, nilEnum, ToolType,    UserSpecifiedOrder],  AdobeToolContext,  String USING [MakeString],  Time USING [defaultTime];AdobeToolContextImplA: PROGRAM   IMPORTS String   EXPORTS AdobeToolContext =  BEGIN  --sequence used for Table Lookup  ValueSequencePtr: TYPE = LONG POINTER TO ValueSequence;  ValueSequence: TYPE = RECORD [seq: SEQUENCE length: CARDINAL OF LONG STRING];  loginName: LONG STRING ¬ NIL;  InitializeUserContext: PUBLIC PROCEDURE [    arSH: AdobeOps.ARSystemHandle, tool: AdobeOps.ToolType, z: UNCOUNTED ZONE]    RETURNS [userContext: AdobeToolContext.UserContext] =    BEGIN    --allocate user context with object the size of field list    userContext ¬ z.NEW[AdobeToolContext .UserContextRec[arSH.fieldList.len]];    userContext.arSH ¬ arSH;    InitializedToNonDisplayed[userContext];    SetDisplayed[userContext, tool, z];    END;  InitializedToNonDisplayed: PROCEDURE [    userContext: AdobeToolContext.UserContext] =    BEGIN    FOR i: CARDINAL IN [0..userContext.length) DO      userContext[i] ¬ [FALSE, nonDisplayedField[NIL]] ENDLOOP;    END;  SetDisplayed: PROCEDURE [    uC: AdobeToolContext.UserContext, tool: AdobeOps.ToolType, z: UNCOUNTED ZONE] =    BEGIN    formOrder: AdobeOps.UserSpecifiedOrder ¬ uC.arSH.formSWOrderArray[tool];    fL: AdobeOps.FieldList ¬ uC.arSH.fieldList;    FOR i: CARDINAL IN [0..formOrder.length) DO      WITH body: fL[formOrder[i]] SELECT FROM        arId =>          uC[formOrder[i]] ¬ [FALSE, displayedField[[arId[AdobeOps.nilARNumber]]]];        fixedLengthString =>          uC[formOrder[i]] ¬ [            FALSE, displayedField[            [fixedLengthString[String.MakeString[z, body.maxLength]]]]];        string => uC[formOrder[i]] ¬ [FALSE, displayedField[[string[NIL]]]];        dateTime =>          uC[formOrder[i]] ¬ [            FALSE, displayedField[[dateTime[NIL, Time.defaultTime]]]];        numeric => uC[formOrder[i]] ¬ [FALSE, displayedField[[numeric[0]]]];        enumerated =>          uC[formOrder[i]] ¬ [            FALSE, displayedField[[enumerated[AdobeOps.nilEnum]]]];        ENDCASE;      ENDLOOP;    END;  FreeUserContext: PUBLIC PROCEDURE [    uCPtr: LONG POINTER TO AdobeToolContext.UserContext, z: UNCOUNTED ZONE] =    BEGIN ResetUserContext[uCPtr^, z]; z.FREE[uCPtr]; END;  ResetUserContext: PUBLIC PROCEDURE [    uC: AdobeToolContext.UserContext, z: UNCOUNTED ZONE] =    BEGIN    FOR i: CARDINAL IN [0..uC.length) DO      WITH type: uC[i] SELECT FROM        nonDisplayedField => z.FREE[@type.readOnlyField];        displayedField =>          WITH body: type.editableField SELECT FROM            arId => body.arn ¬ AdobeOps.nilARNumber;            dateTime => z.FREE[@body.temp];            numeric => body.num ¬ 0;            fixedLengthString, string => z.FREE[@body.s];            enumerated => body.value ¬ AdobeOps.nilEnum;            ENDCASE;        ENDCASE;      ENDLOOP;    END;  ClearUserContext: PUBLIC PROCEDURE [uC: AdobeToolContext.UserContext] = {    FOR i: CARDINAL IN [0..uC.length) DO      WITH type: uC[i] SELECT FROM        displayedField =>          WITH body: type.editableField SELECT FROM            arId => body.arn ¬ AdobeOps.nilARNumber;            dateTime => IF body.temp # NIL THEN body.temp.length ¬ 0;            numeric => body.num ¬ 0;            fixedLengthString, string => IF body.s # NIL THEN body.s.length ¬ 0;            enumerated => body.value ¬ AdobeOps.nilEnum;            ENDCASE;        ENDCASE;      ENDLOOP};  END.....