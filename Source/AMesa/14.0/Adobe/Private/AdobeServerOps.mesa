-- Copyright (C) 1984, 1985  by Xerox Corporation. All rights reserved. -- File: AdobeServerOps.mesa -- Last modified by:-- BJD		24-May-84 17:18:17-- RSF		 9-Oct-85 15:00:18-- PAD          25-Jul-84 17:41:12-- JCS	        21-Apr-85 19:16:02-- RLC		 1-Aug-86 11:44:20DIRECTORY  AdobeCourier USING [LocationOfARs, ProcedureType, ServiceProc],  AdobeOps USING [ARSystemHandle, ARVersion, FieldList, RunOfARs],  AdobeServer USING [    ChangeList, ErrorType, FieldItemValue, StartOrStop, Time],  AdobeUpdater USING [UpdaterInfo],  Auth USING [IdentityHandle],  Courier USING [Arguments, Results],  NSExec USING [    ClientID, ClientStatus, ExecProc, Handle, nullClientID,    nullHandle],  NSFile USING [    Attributes, AttributeList, AttributesProc, Handle, Lock,    nullHandle, nullSession, Session],  NSName USING [Name],  NSString USING [nullString, String],  Stream USING [Handle],  System USING [NetworkAddress, nullNetworkAddress];AdobeServerOps: DEFINITIONS =  BEGIN  nSystems: CARDINAL = 5;  -- TYPES  data: DataObject;  Data: TYPE = LONG POINTER TO DataObject;  DataObject: TYPE = MONITORED RECORD [    z: UNCOUNTED ZONE ¬ NIL,    status: NSExec.ClientStatus ¬ stopped,    tracing: BOOLEAN ¬ FALSE,    id: NSExec.ClientID ¬ NSExec.nullClientID,    execHandle: NSExec.Handle ¬ NSExec.nullHandle,    serviceId: Auth.IdentityHandle ¬ NIL,    serviceName: NSName.Name ¬ NIL,    me: System.NetworkAddress ¬ System.nullNetworkAddress,    fileSession: NSFile.Session ¬ NSFile.nullSession,    adobeDir: NSFile.Handle ¬ NSFile.nullHandle,    systems: SystemSequence ¬ NIL,    currentClients: CARDINAL ¬ 0];  SetStatus: TYPE = RECORD [    runOffset, setIndex: CARDINAL ¬ LAST[CARDINAL]];  -- standard file names  adobeFolder: LONG STRING;  -- "AdobeFolder"  acceleratorsDir: LONG STRING;  -- "AcceleratorsDir"  descriptionFile: LONG STRING;  -- "DescriptionFile"  defaultUserFile: LONG STRING;  -- "DefaultUserFile"  updaterBackingFile: LONG STRING;  -- "UpdaterBackingFile"  SystemSequence: TYPE = LONG POINTER TO SystemSequenceRecord;  SystemSequenceRecord: TYPE = RECORD [    seq: SEQUENCE length: CARDINAL OF SystemEntry];  AccTable: TYPE = LONG POINTER TO AccTableRecord;  AccTableRecord: TYPE = RECORD [    seq: SEQUENCE length: CARDINAL OF AccTableEntry];  AccTableEntry: TYPE = RECORD [    file: NSFile.Handle ¬ NSFile.nullHandle,    name: NSString.String ¬ NSString.nullString];  SystemEntry: TYPE = LONG POINTER TO SystemEntryRecord;  SystemEntryRecord: TYPE = RECORD [    name: NSString.String ¬ NSString.nullString,  -- system name    sysH: NSFile.Handle ¬ NSFile.nullHandle,  -- system directory handle    adH: NSFile.Handle ¬ NSFile.nullHandle,  -- accelerator directory handle    dfH: NSFile.Handle ¬ NSFile.nullHandle,  -- description file handle    updaterInfo: AdobeUpdater.UpdaterInfo ¬ NIL,  --updater's data    startUpdater: CONDITION,  --CV to wake updater with    updaterSleep: BOOLEAN ¬ FALSE,  --boolean assoc. with updaterCV    accTable: AccTable ¬ NIL,    systemCV: CONDITION,  -- CV for accelerator access    status: StatusType ¬ open,  -- current access status    readerCount: CARDINAL ¬ 0,  -- count of readers using accelerators    stable: BOOLEAN ¬ TRUE  -- indicates no change being made to desc    ];  StatusType: TYPE = {readerIn, writerWaiting, writerIn, open};  CompareResult: TYPE = {less, equal, greater};  -- From AdobeCourierServerImplA/B  CatchErrors: PROCEDURE [proc: PROC];  AdobeError: PROCEDURE [why: AdobeServer.ErrorType];  StartUpService: PROCEDURE;  TakeDownService: PROCEDURE;  LookupARs, AboutToStore, UpdateAccelerators, UpdateAcceleratorField,    CompletedUpdate, GetAcceleratorInfo, MakeAcceleratorFileForField:    AdobeCourier.ServiceProc;  UpdateAcceleratorsInternal: PROCEDURE [    systemName: LONG STRING, run: AdobeOps.RunOfARs];  AddSystemEntry: PROC [    sysH, adH, dfH: NSFile.Handle, name: NSString.String];  Bug: ERROR;  -- From AdobeServerInternals  RetrieveSystemDescription: PROCEDURE [    system: LONG STRING, z: UNCOUNTED ZONE]    RETURNS [arSH: AdobeOps.ARSystemHandle];  RetrieveSystemDescriptionInternal: PROCEDURE [    descFH: NSFile.Handle, z: UNCOUNTED ZONE]    RETURNS [arSH: AdobeOps.ARSystemHandle];  FreeSystemDescriptionInternal: PROCEDURE [    arSH: AdobeOps.ARSystemHandle, z: UNCOUNTED ZONE];  GetNextSubmitNumberInternal: PROCEDURE [system: LONG STRING]    RETURNS [arNumber: LONG CARDINAL];  PutSubmitNumberInternal: PROCEDURE [    system: LONG STRING, submitNumber: LONG CARDINAL];  SubmitFailedInternal: PROCEDURE [    system: LONG STRING, arNumber: LONG CARDINAL];  DirtyAcceleratorInternal: PROCEDURE [    system: LONG STRING, arNumber: LONG CARDINAL];  ReadLastARNumberInternal: PROCEDURE [system: LONG STRING]    RETURNS [lastAR: LONG CARDINAL];  GetLocationOfARsInternal: PROCEDURE [    system: LONG STRING, attributes: NSFile.Attributes]    RETURNS [location: AdobeCourier.LocationOfARs];  PutLocationOfARsInternal: PROCEDURE [    system: LONG STRING, location: AdobeCourier.LocationOfARs];  PutVersionIDInternal: PROCEDURE [    system: LONG STRING, version: AdobeOps.ARVersion];  GetVersionInternal: PROCEDURE [system: LONG STRING]    RETURNS [version: AdobeOps.ARVersion];  GetStartOrStopTimeInternal: PROCEDURE [    system: LONG STRING, which: AdobeServer.StartOrStop]    RETURNS [startOrStopTime: AdobeServer.Time];  PutStartOrStopTimeInternal: PROCEDURE [    system: LONG STRING, which: AdobeServer.StartOrStop,    startOrStopTime: AdobeServer.Time];  FreeTime: PROCEDURE [time: AdobeServer.Time];  PutSytemDefaultUserFileInternal: PROCEDURE [    system: LONG STRING, from: Stream.Handle];  GetSytemDefaultUserFileInternal: PROCEDURE [    system: LONG STRING, to: Stream.Handle];  GetResidentSystemStringsInternal: PROCEDURE [    arguments: Courier.Arguments, results: Courier.Results];  VerifyVersionInternal: PROCEDURE [    system: LONG STRING, version: AdobeOps.ARVersion]    RETURNS [ok: BOOLEAN];  UpdateAcceleratorFieldInternal: PROCEDURE [    systemName: LONG STRING, arNumber: LONG CARDINAL,    fieldName: LONG STRING, value: AdobeServer.FieldItemValue];  UpdateAcceleratorInternal: PROCEDURE [    systemName: LONG STRING, systemEntry: SystemEntry,    run: AdobeOps.RunOfARs];  ChangeFieldListInternal: PROCEDURE [    systemName: LONG STRING, changeList: AdobeServer.ChangeList,    oldVersion: AdobeOps.ARVersion];  ChangeLocationOfARsInternal: PROCEDURE [    systemName, newHost, newDirectory: LONG STRING];  MakeAcceleratorFileForFieldInternal: PROCEDURE [    system: LONG STRING, fieldIndex: CARDINAL,    fieldList: AdobeOps.FieldList, exec: NSExec.Handle];  AddField: PROCEDURE [    exec: NSExec.Handle, arSH: AdobeOps.ARSystemHandle,    nextEnum: CARDINAL]    RETURNS [      newEnumStart: CARDINAL, newFL: AdobeOps.FieldList,      changeMade: BOOLEAN];  ModifyField: PROCEDURE [    exec: NSExec.Handle, arSH: AdobeOps.ARSystemHandle,    fieldIndex: CARDINAL, nextEnum: CARDINAL]    RETURNS [newEnumStart: CARDINAL, changeMade: BOOLEAN];  RemoveField: PROCEDURE [    exec: NSExec.Handle, arSH: AdobeOps.ARSystemHandle, fli: CARDINAL]    RETURNS [newFL: AdobeOps.FieldList, changeMade: BOOLEAN];  ReplaceSystemDescription: PROCEDURE [    fH: NSFile.Handle, arSH: AdobeOps.ARSystemHandle];  GetDesiredSystem: PROCEDURE [exec: NSExec.Handle]    RETURNS [index: CARDINAL];  SystemIndex: PROCEDURE [systemName: LONG STRING]    RETURNS [index: CARDINAL];  -- Initialization and Utilities  StartUpAdobeDirectory: PROCEDURE;  TakeDownAdobeDirectory: PROCEDURE;  -- cached operations  GetSystemDirectory: PROC [systemName: LONG STRING]    RETURNS [dH: NSFile.Handle];  GetAcceleratorsDir: PUBLIC PROC [systemName: LONG STRING]    RETURNS [dH: NSFile.Handle];  GetDescriptionFile: PROC [systemName: LONG STRING]    RETURNS [fH: NSFile.Handle];  GetAcceleratorFile: PROCEDURE [    systemName: LONG STRING, fieldName: LONG STRING]    RETURNS [fH: NSFile.Handle];  GetDefaultUserFile: PROC [systemName: LONG STRING]    RETURNS [fH: NSFile.Handle];  CreateSystemDirectory: PROCEDURE [systemName: LONG STRING]    RETURNS [sysH: NSFile.Handle];  OpenAcceleratorFile: PROC [    parent: NSFile.Handle, lock: NSFile.Lock ¬ none,    fieldName: LONG STRING] RETURNS [fH: NSFile.Handle];  OpenDescriptionFile: PROC [systemName: LONG STRING]    RETURNS [fH: NSFile.Handle];  CreateAcceleratorFile: PROC [    parent: NSFile.Handle, lock: NSFile.Lock ¬ none,    fieldName: LONG STRING] RETURNS [fH: NSFile.Handle];  EnumerateAcceleratorFiles: PROCEDURE [    parent: NSFile.Handle, proc: NSFile.AttributesProc];  -- From AdobeServerControl  ChangeFieldList, GetDefUserFile, DestroyARSystem,    PutDefaultUserFile, RegisterSystem, RestoreARSystem,    SetBackupPath, TryBackup, UnRegisterSystem: NSExec.ExecProc;  CatchErrorsFromExec: PROCEDURE [    proc: PROCEDURE, exec: NSExec.Handle];  CreateFile: PROC [    directory: NSFile.Handle, attributes: NSFile.AttributeList]    RETURNS [fH: NSFile.Handle];  OpenFile: PROC [parent: NSFile.Handle, path: NSString.String]    RETURNS [fH: NSFile.Handle];  OpenByName: PROCEDURE [    directory: NSFile.Handle, path: NSString.String,    session: NSFile.Session ¬ NSFile.nullSession,    lock: NSFile.Lock ¬ share] RETURNS [fH: NSFile.Handle];  CloseFile: PROC [fH: NSFile.Handle];  END.