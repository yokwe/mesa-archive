-- Copyright (C) 1985  by Xerox Corporation. All rights reserved. -- AdobeToolDriverImpl.mesa-- RSF      	29-Mar-85 12:50:11-- JCS  	31-Jan-85 21:28:02DIRECTORY  AdobeOps USING [ToolType],  AdobeCommon USING [DataHandle],  AdobeCommonInternal USING [InstanceDataHandle],  AdobeToolDriver,  ToolDriver USING [Address, NoteSWs, RemoveSWs],  Window USING [Handle];AdobeToolDriverImpl: MONITOR --assure integrity of status  IMPORTS ToolDriver  EXPORTS AdobeToolDriver  =  BEGIN   status: AdobeToolDriver.ToolDriverStatus;    AddToolDriver: PUBLIC ENTRY PROCEDURE[    data: AdobeCommon.DataHandle] =    BEGIN    instanceData: AdobeCommonInternal.InstanceDataHandle ¬ data.instanceData;    IF status.info[data.tool].registered      AND status.info[data.tool].w = data.window THEN       --check to see if this is the same one which was already      --registered. If so, its formSW has changed and we must      --reregister it      ToolDriver.RemoveSWs["AdobeQuery"L]      ELSE IF status.info[data.tool].registered THEN RETURN;--a tool of this type is already registered with the tool driver    WITH inst: instanceData SELECT FROM      edit => {        addresses: ARRAY [0..4) OF ToolDriver.Address ¬ [	  [name: "msgSW"L, sw: data.msgSW],	  [name: "cmdSW"L, sw: data.cmdSW],	  [name: "editCmdSW"L, sw: inst.cmdSW],	  [name: "formSW"L, sw: inst.formSW]];	ToolDriver.NoteSWs["AdobeEdit"L, DESCRIPTOR[addresses]]; 	};       submit => {        addresses: ARRAY [0..4) OF ToolDriver.Address ¬ [	  [name: "msgSW"L, sw: data.msgSW],	  [name: "cmdSW"L, sw: data.cmdSW],	  [name: "submitCmdSW"L, sw: inst.cmdSW],	  [name: "formSW"L, sw: inst.formSW]];	ToolDriver.NoteSWs["AdobeSubmit"L, DESCRIPTOR[addresses]]; 	};       report => {        addresses: ARRAY [0..--5--4) OF ToolDriver.Address ¬ [	  [name: "msgSW"L, sw: data.msgSW],	  [name: "cmdSW"L, sw: data.cmdSW],	  [name: "reportCmdSW"L, sw: inst.cmdSW],	  [name: "formSW", sw: inst.formSW]];	ToolDriver.NoteSWs["AdobeReport"L, DESCRIPTOR[addresses]]; 	};      query => {        addresses: ARRAY [0..4) OF ToolDriver.Address ¬ [	  [name: "msgSW"L, sw: data.msgSW],	  [name: "cmdSW"L, sw: data.cmdSW],	  [name: "queryCmdSW"L, sw: inst.cmdSW],	  [name: "formSW"L, sw: inst.formSW]];	ToolDriver.NoteSWs["AdobeQuery"L, DESCRIPTOR[addresses]]; 	};      sort => {        addresses: ARRAY [0..3) OF ToolDriver.Address ¬ [	  [name: "msgSW"L, sw: data.msgSW],	  [name: "cmdSW"L, sw: data.cmdSW],	  [name: "sortCmdSW"L, sw: inst.cmdSW]];	ToolDriver.NoteSWs["AdobeSort"L, DESCRIPTOR[addresses]]; 	};      queryList => {        addresses: ARRAY [0..4) OF ToolDriver.Address ¬ [	  [name: "msgSW"L, sw: data.msgSW],	  [name: "cmdSW"L, sw: data.cmdSW],	  [name: "queryListCmdSW"L, sw: inst.cmdSW],	  [name: "formSW", sw: inst.formSW]];	ToolDriver.NoteSWs["AdobeQueryList"L, DESCRIPTOR[addresses]]; 	};      ENDCASE => ERROR;    status.info[data.tool] ¬ [registered: TRUE, w: data.window];    END;      RemoveToolDriver: PUBLIC ENTRY PROCEDURE[    data: AdobeCommon.DataHandle, oldValue: AdobeOps.ToolType] =    BEGIN    IF status.info[oldValue].w # data.window THEN RETURN;--this isn't the tool of this type which the tool driver knows about    SELECT oldValue FROM      edit => ToolDriver.RemoveSWs["AdobeEdit"L];      submit => ToolDriver.RemoveSWs["AdobeSubmit"L];      report => ToolDriver.RemoveSWs["AdobeReport"L];      query => ToolDriver.RemoveSWs["AdobeQuery"L];      sort => ToolDriver.RemoveSWs["AdobeSort"L];      queryList => ToolDriver.RemoveSWs["AdobeQueryList"L];      ENDCASE => ERROR;    status.info[oldValue] ¬ [registered: FALSE, w: NIL];    END;        END.