-- Copyright (C) 1983, 1984, 1985  by Xerox Corporation. All rights reserved. -- File: AdobeOps.mesa -- Last modified by:-- Tina 	10-May-83 13:18:46-- Davirro 	17-May-84 16:02:34-- Saaranzin 	 9-Aug-84 13:58:46-- Sawai 	31-Jan-85 15:43:37DIRECTORY  FormSW,  System,  Time,  Window;      AdobeOps: DEFINITIONS =    BEGIN  ARNumber: TYPE = LONG CARDINAL;  ARVersion: TYPE = LONG CARDINAL; -- description version --    -- ARSystemObject. There is one ARSystemObject for each ARSystem.    ARSystemHandle: TYPE = LONG POINTER TO ARSystemObject;  ARSystemObject: TYPE = MACHINE DEPENDENT RECORD [    name: LONG STRING ¬ NIL,  -- name of the ARSystem --    host: LONG STRING ¬ NIL,  -- file server where the ARs are stored --    directory: LONG STRING ¬ NIL,  -- directory where the ARs are stored --    refCount: CARDINAL ¬ 0, -- number of active Adobe tools using this system --    sysQL: QueryList ¬ NIL,--query lists are always allocated from AdobeOps.z    otherQLs: QLHandle ¬ NIL,    version: ARVersion ¬ 0,   -- description version --    service:  System.NetworkAddress ¬ System.nullNetworkAddress,    fieldList: FieldList ¬ NIL,    formSWOrderArray: FormSWOrder ¬ ALL[NIL]];  -- specifies display order of FormSW items for individual tools --      -- The .user file specifies the order of the entries in the FormSW for each tool.  -- We want to create the items in the FormSW in this order. The FormSWOrder array  -- records the location of the information pertaining to that field in the FieldList Array  -- and in the UserContextArray.  -- Ex. For the EditTool, if FieldList item 16 it to be displayed as the 4th item of the FormSW,  -- editOrder: FormSWOrder[edit][4] ¬ [16]  FormSWOrder: TYPE = ARRAY ToolType OF UserSpecifiedOrder;  UserSpecifiedOrder: TYPE = LONG POINTER TO UserOrderSequence;  UserOrderSequence: TYPE = MACHINE DEPENDENT RECORD[    order(0): SEQUENCE length(0): CARDINAL OF CARDINAL];    -- FieldList Stuff.  A FieldList describes all of the fields and enumerated items that   -- compose an ARSystem. There is one FieldList per ARSystem.    -- systemMust defaults are specified in the ARSystem description.  -- userDefault defaults are specified in the .user file.  These defaults are stored  -- in the FieldItemObject.  -- An example of a FieldItemObject follows.  -- [name: Originator,  --  defaultInfo: array of pointers to DefaultInfoObjects  --     defaultInfo[edit]^ = [default: Somers, systemMust: FALSE, place: [x: 115, y: line0]]  --     defaultInfo[submit]^ = [default: LoginName, systemMust: TRUE,   --                                   place: [x: 0, y: line0]]  --     defaultInfo[report]^ = [default: Somers, defaultType: FALSE, place: [x: 50, y: line5]]  --  body: string]    ToolType: TYPE = MACHINE DEPENDENT {edit(0), submit(1), report(2), query(3), sort(4), queryList(5)};       FieldItemHandle: TYPE = LONG POINTER TO FieldItemObject;  FieldList: TYPE = LONG POINTER TO FieldListArray;  FieldListArray: TYPE = MACHINE DEPENDENT RECORD[    flSeq(0): SEQUENCE len(0): CARDINAL OF FieldItemObject];  FieldItemObject: TYPE = MACHINE DEPENDENT RECORD [    name(0): LONG STRING ¬ NIL,    defaultInfo(2): ARRAY ToolType OF DefaultInfoHandle ¬ ALL[NIL],     body(14):      SELECT type(14): FieldType FROM	arId => NULL,	dateTime => NULL,	numeric => NULL,	fixedLengthString => [maxLength(15): CARDINAL ¬ 0],	enumerated => [	  field(15): DependsOnIndex ¬ LAST[CARDINAL],  -- index of system depended on --	  possibilities(16): KeyedPossibilities ¬ NIL],  -- the menu items --        string => NULL,       ENDCASE];	  KeyedPossibilities: TYPE = LONG POINTER TO KeyedPossibilitiesSeq;  KeyedPossibilitiesSeq: TYPE = MACHINE DEPENDENT RECORD [    seq(0): SEQUENCE len(0): CARDINAL OF Possibilities];  Possibilities: TYPE = MACHINE DEPENDENT RECORD [    keyedDependency: CARDINAL ¬ 0, enumRecs: EnumeratedSequence ¬ NIL];  EnumeratedSequence: TYPE = LONG POINTER TO EnumeratedSequenceType;  EnumeratedSequenceType: TYPE = MACHINE DEPENDENT RECORD [    seq(0): SEQUENCE length(0): CARDINAL OF FormSW.Enumerated];  DependsOnIndex:  TYPE = CARDINAL;  FieldType: TYPE = MACHINE DEPENDENT {     arId(0), dateTime(1), numeric(2), fixedLengthString(3), enumerated(4), string(5)};  FieldTypeIndex: TYPE = CARDINAL[ORD[FIRST[FieldType]]..ORD[LAST[FieldType]]];            -- Default stuff.      DefaultInfoHandle: TYPE = LONG POINTER TO DefaultInfoObject;  DefaultInfoObject: TYPE = MACHINE DEPENDENT RECORD [    default(0): LONG STRING ¬ NIL,    systemMust(2): BOOLEAN ¬ FALSE,      place(3): Window.Place ¬ FormSW.newLine,    width(5): CARDINAL ¬ FormSW.defaultBoxWidth];      --Query list definitions  QLHandle: TYPE = LONG POINTER TO QLObject;  QLObject: TYPE = RECORD [qL: QueryList, next: QLHandle];  QueryList: TYPE = LONG POINTER TO QueryListBody;  QueryListBody: TYPE = RECORD [name: LONG STRING, list: SetOfARs];    SetOfARs: TYPE = LONG POINTER TO SetOfARsObject;  SetOfARsObject: TYPE = MACHINE DEPENDENT RECORD [    arSeq(0): SEQUENCE len(0): CARDINAL OF RunOfARs];  RunOfARs: TYPE = RECORD [    startValue: AdobeOps.ARNumber, runLength: LONG CARDINAL];    --runLength of 1 -> single AR       z: UNCOUNTED ZONE;  Initialize: PROCEDURE;  -- Set up, allocate any global data;  CleanUp: PROCEDURE;    -- NIL definitions  nilEnum: CARDINAL = FormSW.nullEnumeratedValue;  nilARNumber: ARNumber = 0;  nilPossibilities: EnumeratedSequence;  nullDependsOnIndex: DependsOnIndex = LAST[CARDINAL];  END.