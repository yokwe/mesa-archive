-- Copyright (C) 1985  by Xerox Corporation. All rights reserved. -- AdobeToolContext.mesa-- MXF      x-- RSF        20-Mar-85 16:18:10-- JCS        12-Sep-85 14:17:17DIRECTORY  AdobeOps USING [ARNumber, ARSystemHandle, EnumeratedSequence,   FieldList, FieldType, KeyedPossibilities, ToolType],  Stream USING [Handle],  Time USING [Packed];  AdobeToolContext: DEFINITIONS =BEGIN  DefaultType: TYPE = {systemMust, userDefault};    --raised if GetBlock called with block size less than 2  BlockTooSmall:  ERROR;  --raised from calls to GetFieldValue, GetFieldValuePair and ReadAR  StreamError: ERROR [type: Type];  Type: TYPE = {    fieldListEmpty, fieldNameNotFound, badValueField, badFieldNameField,    missingFieldNameField, missingValueField};      EnumError: ERROR [why: EnumProblemType];  EnumProblemType: TYPE = {noMatch};    CreateStream: PROCEDURE[fL: AdobeOps.FieldList] RETURNS[Stream.Handle];    DisplayType: TYPE = {displayedField, nonDisplayedField};    Indices: TYPE = [1..50);        UserContextHandle: TYPE = LONG POINTER TO UserContextObject;  UserContext: TYPE = LONG POINTER TO UserContextRec;  UserContextRec: TYPE = RECORD[    arSH: AdobeOps.ARSystemHandle,    context: SEQUENCE length: CARDINAL OF UserContextObject];      UserContextObject: TYPE = RECORD[    dirty: BOOLEAN _ FALSE,    body:      SELECT type: DisplayType FROM	nonDisplayedField => [readOnlyField: LONG STRING],	displayedField => [editableField: UserContextBody],	ENDCASE];        UserContextBody: TYPE = RECORD [    SELECT type: AdobeOps.FieldType FROM       arId => [arn: AdobeOps.ARNumber],       fixedLengthString, string => [s: LONG STRING],         dateTime => [temp: LONG STRING, dt: Time.Packed],        numeric => [num: LONG CARDINAL],       enumerated => [value: CARDINAL],       ENDCASE];         InitializeUserContext: PROCEDURE[    arSH: AdobeOps.ARSystemHandle, tool: AdobeOps.ToolType,    z: UNCOUNTED ZONE]    RETURNS[userContext: UserContext];  FreeUserContext: PROCEDURE[    uCPtr: LONG POINTER TO UserContext, z: UNCOUNTED ZONE];  ResetUserContext: PROCEDURE[uC: UserContext, z: UNCOUNTED ZONE];  ClearUserContext: PROCEDURE[uC: UserContext];    FindPossibilities: PROCEDURE[    value: CARDINAL, possibilities: AdobeOps.KeyedPossibilities]    RETURNS[AdobeOps.EnumeratedSequence];  GetValueFromEnumString: PROCEDURE[    s: LONG STRING, uC: AdobeToolContext.UserContext, index: CARDINAL]    RETURNS[value: CARDINAL];    GetEnumValueFromUC: PROCEDURE[    uC: AdobeToolContext.UserContext, index: CARDINAL]    RETURNS[value: CARDINAL];    ConvertStreamDataToUserContext: PROCEDURE[sH: Stream.Handle, to: UserContext, z: UNCOUNTED ZONE];  ConvertUserContextToStreamData: PROCEDURE[sH: Stream.Handle, from: UserContext];  --For Report to use in getting strings from an AR file    GetValuePairFromTable: PROCEDURE[index: CARDINAL, sH: Stream.Handle]    RETURNS[value: LONG STRING];  --For Report. Resets the length of value to 0.  ResetDataTableValues: PROCEDURE[sH: Stream.Handle];       END...	   