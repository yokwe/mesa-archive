-- Copyright (C) 1984, 1985  by Xerox Corporation. All rights reserved. -- AdobeCourierClientImplB.mesa    Edited by:-- BJD		18-May-84 11:47:56-- RSF		16-Apr-86 17:58:10-- JCS		31-Jan-85 17:37:06-- RLC		 8-Aug-86 20:09:12 -- Courier client stub for Accelerator stuff.DIRECTORY  AdobeCourier USING [    DescribeGetAcceleratorInfoArguments, DescribeLookupARsArguments,    DescribeMakeAccelFileForFieldArguments, DescribeSetOfARs,    DescribeUpdateAcceleratorFieldArguments,    DescribeUpdateAcceleratorsArguments, DescribeUpdaterArguments,    GetAcceleratorInfoArguments, LookupARsArguments,    MakeAccelFileForFieldArguments, SetOfARsRecord, SignalCatcher,    translateProc, UpdateAcceleratorFieldArguments,    UpdateAcceleratorsArguments, UpdaterArguments],  AdobeOps USING [ARNumber, ARVersion, FieldList, SetOfARs, z],  AdobeServer USING [    Error, FieldItemQueryValue, FieldItemValue,    StreamCheckoutProcType, StringArray, SystemElement,    VerifyVersion],  Courier USING [Call, Free, Handle],  NSName USING [maxFullNameLength],  Runtime USING [CallDebugger],  String USING [EmptyString, MakeString];AdobeCourierClientImplB: PROGRAM  IMPORTS AdobeCourier, AdobeOps, AdobeServer, Courier, Runtime, String  EXPORTS AdobeServer =  BEGIN OPEN AdobeServer;  courierTimeout: CARDINAL = 30;  --IMPLEMENT THE INTERFACE   LookupARs: PUBLIC PROCEDURE [    server: SystemElement, systemName: LONG STRING,    version: AdobeOps.ARVersion, fieldName: LONG STRING,    value: FieldItemQueryValue, set: AdobeOps.SetOfARs]    RETURNS [s: AdobeOps.SetOfARs] =    BEGIN    arguments: AdobeCourier.LookupARsArguments;    localName: LONG STRING ¬ GetLocalName[systemName];    {    ENABLE UNWIND => FreeLocalName[localName];    lookupARs: PROCEDURE [cH: Courier.Handle] = {      resultRecord: AdobeCourier.SetOfARsRecord;      [] ¬ Courier.Call[        cH: cH,        procedureNumber: AdobeCourier.translateProc[lookupARs],        arguments: [        @arguments, AdobeCourier.DescribeLookupARsArguments],        results: [@resultRecord, AdobeCourier.DescribeSetOfARs]];      IF resultRecord.set[0].startValue = 0 THEN s ¬ NIL      ELSE s ¬ resultRecord.set};    arguments ¬ [localName, version, fieldName, value, set.len, set];    -- bear trap for AR#9454      WITH value.value SELECT  FROM         enumerated  =>             IF value.relationalOp ~IN [equal..notEqual] THEN            Runtime.CallDebugger[	     "Serious bug encountered. Please call your System Administrator"L];          ENDCASE;    -- end bear trap for AR#9454       AdobeCourier.SignalCatcher[      server: server, proc: lookupARs, adobeSystem: systemName];    FreeLocalName[localName]};    END;  FreeSetOfARs: PUBLIC PROCEDURE [s: AdobeOps.SetOfARs] =    BEGIN    sRec: AdobeCourier.SetOfARsRecord ¬ [s.len, s];    Courier.Free[[@sRec, AdobeCourier.DescribeSetOfARs], AdobeOps.z]    END;  AboutToStore: PUBLIC PROCEDURE [    server: SystemElement, systemName: LONG STRING,    version: AdobeOps.ARVersion, arNumber: AdobeOps.ARNumber] =    BEGIN    localName: LONG STRING ¬ GetLocalName[systemName];    {    ENABLE UNWIND => FreeLocalName[localName];    aboutToStore: PROCEDURE [cH: Courier.Handle] =      BEGIN      [] ¬ Courier.Call[        cH: cH,        procedureNumber: AdobeCourier.translateProc[aboutToStore],        arguments: [        @arguments, AdobeCourier.DescribeUpdaterArguments]]      END;    arguments: AdobeCourier.UpdaterArguments ¬ [      localName, arNumber, version];    AdobeCourier.SignalCatcher[server, aboutToStore, systemName];    FreeLocalName[localName]};    END;  GetAcceleratorInfo: PUBLIC PROCEDURE [    server: SystemElement, systemName: LONG STRING,    version: AdobeOps.ARVersion, ql: AdobeOps.SetOfARs,    fieldList: LONG POINTER TO StringArray,    streamCheckout: AdobeServer.StreamCheckoutProcType] =    BEGIN    localName: LONG STRING ¬ GetLocalName[systemName];    {    ENABLE UNWIND => FreeLocalName[localName];    getAcceleratorInfo: PROCEDURE [cH: Courier.Handle] = {      [] ¬ Courier.Call[        cH: cH,        procedureNumber: AdobeCourier.translateProc[        getAcceleratorInfo],        arguments: [        @arguments, AdobeCourier.DescribeGetAcceleratorInfoArguments],        streamCheckoutProc: streamCheckout]};    arguments: AdobeCourier.GetAcceleratorInfoArguments ¬ [      localName, version, ql.len, ql, fieldList.length, fieldList];    --must verify explicitly before making our call because    --streamCheckoutProc can be wedged    IF ~AdobeServer.VerifyVersion[server, systemName, version] THEN       ERROR AdobeServer.Error[obsoleteVersion];    AdobeCourier.SignalCatcher[      server: server, proc: getAcceleratorInfo,      adobeSystem: systemName];    FreeLocalName[localName]};    END;  UpdateAcceleratorField: PUBLIC PROCEDURE [    server: SystemElement, systemName: LONG STRING,    version: AdobeOps.ARVersion, arNumber: AdobeOps.ARNumber,    fieldName: LONG STRING, value: AdobeServer.FieldItemValue] =    BEGIN    localName: LONG STRING ¬ GetLocalName[systemName];    {    ENABLE UNWIND => FreeLocalName[localName];    updateAcceleratorField: PROC [cH: Courier.Handle] =      BEGIN      [] ¬ Courier.Call[        --don't want to make clients wait long for this. The Updater	--on the service will take care of the updates if we don't	--because we've already called AboutToStore.        cH: cH, timeoutInSeconds: 60,         procedureNumber: AdobeCourier.translateProc[        updateAcceleratorField],        arguments: [        @arguments,        AdobeCourier.DescribeUpdateAcceleratorFieldArguments]];      END;    arguments: AdobeCourier.UpdateAcceleratorFieldArguments ¬ [      localName, arNumber, version, fieldName, value];    AdobeCourier.SignalCatcher[      server, updateAcceleratorField, systemName];    FreeLocalName[localName]};    END;  CompletedUpdate: PUBLIC PROCEDURE [    server: SystemElement, systemName: LONG STRING,    arNumber: LONG CARDINAL] =    BEGIN    localName: LONG STRING ¬ GetLocalName[systemName];    {    ENABLE UNWIND => FreeLocalName[localName];    completedUpdate: PROCEDURE [cH: Courier.Handle] =      BEGIN      [] ¬ Courier.Call[        cH: cH,        procedureNumber: AdobeCourier.translateProc[        completedUpdate],        arguments: [        @arguments, AdobeCourier.DescribeUpdaterArguments]]      END;    arguments: AdobeCourier.UpdaterArguments ¬ [      systemName: localName, arNumber: arNumber, version: 0];  --not using version field for this procedure    AdobeCourier.SignalCatcher[server, completedUpdate, systemName];    FreeLocalName[localName]};    END;  UpdateAccelerators: PUBLIC PROCEDURE [    server: SystemElement, systemName: LONG STRING,    ars: AdobeOps.SetOfARs] =    BEGIN    localName: LONG STRING ¬ GetLocalName[systemName];    {    ENABLE UNWIND => FreeLocalName[localName];    updateAccels: PROCEDURE [cH: Courier.Handle] =      BEGIN      [] ¬ Courier.Call[        cH: cH,        procedureNumber: AdobeCourier.translateProc[        updateAccelerators],        arguments: [        @arguments, AdobeCourier.DescribeUpdateAcceleratorsArguments]]      END;    arguments: AdobeCourier.UpdateAcceleratorsArguments ¬ [      systemName: localName, setLength: ars.len, ars: ars];    AdobeCourier.SignalCatcher[server, updateAccels, systemName];    FreeLocalName[localName]};    END;  MakeAcceleratorFileForField: PUBLIC PROCEDURE [    server: SystemElement, systemName: LONG STRING,    fieldName: LONG STRING, fieldList: AdobeOps.FieldList] = {    args: AdobeCourier.MakeAccelFileForFieldArguments;    localName: LONG STRING ¬ GetLocalName[systemName];    {    ENABLE UNWIND => FreeLocalName[localName];    makeAccelFileForField: PROCEDURE [cH: Courier.Handle] = {      [] ¬ Courier.Call[        cH: cH,        procedureNumber: AdobeCourier.translateProc[        makeAccelFileForField],        arguments: [        @args, AdobeCourier.DescribeMakeAccelFileForFieldArguments]]};    args ¬ [localName, fieldName, fieldList.len, fieldList];    AdobeCourier.SignalCatcher[      server: server, proc: makeAccelFileForField,      adobeSystem: systemName];    FreeLocalName[localName]}};  -- Utilities  GetLocalName: PROCEDURE [fullName: LONG STRING]    RETURNS [localName: LONG STRING] = {    i: CARDINAL ¬ 0;    IF String.EmptyString[fullName] THEN RETURN[NIL];    localName ¬ String.MakeString[AdobeOps.z, fullName.length];    WHILE fullName[i] # ': AND i < fullName.length      AND i < NSName.maxFullNameLength DO      localName[i] ¬ fullName[i]; i ¬ i + 1; ENDLOOP;    localName.length ¬ i};  FreeLocalName: PROCEDURE [name: LONG STRING] = {    AdobeOps.z.FREE[@name]};  END. -- AdobeCourierClientImplB  -- RLC		 8-Aug-86 12:13:26  bear trap for uncaught server bug See LookupARs