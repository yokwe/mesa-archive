-- File: CTTx.mesa - last edit:-- AOF                 27-May-85 15:38:41-- Copyright (C) 1984, 1985  by Xerox Corporation. All rights reserved. DIRECTORY  Courier USING [    Description, Dispatcher, Arguments, Results, ErrorCode, Handle],  Environment USING [Byte],  FormSW USING [ProcType],  NetworkStream USING [ClassOfService],  Stream USING [Handle],  System USING [NetworkAddress],  Window USING [Handle];CTTx: DEFINITIONS =  BEGIN  program: LONG CARDINAL = LAST[CARDINAL];  versionL: CARDINAL = 8;  versionH: CARDINAL = 14;  hyper: UNCOUNTED ZONE;  --exported by CTTool  DataHandle: TYPE = LONG POINTER TO Data;  Data: TYPE = RECORD [    testRunning: BOOLEAN ¬ FALSE,    abortTest: BOOLEAN ¬ FALSE,    filler: BOOLEAN ¬ NULL,    fileSW: Window.Handle ¬ NIL,    formSW: Window.Handle ¬ NIL,    address: LONG STRING ¬ NIL,    debug: BOOLEAN ¬ FALSE,    iterationC: CARDINAL ¬ 0,    iterationL: CARDINAL ¬ 0,    class: NetworkStream.ClassOfService ¬ bulk,    delay: CARDINAL ¬ 0,    timeout: LONG CARDINAL ¬ 10000,  --in milliseconds    minTimeout: LONG CARDINAL ¬ 10000,  --in milliseconds    maxTimeout: LONG CARDINAL ¬ 10000,  --in milliseconds    server: System.NetworkAddress ¬ NULL,    booleans: ARRAY BoolType OF BOOLEAN ¬ ALL[FALSE],    driver: ARRAY TestType OF Driver ¬ ALL[],    bulkProc: ARRAY StageNumber OF BulkProcRecord ¬ ALL[]];  BoolType: TYPE = {toolActive, serverActive, userActive};  UserProc: TYPE = PROC[];  BulkProc: TYPE = PROC[sH: Stream.Handle];  ServerProc: TYPE = PROC[    cH: Courier.Handle, arguments: Courier.Arguments, results: Courier.Results];  Driver: TYPE = RECORD [    flag: BOOLEAN ¬ FALSE, user: UserProc ¬ NIL,    server: ServerProc ¬ NIL, duration: LONG CARDINAL ¬ 0];  BulkProcRecord: TYPE = RECORD[user, server: BulkProc ¬ NIL];  TestType: TYPE = {    null, cardinal, longCardinal, array, string, longString, descriptor,    longDescriptor, choice, parameters, disjoint, longDisjoint,    dataStream, noRoute, tooMany, noProg, noVers, returnTMO, callerAborted,    parmInconst, noProc, unknown, dataStream2, space, deadSpace, invalidArguments,    block, stackOverflow};  xlate: ARRAY CARDINAL [0..27] OF TestType = [    null, cardinal, longCardinal, array, string, longString, descriptor,    longDescriptor, choice, parameters, disjoint, longDisjoint,    dataStream, noRoute, tooMany, noProg, noVers, returnTMO, callerAborted,    parmInconst, noProc, unknown, dataStream2, space, deadSpace, invalidArguments,    block, stackOverflow];  VariantRecord: TYPE = MACHINE DEPENDENT RECORD [    nonvariant(0): CARDINAL,    variant(1): SELECT tag(1): * FROM      short => [a(2): CARDINAL],      medium => [b(2), c(3): CARDINAL],      long => [d(2), e(3), f(4): CARDINAL],      ENDCASE];  StackOverflowArgs: TYPE =    LONG DESCRIPTOR FOR ARRAY OF LONG POINTER TO LONG STRING;    PackedBytes: TYPE = RECORD[    PACKED SEQUENCE COMPUTED CARDINAL OF Environment.Byte];  blocksPerStreamTest: CARDINAL = 100;  bytesPerBlock: CARDINAL = 550;  null: CARDINAL = 0;  cardinal: CARDINAL = 1;  longCardinal: CARDINAL = 2;  array: CARDINAL = 3;  string: CARDINAL = 4;  --dead  longString: CARDINAL = 5;  descriptor: CARDINAL = 6;  --dead  longDescriptor: CARDINAL = 7;  choice: CARDINAL = 8;  parameters: CARDINAL = 9;  disjoint: CARDINAL = 10;  --dead  longDisjoint: CARDINAL = 11;  dataStream: CARDINAL = 12;  noRoute: CARDINAL = 13;  tooMany: CARDINAL = 14;  noProg: CARDINAL = 15;  noVers: CARDINAL = 16;  returnTMO: CARDINAL = 17;  callerAborted: CARDINAL = 18;  parmInconst: CARDINAL = 19;  noProc: CARDINAL = 20;  unknown: CARDINAL = 21;  dataStream2: CARDINAL = 22;  space: CARDINAL = 23;  deadSpace: CARDINAL = 24;  invalidArguments: CARDINAL = 25;  block: CARDINAL = 26;  stackOverflow: CARDINAL = 27;  establish: CARDINAL = 30;  tool: DataHandle;  --Procedures  CardinalDescribe: Courier.Description;  LongCardinalDescribe: Courier.Description;  ArrayDescribe: Courier.Description;  StringDescribe: Courier.Description;  DescriptorDescribe: Courier.Description;  ChoiceDescribe: Courier.Description;  ParametersDescribe: Courier.Description;  DisjointDescribe: Courier.Description;  EstablishDescribe: Courier.Description;  SpaceDescribe: Courier.Description;  DeadSpaceDescribe: Courier.Description;  BlockDescribe: Courier.Description;  StackOverflowDescribe: Courier.Description;    UserCall: PROC[index: TestType];  Dispatcher: Courier.Dispatcher;  MsgOut: PROC[string: LONG STRING, bol, eol: BOOLEAN ¬ TRUE];  AppendTestName: PROC[test: TestType];  ProcessCourierError: PROC[error: Courier.ErrorCode];  ProcessUserError: PROC[number: CARDINAL, arguments: Courier.Arguments];  StageNumber: TYPE = CARDINAL[1..11];  UserReject: BulkProc;  ServerReject: BulkProc;  SinkWithAbort: BulkProc;  SourceWithAbort: BulkProc;  AbortImmediately: BulkProc;  SourceWithoutAbort: BulkProc;  SinkWatchingForAbort: BulkProc;  LoadUserDriver: PROC;  UnloadUserDriver: PROC;  LoadServerDriver: PROC;  UnloadServerDriver: PROC;    CreateHandle: FormSW.ProcType;  DeleteHandle: FormSW.ProcType;  Establish: FormSW.ProcType;      END.