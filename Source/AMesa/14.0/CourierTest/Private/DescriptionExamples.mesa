-- Copyright (C) 1984  by Xerox Corporation. All rights reserved. -- DescriptionExamples.mesaDIRECTORY  Courier USING [Description];DescriptionExamples: PROGRAM =  BEGIN  -- ****  Stats: TYPE = ARRAY CourierStats OF LONG CARDINAL;  CourierStats: TYPE = {    stackPagesMapped, stackPagesUnmapped, stackPagesGot, stackPagesPut,    bytesReceived, bytesTransmitted, bytesFlushed, callsReceived,    localCallsReceived, rejectsTransmitted, returnsTransmitted,    abortsTransmitted, callsTransmitted, localCallsTransmitted,    rejectsReceived, returnsReceived, abortsReceived, callRetry,    zoneAllocated, zoneFreed, streamsAcquired, streamsCreated,    streamsDeleted};  DescribeCourierStats: Courier.Description =    BEGIN    e: LONG POINTER TO Stats = notes.noteSize[      SIZE[ARRAY CourierStats OF LONG CARDINAL]];    FOR i: CourierStats IN CourierStats DO notes.noteLongCardinal[@e[i]]; ENDLOOP;    END;  -- ****  DomainAndOrgResults: TYPE = RECORD [domain, org: LONG STRING];  DescribeDomainAndOrg: Courier.Description =    BEGIN    e: LONG POINTER TO DomainAndOrgResults = notes.noteSize[      SIZE[DomainAndOrgResults]];    notes.noteString[@e.domain];    notes.noteString[@e.org];    END;  -- ****  Ports: TYPE = ARRAY CARDINAL OF PortRecord;  PortRecord: TYPE = RECORD [    status: PortStatus, lineNumber: CARDINAL, localName: LONG STRING];  PortStatus: TYPE = {reserved, busy, released, noGood, noDSR};  DescribeGetPorts: Courier.Description =    BEGIN    e: LONG POINTER TO LONG DESCRIPTOR FOR Ports = notes.noteSize[      SIZE[LONG DESCRIPTOR FOR Ports]];    notes.noteArrayDescriptor[e, SIZE[PortRecord], LAST[CARDINAL]];    FOR i: CARDINAL IN [0..LENGTH[e­]) DO      notes.noteString[@e[i].localName]; ENDLOOP;    END;  -- ****  Services: TYPE = ARRAY CARDINAL OF ServiceItem;  ServiceItem: TYPE = RECORD [    typeID: TypeID,    typeName: LONG STRING,  -- e.g. "File Service", "Print Service"    status: ServicesStatus,    serviceName: LONG STRING];  -- e.g. "Pesky-IRS".  serviceName will be  -- NIL until the first time the User gives the "List Services" cmd  ServicesStatus: TYPE = {started, stopped, indeterminate};  TypeID: TYPE = LONG CARDINAL;  -- CH.PropertyID   DescribeGetServices: Courier.Description =    BEGIN    e: LONG POINTER TO LONG DESCRIPTOR FOR Services = notes.noteSize[      SIZE[LONG DESCRIPTOR FOR Services]];    notes.noteArrayDescriptor[e, SIZE[ServiceItem], LAST[CARDINAL]];    FOR i: CARDINAL IN [0..LENGTH[e­]) DO      notes.noteString[@e[i].typeName];      notes.noteString[@e[i].serviceName];      ENDLOOP;    END;  -- ****  GreenwichMeanTime: TYPE = LONG CARDINAL;  HeraldResults: TYPE = RECORD [    herald: LONG STRING,    runningOnTajo: BOOLEAN,    servicesBuildTime: GreenwichMeanTime];  DescribeHerald: Courier.Description =    BEGIN    e: LONG POINTER TO HeraldResults = notes.noteSize[SIZE[HeraldResults]];    notes.noteString[@e.herald];    -- notes.note Boolean [@e.runningOnTajo]    notes.noteLongCardinal[LOOPHOLE[@e.servicesBuildTime]];    END;  END...    