-- Copyright (C) 1981  by Xerox Corporation. All rights reserved. -- file Style.Mesa, last modified by-- Karlton,	 7-Aug-81 19:05:59-- Sweet,	March 17, 1981  11:33 AM-- Wagner, 	 5-Apr-85 17:13:23Style: DEFINITIONS =  BEGIN  -- types  TokenType: TYPE = {string, inline, break, begin, end, eof, beforeProc, afterProc};  Token: TYPE = RECORD[    SELECT type: TokenType FROM      string => [	crCount: CRCount,	look: Look ¬ normal,	comment: Comment ¬ not,   -- only used by item queue	length: CARDINAL,	index: LONG CARDINAL],      inline => [	length: [0..5],	string: PACKED ARRAY [0..5) OF CHARACTER],	      break => [	blankSpace: [0..MaxBlanks] ¬ 1,  -- number of spaces	inconsistent: BOOLEAN ¬ FALSE,	offset: [0..31] ¬ 0],            -- indent for overflow lines	      begin => [	offset: [0..127] ¬ 2,            -- indent for this group	breakType: Breaks ¬ inconsistent],       end, eof => NULL,      beforeProc, afterProc => NULL,  -- markers in item queue      ENDCASE];        StringTokenHandle: TYPE = LONG POINTER TO string Token;  LineBreak: break Token = [break[blankSpace: MaxBlanks]];    MaxBlanks: CARDINAL = 127;  Breaks: TYPE = {consistent, inconsistent};    Look: TYPE = {normal, italic, bold, small, smallbold};  Comment: TYPE = {crlf, dash, not};  CRCount: TYPE = CARDINAL [0..7];  ItemHandle: TYPE [1];  nullItem: ItemHandle = LOOPHOLE[177777B];    -- errors and shared variables  ItemNotFound: ERROR;  ItemNotString: ERROR;    catchDepth: CARDINAL;  headerComment: LONG STRING;  formatterFont: LONG STRING;  -- procedures for Scanner  PressFinish: PROCEDURE;  CanFormat: PROCEDURE RETURNS [BOOLEAN];  ItemHandleToStreamIndex: PROCEDURE [CARDINAL] RETURNS [CARDINAL];  ItemQueueInit: PROCEDURE;  ItemQueueReset: PROCEDURE [hadErrors: BOOLEAN];  EnqueueItem: PROCEDURE [    index, length: CARDINAL, crCount: CRCount, small: BOOLEAN, comment: Comment ¬ not]    RETURNS [CARDINAL];  -- really an ItemHandle    -- procedures for Pass1F  AppendToken: PROCEDURE [item: ItemHandle, token: Token];  InsertString: PROCEDURE [item: ItemHandle, string: STRING];  InsertToken: PROCEDURE [item: ItemHandle, token: Token];  MaxItem: PROCEDURE [i1, i2: ItemHandle, i3, i4, i5: ItemHandle ¬ nullItem]    RETURNS [ItemHandle];  NextItem: PROCEDURE [item: ItemHandle] RETURNS [ItemHandle];  PreviousItem: PROCEDURE [item: ItemHandle] RETURNS [ItemHandle];  PrintItems: PROCEDURE [item: ItemHandle];  StringToken: PROCEDURE [item: ItemHandle] RETURNS [token: StringTokenHandle];    END.