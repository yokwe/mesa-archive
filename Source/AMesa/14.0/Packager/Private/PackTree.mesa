-- Copyright (C) 1981  by Xerox Corporation. All rights reserved. -- PackTree.Mesa  Last edited by Lewis on 22-Oct-81 18:42:49DIRECTORY  CodePackProcs USING [ModuleIndex, NullModuleIndex],  PackagerDefs USING [packtreetype],  SemanticEntry USING [STIndex],  SymTabDefs USING [HTIndex, HTNull],  Table USING [Base, Finger, Limit, Selector];Tree: DEFINITIONS =   BEGIN  treeType: Table.Selector = PackagerDefs.packtreetype;  root: Tree.Link; -- root of package description tree (exported by TreeBuild)  Link: TYPE = RECORD [    SELECT tag: * FROM      subtree => [index: Tree.Index],      hash    => [index: SymTabDefs.HTIndex],      symbol  => [index: SemanticEntry.STIndex],      procs   => [index: CodePackProcs.ModuleIndex], -- procs in a code pack      ENDCASE];  Null:      Tree.Link = [subtree[index: Tree.NullIndex]];  NullId:    Tree.Link = [hash[index: SymTabDefs.HTNull]];  NullProcs: Tree.Link = [procs[index: CodePackProcs.NullModuleIndex]];  Index: TYPE = Table.Base RELATIVE POINTER [0..Table.Limit) TO Tree.Node;    NullIndex: Tree.Index = FIRST[Tree.Index];  Node: TYPE = MACHINE DEPENDENT RECORD [    free:        BOOLEAN,     -- reserved for allocator    name:        NodeName,    nSons:       [0..MaxNSons],    info:        UNSPECIFIED, -- (source file index)    cp:          Tree.Index,  -- enclosing code pack node if component desc    shared:      BOOLEAN,    superceded:  BOOLEAN,     -- if code pack, seg, frame pack node superceded    seg:         Tree.Index,  -- enclosing segment node if component desc    placed:      BOOLEAN,     -- if code pack, seg placed    exceptMAIN:  BOOLEAN,     -- if code pack excludes MAIN procs    exceptEV:    BOOLEAN,    exceptCatch: BOOLEAN,    fill:        [0..37777B],    son:         ARRAY [1..1) OF Tree.Link];  MaxNSons: CARDINAL = 1777B; -- largest list without null terminator  NodeName: TYPE = {   -- general tree constructor    list,   -- declarations    codeSeg,    codePack, unnamedCodePack, discardCodePack,    framePack,    merge,            -- merge segment    mergeFP,          -- merge frame pack   -- component descriptions    allComp,          -- ComponentDesc ::= Component    compItems,        -- ComponentDesc ::= Component [ItemList]    exceptItems,      -- ComponentDesc ::= Component EXCEPT [ItemList]    exceptPacks,      -- ComponentDesc ::= Component EXCEPT PackList    itemsExceptPacks, -- ComponentDesc ::= Component [ItemList] EXCEPT PackList    exceptPacksItems, -- ComponentDesc ::= Component EXCEPT PackList, [ItemList]    mainOfPL,         -- ComponentDesc ::= MAIN OF PackList    evOfPL,           -- ComponentDesc ::= ENTRY VECTOR OF PackList    catchOfPL,        -- ComponentDesc ::= CATCH CODE OF PackList   -- expressions    component,    main,    ev,    catch,   -- nil    none    };     -- tree manipulation  Id:   TYPE = RECORD [baseP: Table.Finger, link: Tree.Link];  Scan: TYPE = PROC [t: Tree.Link];  Map:  TYPE = PROC [t: Tree.Link] RETURNS [v: Tree.Link];  Test: TYPE = PROC [t: Tree.Link] RETURNS [BOOLEAN];  END.