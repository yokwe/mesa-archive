-- Copyright (C) 1982, 1983  by Xerox Corporation. All rights reserved. -- CodePackProcs.mesa  Last edited by --   JGS	17-Sep-82 13:51:36--   Sweet	28-Jun-83 15:44:13DIRECTORY  BcdDefs USING [MTIndex],  PackageSymbols USING [OPIndex],  String USING [SubString],  SymTabDefs USING [HTIndex],  Table USING [Base, Index, Limit];CodePackProcs: DEFINITIONS =  BEGIN  TreeIndex: TYPE = Table.Index;  -- Tree.Index (avoids circular definition)  -- Describes the procedures from a module that are included in a code pack  ModuleIndex: TYPE = Table.Base RELATIVE POINTER [0..Table.Limit) TO ModuleRecord;  NullModuleIndex: ModuleIndex = LAST[ModuleIndex];  ModuleRecord: TYPE = MACHINE DEPENDENT RECORD [    mti: BcdDefs.MTIndex,    cp: TreeIndex,         -- code pack's parse tree node    numWordPairsInProcArray: [1..4],  -- if someProcs variant    next: ModuleIndex,     -- next module record in code pack's chain    includeMAIN: BOOLEAN,    includeEV: BOOLEAN,    link: ModuleIndex,     -- links module records with same id hash values    includeCatch: BOOLEAN,    procDescription: SELECT kind: * FROM      allProcs  => [],      someProcs => [       -- up to PackageSymbols.MaxEntries procedures        procIncluded: PACKED ARRAY [1..1) OF BOOLEAN],       ENDCASE]; -- Determination of procedures in each code pack  Determine, Destroy: PROC; -- Inquiry    EnumerateSegments: PROC [    userProc: PROC [segNode: TreeIndex] RETURNS [stop: BOOLEAN]];  SubStringForSegmentNode: PROC [    ss: String.SubString, segNode: TreeIndex];  EnumerateCodePacks: PROC [    segNode: TreeIndex,     userProc: PROC [cpNode: TreeIndex] RETURNS [stop: BOOLEAN]];  SubStringForCodePackNode: PROC [ss: String.SubString, cpNode: TreeIndex];  HtiForCodePackNode: PROC [cpNode: TreeIndex] RETURNS [hti: SymTabDefs.HTIndex];  IsDiscardCodePack: PROC [cpNode: TreeIndex] RETURNS [yes: BOOLEAN];  EnumerateModules: PROC [  -- each module's symbol table is loaded    cpNode: TreeIndex,      -- (via ModuleSymbols.Load) before userProc     userProc: PROC [        -- is called (and unloaded afterwards)      mti: BcdDefs.MTIndex, module: ModuleIndex] RETURNS [stop: BOOLEAN]];  -- return TRUE if any procedures are specified by a ModuleRecord  AnyProcs: PROC [module: ModuleIndex] RETURNS [reply: BOOLEAN];  EnumerateProcs: PROC [    module: ModuleIndex,     userProc: PROC [opi: PackageSymbols.OPIndex] RETURNS [stop: BOOLEAN]];  SubStringForOPIndex: PROC [    ss: String.SubString, opi: PackageSymbols.OPIndex];  END.