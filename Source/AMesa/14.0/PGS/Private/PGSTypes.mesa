-- Copyright (C) 1982  by Xerox Corporation. All rights reserved. -- file PGSTypes.mesa-- last modified by JGS,  4-Nov-82 11:21:43-- last modified by EXS          , March 17, 1981  9:59 AMPGSTypes: DEFINITIONS = { -- uninterpreted pointers  LongDes: TYPE = LONG DESCRIPTOR FOR ARRAY OF UNSPECIFIED;  LongPointer: TYPE = LONG POINTER; -- pointer-sensitive inlines  LPBA: TYPE = LONG POINTER TO PACKED ARRAY CARDINAL[0..4096) OF Bit;  Bit: PRIVATE TYPE = [0..1];  GetBit: PROC [word: LongPointer, bit: CARDINAL] RETURNS [Bit] = INLINE {    RETURN[LOOPHOLE[word, LPBA][bit]]};  SetBit: PROC [v: Bit, word: LongPointer, bit: CARDINAL] = INLINE {    LOOPHOLE[word, LPBA][bit] ¬ v};-- data structures and associated types   -- data structtures using the following types are built by PGSScan  alternatelim: CARDINAL = 31;  maxprod: CARDINAL = 500;  maxrhssymbols: CARDINAL = 2*maxprod;  -- empirical relation  maxrule: CARDINAL = 255; --this is the current PGSTab limit  psslim: CARDINAL = 1023; -- 10 bit field in itemrec to hold production, symbol		           -- or state numbers, PGSTab allows an 11 bit field  rhslim: CARDINAL = 15; --this is the current PGSTab limit, change the grammar?  symtabsize: CARDINAL = 350; --symbol table size  tokensize: CARDINAL = 14;  SymTab: TYPE = LONG DESCRIPTOR FOR PACKED ARRAY OF CHARACTER;    -- [0..(symtabsize+1)*tokensize)  SymTabEntry: TYPE = RECORD [    link: [0..symtabsize],    length: [0..tokensize],    used: BOOLEAN];  SymInfo: TYPE = LONG DESCRIPTOR FOR ARRAY OF SymTabEntry;    -- [0..symtabsize]  AliasEntry: TYPE = RECORD [terminal, alias: CARDINAL];  Aliases: TYPE = LONG DESCRIPTOR FOR ARRAY OF AliasEntry; -- [0..63]  TokenEntry: TYPE = RECORD [    count: [0..alternatelim],    empty: BOOLEAN,    index: [0..maxprod]];  TokenInfo: TYPE = LONG DESCRIPTOR FOR ARRAY OF TokenEntry;    --(eofile..totaltokens]  ProdEntry: TYPE = RECORD [    count: [0..rhslim],    rule: [0..maxrule],    chain: BOOLEAN,    lhs: [0..symtabsize],    index: [0..maxrhssymbols]];  ProdInfo: TYPE = LONG DESCRIPTOR FOR ARRAY OF ProdEntry;    -- [0..maxprod]  RhsChar: TYPE = LONG DESCRIPTOR FOR ARRAY OF CARDINAL;    -- [0..maxrhssymbols]  Options: TYPE = {echo,chain,lists,printlr,printlalr,first,ids}; -- types for LR(0) tables in PGSLALR  StateInfoRec: TYPE = RECORD [link, nucleus, entries:CARDINAL];  StateInfo: TYPE = LONG DESCRIPTOR FOR ARRAY OF StateInfoRec; --[0,maxstatenum+1];  ItemRec: TYPE = RECORD [tag: [0..3], jf: [0..15], pss: [0..psslim]];  Table: TYPE = LONG DESCRIPTOR FOR ARRAY OF ItemRec; --[0..maxtabentries]    --after table is built,    --tag = 3 => pss is a nonterminal symbol, such an entry is followed by an entry:    --tag = 0 => pss is a next state number    --tag = 1 => pss is production number, scanreduce, jf=n[p]    --tag = 2 => pss is production number, reduce, jf=n[p]  -- types for LALR(1) lookahead sets in PGSLALR  ChainRec: TYPE = RECORD [state, link: CARDINAL];  BackChain: TYPE= LONG DESCRIPTOR FOR ARRAY OF ChainRec; --[0..totalshifts] initially  Stack: TYPE = LONG DESCRIPTOR FOR ARRAY OF CARDINAL;  --[0..30) initially  ChainStack: TYPE = LONG DESCRIPTOR FOR ARRAY OF CARDINAL;  --[0..90) initially    ContextRec: TYPE = RECORD [state, status, link: CARDINAL, item: ItemRec];  BitsInfo: TYPE = LONG DESCRIPTOR FOR ARRAY OF ContextRec;  --[0..maxcontexts)  BitString: TYPE = LONG DESCRIPTOR FOR ARRAY OF UNSPECIFIED;  --[0..maxcontexts)  FirstBits: TYPE = LONG DESCRIPTOR FOR ARRAY OF UNSPECIFIED; --[eofile+1..totaltokens]  -- types used internally by PGSLALR  AttrVec: TYPE = LONG DESCRIPTOR FOR ARRAY OF CARDINAL; --[eofile+1..totaltokens]  HashHeads: TYPE = ARRAY [0..60] OF CARDINAL;  HashHeadsRef: TYPE = LONG POINTER TO HashHeads;  -- types used by PGSTab  HashTabRec: TYPE = MACHINE DEPENDENT RECORD [symptr: [0..255], link: [0..255]];  HashTab: TYPE =  LONG DESCRIPTOR FOR ARRAY OF HashTabRec; --[0..hashval]  TabRec: TYPE = RECORD [symbol: CARDINAL, item: ItemRec];  TTab: TYPE =  LONG DESCRIPTOR FOR ARRAY OF TabRec; --[0..tentries-1];  NTab: TYPE =  LONG DESCRIPTOR FOR ARRAY OF TabRec; --[0..ntentries-1];  ColumnRec: TYPE = RECORD [link, count: CARDINAL, item: ItemRec];  Column: TYPE =  LONG DESCRIPTOR FOR ARRAY OF ColumnRec; --[0..ntentries];  StateDataRec: TYPE = RECORD [tindex, ntindex: CARDINAL, tlink, ntlink: INTEGER];  StateData: TYPE =  LONG DESCRIPTOR FOR ARRAY OF StateDataRec; --[0..slim-1];  NTDefaultRec: TYPE = RECORD [count: CARDINAL, item: ItemRec];  NTDefaults: TYPE = LONG DESCRIPTOR FOR ARRAY OF NTDefaultRec;						 --[0..totaltokens-eofile+1];  Renumber: TYPE = LONG DESCRIPTOR FOR ARRAY OF CARDINAL;  --[0..slim-1]  VocabIndex: TYPE = LONG DESCRIPTOR FOR ARRAY OF CARDINAL;  --[0..eofile-1]  -- types used by PGSFormat (also uses SymTab, RhsChar, HashHeads, HashHeadsRef)  SInfoRec: TYPE = RECORD [symptr, link, lhshead: CARDINAL];  SInfo: TYPE =  LONG DESCRIPTOR FOR ARRAY OF SInfoRec; --[0..symtabsize+1];  PInfoRec: TYPE = RECORD [rule: [0..77777B], chain: BOOLEAN, link, rhsptr: CARDINAL];  PInfo: TYPE =  LONG DESCRIPTOR FOR ARRAY OF PInfoRec; --[0..maxprod+1];  }.