-- LibToolOps.mesa-- Copyright (C) 1984, 1985 by Xerox Corporation. All rights reserved.-- Last edited by:-- DSC on   17-Sep-85 15:40:18-- This is the definitions for the operations possible on the Libjects.-- To be called by appropriate client from Executive or from Tools.-- I/O is thorugh client supplied procedures to avoid knowing the tool or window interface.-- Although some parts of this interface is very similar to the raw librarian interface, it-- gives you more since we get some kind of feedback. Plus we give some useful query procedures.-- Some errors are caught within to make the client's life easier.DIRECTORY  Librarian,  LibToolCommon;LibToolOps: DEFINITIONS =  {    AtomArray: TYPE = LibToolCommon.AtomArray;    -- For a given server, create an atom array to be used for various operations.  MakeQueryAtoms: PROCEDURE [server: Librarian.Handle, qAtoms: LONG POINTER TO AtomArray];    -- Client supplied output proc should be of this type.  WriteProc: TYPE = PROCEDURE [s: LONG STRING];    -- Check for aborts during various points.  AbortProc: TYPE = PROCEDURE RETURNS [BOOLEAN];    -- Type of query    QueryMode: TYPE = LibToolCommon.QueryMode;    -- Will oen a connection and give feedback.  OpenConnection: PROCEDURE [    servername: LONG STRING, zone: UNCOUNTED ZONE, Write: WriteProc]    RETURNS [server: Librarian.Handle];       -- Will close it is open. Is a null operation if already closed.   CloseConnection: PROCEDURE [server: LONG POINTER TO Librarian.Handle, Write: WriteProc];      -- For people who want finer control over queries. Will fill in "pl".  QueryLJ: PROCEDURE [    lj: LONG STRING, server: Librarian.Handle, queryAtom: AtomArray,    pl: LONG POINTER TO Librarian.PropertyList] RETURNS [libjectCheckedOut: BOOLEAN];      DisplayQueryPropertyList: PROCEDURE [pl: Librarian.PropertyList, isCheckedOut: BOOLEAN, lj: LONG STRING,  qAtoms: AtomArray, zone: UNCOUNTED ZONE, Write: WriteProc];    -- Takes FileName in pl, extract out file name info from qAtoms, and stuff that into string.  -- Currently, the string should be large enough to hold the remote file name string.  -- In a future version, fix it to be a expandable string since we do not know how long  -- remote filenames could be.  FileNameFromPL: PROCEDURE [pl: Librarian.PropertyList, qAtoms: AtomArray, zone: UNCOUNTED ZONE, s: LONG STRING];    -- When you want to simply print information.  -- Basically, it does a DisplayQueryPropertyList on the result from QueryLJ.  QueryAndPrint: PROCEDURE [lj: LONG STRING, server: Librarian.Handle, queryAtom: AtomArray, zone: UNCOUNTED ZONE, Write: WriteProc, queryMode: QueryMode ¬ normal, onlyIfCheckedOut: BOOLEAN ¬ FALSE, user: LONG STRING ¬ NIL];     -- Creates a libject with the remote name property of rname. Gives feedback.  CreateLJ: PROCEDURE [    lj, rname, reason: LONG STRING, server: Librarian.Handle,    zone: UNCOUNTED ZONE, Write: WriteProc, qAtoms: AtomArray];      -- Destroys lbject. Gives feedback.  DestroyLJ: PROCEDURE [lj: LONG STRING, server: Librarian.Handle, Write: WriteProc];    -- Checks out the libject with the given reason. Will not retrieve the remote name file. That is done elsewhere.  CheckOutLJ: PROCEDURE [lj, reason: LONG STRING, server: Librarian.Handle, zone: UNCOUNTED ZONE, Write: WriteProc];    -- Checks in the libject . There is no check in reason supported in this  -- version. Gives feedback.  CheckInLJ: PROCEDURE [lj: LONG STRING, server: Librarian.Handle, Write: WriteProc];  }...    Change log17-Sep-85 15:40:33	DSC	Fix QueryAndPrint to allow for if checked out.