DFLibTool.docLast edit by Conde 5-Apr-85 15:05:14Name: DFLibToolCommands:Query!	Query each libjects specified in the libject(s) field. 	Wild cards are allowed.CheckIn! Check in each libject specified in the libject(s) field.CheckOut! Check out eachlibject specified in the libject(s) field. 	A reason is REQUIRED. Try putting in something meaningful. 		(don't say FOO!)Destroy! Destroys each libject specifed in the libject(s) field. 	Wild cards allowed.Count! Counts each libject specifed in the libject(s) field. 	Wild cards are allowed. 	A grand total is given is multiple libjects are specified. 	Useful to do before destroying many libjects.Fields: Database: (STRING)  The librarian database that you want to use. Only one allowed.Libject(s): (STRING) The list of libjects separated by spaces that you want to operate on.  	They may include wildcards that include '# and '* for queries, counting and destroying.Reason: The reason why you want to create or checkout a libject.Remotename: (STRING) A remote file name to be used for two purposes	1) When createing a single libject specified in the libject field, this 	name will be used for the libject's remotename property.	2) When creating MANY libjects specified in the libject field, this	name will be used as a prefix to which each libject will be appended to.	For example, use [Server]<Directory>DF> for libjects	A.df, B.df	will create remotename properties	[Server]<Directory>DF>A.df and	[Server]<Directory>DF>B.df.	The Remotename MUST end in a directory delimitor character which is	either '/ (NS) or '> (IFS) style. Try to make the delimitor match the	type of the server you are using.Batch: (BOOLEAN) Turned on when you want to create mulitple libjects using only 	one Create! command. Otherwise, the tool will complain since it cannot	determine if you want the same remotename for ALL libjects to be created,	or if you want multiple remote names specified. This may be changed.OnlyIfCheckedOut: (BOOLEAN) Is used by the Query, Count or Destroy commands. Only	the libjects which are checked out will be operated on.User: (STRING) Is applicable only when OnlyIfCheckedOut is turned ON. This 	acts as a filter for the libjects only checked out by the 'user'.		The following executive command are also available once the DFLibTool is run.	CheckInLibject.~ [librarian/l] libject...CheckOutLibject.~ [librarian/l] reason/r libject...QueryLibject.~  [librarian/l] libject[/o] | [user/u] libject...-- queries all libjects [checked out][by user]. Wild cards (* & #) allowed.Examples:>checkin mesadfs/l dffiles.df>checkout  pilotdfs/l "fix Space"/r space.df>query Pebble/l "Butler Lampson:PARC:Xerox"/u  '*.pebble>query a'*.df/oNotes to the programmer:The interface LibToolSubr contains all the operations that one needs to call from the Tool or Exec interface.LibToolSubr in turn calls the lower interfaces for specific operations:LibtoolOps	- handles most of the librarian specific things such asdealing with property listsLibToolTransfer	- handles retrieving files.