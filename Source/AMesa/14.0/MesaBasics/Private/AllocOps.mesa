-- Copyright (C) 1981, 1983, 1984  by Xerox Corporation. All rights reserved. -- file AllocOps.Mesa-- last modified by Bruce, 11-Nov-81 14:59:48-- last modified by Sweet, 22-Mar-84 11:14:58-- last modified by Haynes, 21-Apr-83 11:48:39DIRECTORY  Alloc USING [Base, BitSpec, Limit, maxForBits, Notifier, Selector],  Space USING [Interval];  AllocOps: DEFINITIONS =  BEGIN OPEN Alloc;    SizeSeq: TYPE = RECORD [SEQUENCE COMPUTED     CARDINAL [0..LAST[INTEGER]/SIZE[CARDINAL]) OF CARDINAL];  SpaceSeq: TYPE = RECORD [SEQUENCE COMPUTED     CARDINAL [0..LAST[INTEGER]/SIZE[Space.Interval]) OF Space.Interval];  ChunkSeq: TYPE = RECORD [SEQUENCE COMPUTED     CARDINAL [0..LAST[INTEGER]/SIZE[ChunkHandle]) OF ChunkHandle];  BaseSeq: TYPE = RECORD [SEQUENCE COMPUTED     CARDINAL [0..LAST[INTEGER]/SIZE[Base]) OF Base];  BitsSeq: TYPE = RECORD [SEQUENCE COMPUTED     CARDINAL [0..LAST[INTEGER]/SIZE[BitSpec]) OF BitSpec];      SizesHandle: TYPE = LONG POINTER TO SizeSeq;   SpacesHandle: TYPE = LONG POINTER TO SpaceSeq;   ChunksHandle: TYPE = LONG POINTER TO ChunkSeq;   BasesHandle: TYPE = LONG POINTER TO BaseSeq;   BitsHandle: TYPE = LONG POINTER TO BitsSeq;   Chunk: TYPE = MACHINE DEPENDENT RECORD [    free(0:0..0): BOOLEAN,    size(0:1..15): [0..maxForBits[15]],    fLink(1): CIndex,    bLink(2): CIndex];  CIndex: TYPE = Base RELATIVE POINTER [0..Limit) TO Chunk;  NullChunkIndex: CIndex = FIRST[CIndex];    ChunkHandle: TYPE = LONG POINTER TO ChunkObject;  ChunkObject: TYPE = RECORD [    chunkRover: CIndex,    firstSmall: CARDINAL,    smallLists: SEQUENCE nSmall: CARDINAL OF CIndex];    Handle: TYPE = LONG POINTER TO InstanceData;    InstanceData: TYPE = MONITORED RECORD [    nTables: CARDINAL,    z: UNCOUNTED ZONE,    tileSize: CARDINAL,    notifiers: NotifyChainHandle ¬ NIL,    indexBits: BitsHandle,    base: BasesHandle,    spaces: SpacesHandle,    chunks: ChunksHandle,    top: SizesHandle,    limit: SizesHandle,    vmPages: SizesHandle,    clientData: LONG POINTER];    NotifyNode: TYPE = RECORD [    notifier: Alloc.Notifier, clientData: LONG POINTER, link: NotifyChainHandle];  NotifyChainHandle: TYPE = LONG POINTER TO NotifyNode;  GrowTable: PROC [h: Handle, table: Selector, newTop: CARDINAL];  END.