-- Copyright (C) 1982, 1983  by Xerox Corporation. All rights reserved. -- TIPTable.mesa - from TIPPrivate - last edit by -- Paxton,	May 6, 1982 2:41 pm-- PXK    	12-Nov-82 14:23:55-- CXH   	17-Nov-82 17:41:02-- AXD    	 8-Apr-83 18:45:28DIRECTORY  Atom USING [ATOM],  Environment USING [bytesPerWord],  Keys USING [DownUp, KeyBits, KeyName],  MFile USING [Property],  MFileProperty USING [TIPCSourceDate],  MStream USING [Handle],  Process USING [Milliseconds],  TIP USING [Results],  System USING [Pulses],  UserTerminal USING [Coordinate],  Window USING [Handle];TIPTable: DEFINITIONS =  BEGIN    version: CHARACTER = '2;  -- table syntax version number  TIPCSourceDate: MFile.Property = MFileProperty.TIPCSourceDate;  SourceDate: TYPE = LONG CARDINAL;  bytesForDate: CARDINAL = SIZE[SourceDate]*Environment.bytesPerWord;  ATOM: TYPE = Atom.ATOM;    MouseActions: TYPE = {all, mostRecent};  Table: TYPE = LONG POINTER TO TableObject ¬ NIL;  TableObject: TYPE = RECORD [    mouseActions: MouseActions ¬ mostRecent,    opaque: BOOLEAN ¬ FALSE,    link: Table ¬ NIL,    notifyProc: PROC [Window.Handle, TIP.Results] ¬ NIL,     ignoreUp, ignoreDown, ignoreMove: BOOLEAN ¬ TRUE,    variants: SELECT flavor: * FROM      small => [all: Choice ¬ NIL],      fast => [        mouse, enter, exit, time: Term ¬ NIL,        keyDown, keyUp: ARRAY Keys.KeyName OF Term ¬ ALL[NIL]],      placeholder => NULL,      ENDCASE];        KeyState: TYPE = RECORD [key: Keys.KeyName, state: Keys.DownUp ¬ down];  KeyStateList: TYPE = LONG POINTER TO KeyStateObject;  KeyStateObject: TYPE = RECORD [rest: KeyStateList ¬ NIL, keyState: KeyState];        Choice: TYPE = LONG POINTER TO ChoiceList ¬ NIL;  ChoiceList: TYPE = RECORD [first: Term, rest: Choice];    Term: TYPE = LONG POINTER TO TermObject;  TermObject: TYPE = RECORD [    rest: Term ¬ NIL,    variants: SELECT flavor: * FROM      keyTrigger, keyEnable => [keyState: KeyState],      keyEnableList => [list: KeyStateList],      mouseTrigger, enterTrigger, exitTrigger => [],      timeTrigger => [flavor: TimeoutFlavor, mSecs: Process.Milliseconds],      predEnable => [predicate: ATOM],      char => [ch: LONG POINTER TO char ResultsObject],      coords => [xy: LONG POINTER TO coords ResultsObject],      keys => [keys: LONG POINTER TO keys ResultsObject],      time => [t: LONG POINTER TO time ResultsObject],      nested => [statement: Choice],      result => [list: Results],      ENDCASE];	  Results: TYPE = LONG POINTER TO ResultsObject;  ResultsObject: TYPE = RECORD [    rest: Results ¬ NIL,    v: SELECT type: * FROM      time => [t: System.Pulses ¬ [0]],      coords => [xy: UserTerminal.Coordinate ¬ [0, 0]],      keys => [keys: LONG POINTER TO Keys.KeyBits ¬ NIL],      char => [c: CHARACTER ¬ 0C],      atom => [a: ATOM ¬ NIL],      int => [i: LONG INTEGER ¬ 0],      string => [s: LONG STRING ¬ NIL],      ENDCASE];    TimeoutFlavor: TYPE = {gt, lt};    ReadCompiledTable: PROC [s: MStream.Handle, z: UNCOUNTED ZONE ¬ NIL]    RETURNS [table: Table, keyOption: KeyOption ¬ none];  BadTable: ERROR;  -- raised by ReadCompiledTable  WriteTable: PROC [table: Table, keyOption: KeyOption, s: MStream.Handle];  BuildTable: PROC [    file: LONG STRING, opaque: BOOLEAN, z: UNCOUNTED ZONE, contents: LONG STRING]    RETURNS [Table];  DefaultTable: PROC [printKeys: BOOLEAN] RETURNS [Table];  EqualTables: PROC [t1, t2: Table];  globalZone: UNCOUNTED ZONE;  KeyOption: TYPE = {none, printKeys, defaultKeys};  nrOfErrors: CARDINAL = 30;  InitBuilder: PROC;--  keyNames: LONG POINTER TO ARRAY Keys.KeyName OF LONG STRING;  END.The syntax of "compiled" tip table files follows:	capital letters, numbers and parens are character literals	lower case id's are names of syntax equations	id* means 0 or more instances	<id> is a primitive of some sort such as textfile = TIPTABLE version opaque link ignore variantversion = <char>opaque = flaglink = N --none-- | P --printKeys-- | D --defaultKeys--ignore = up down moveup = flagdown = flagmove = flagvariant = S small | F fastsmall = choiceseriesfast = choice U choicearray D choicearray timetime = choicechoicearray = ( choiceitem* )choiceitem = ( key choice )choiceseries = ( choice* )choice = ( term* )term = 1 keytrigger | 2 mousetrigger | 3 timetrigger  | 4 keyenable |	5 predenable | 6 CHAR | 7 COORDS | 8 choiceseries | 9 results |	0 TIME | a ENTER | b EXIT | c keyenablelist | k KEYSkeytrigger = key keystatekey = <byte>keystate = U --up-- | D --down--keyenablelist = ( [4 keyenable]* )timetrigger = timeoutflavor msecstimeoutflavor = G --gt-- | L --lt--msecs = high lowhigh = <byte>low = <byte>keyenable = key keystatepredenable = atomresults = ( result* )result = 1 atom | 2 CHAR | 3 <int> | 4 len <text> | 5 COORDS | 6 TIME | 7 KEYSflag = T | F -- true or falseatom = len pnamepname = <text>len = <byte><text> stored as series of characters. length limited to 255 chars<int> stored as 4 bytes<char> and <byte> stored as themselves