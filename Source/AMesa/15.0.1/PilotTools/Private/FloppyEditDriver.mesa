-- Copyright (C) 1984, 1985  by Xerox Corporation. All rights reserved. -- FloppyEditDriver.mesa  15-May-85 14:56:18 by CAJDIRECTORY  Environment USING [wordsPerPage],  FloppyChannel USING [nullHandle],  FloppyEditInternal USING [    Data, DataObject, InitializeViewSwappingWindow, InitContext, InitIO,    MakeContextSW, MakeDataSW, MakeIOSW, maxSectorWords, ShutdownIO,    swapWindowKey],  Heap USING [Create, Delete],  Put USING [Line],  Runtime USING [GetBcdTime],  RuntimeInternal USING [Bug],  String USING [AppendString],  Time USING [Append, Packed, Unpack],  Tool USING [Create, MakeFormSW, MakeMsgSW, MakeSWsProc],  ToolWindow USING [State, TransitionProcType],  UserTerminal USING [BlinkDisplay],  Version USING [Append],  Window USING [Handle],  WindowSwap USING [DeactivateViewsWindow, Key, nullKey, ReactivateViewsWindow];FloppyEditDriver: PROGRAM  IMPORTS    FloppyChannel, FloppyEditInternal, Heap, Put, Runtime, RuntimeInternal,    String, Time, Tool, UserTerminal, Version, WindowSwap  EXPORTS FloppyEditInternal =  BEGIN  --//////////////////  -- PUBLIC variables  data: PUBLIC FloppyEditInternal.Data ¬ NIL;  swapWindowKey: PUBLIC WindowSwap.Key ¬ WindowSwap.nullKey;  heap: PUBLIC UNCOUNTED ZONE ¬ NIL;  toolWindow: PUBLIC Window.Handle ¬ NIL;  --//////////////////  -- Local constants variables  sectorBufferPageCount: CARDINAL =    (FloppyEditInternal.maxSectorWords + Environment.wordsPerPage - 1) /      Environment.wordsPerPage;  --//////////////////  -- Errors  BugType: TYPE = {danglingBuffer};  Bug: PROCEDURE [bug: BugType] = {RuntimeInternal.Bug[bug]};  --//////////////////  -- Procedures  ActivateTool: PROCEDURE =    BEGIN    IF heap = NIL THEN heap ¬ Heap.Create[initial: 10];    IF data = NIL THEN data ¬ InitData[];    FloppyEditInternal.InitIO[];    FloppyEditInternal.InitContext[];    END;  -- ActivateTool  ActivateViews: PROCEDURE =    BEGIN    menuWindows: ARRAY [0..3) OF Window.Handle;    menuWindows[0] ¬ data.msgSW;    menuWindows[1] ¬ data.ioSW;    menuWindows[2] ¬ data.contextSW;    WindowSwap.ReactivateViewsWindow[      key: swapWindowKey, defaultSW: data.dataSW,      otherWindows: DESCRIPTOR[BASE[menuWindows], 3]];    END;  DeactivateTool: PROCEDURE =    BEGIN    FloppyEditInternal.ShutdownIO[];    IF data.sectorBuffer ~= NIL THEN Bug[danglingBuffer];  -- ShutdownIO goofed    IF data.ioData ~= NIL THEN heap.FREE[@data.ioData];    IF data.contextData ~= NIL THEN heap.FREE[@data.contextData];    heap.FREE[@data];    data ¬ NIL;    Heap.Delete[heap, TRUE];    heap ¬ NIL;    END;  -- DeactivateTool  DeactivateViews: PROCEDURE =    {WindowSwap.DeactivateViewsWindow[FloppyEditInternal.swapWindowKey]};  Init: PROCEDURE =    BEGIN    name: STRING = [50];    bcdTime: Time.Packed = Runtime.GetBcdTime[];    -- Beginning of the world for FloppyEdit    heap ¬ Heap.Create[initial: 10];    data ¬ InitData[];    String.AppendString[name, "Floppy Disk Editor "L];    Version.Append[name];    String.AppendString[name, " of "L];    Time.Append[name, Time.Unpack[bcdTime]];    toolWindow ¬ Tool.Create[      name: name, makeSWsProc: MakeSWs, clientTransition: Transition,      initialState: active, tinyName1: "Floppy"L, tinyName2: "Editor"L];    -- Now that the tool is all created, set up the view swapping subwindow.    -- We let whoever implements the default window export this.    FloppyEditInternal.InitializeViewSwappingWindow[];    END;  -- Init  InitData: PROCEDURE RETURNS [data: FloppyEditInternal.Data] =    BEGIN    data ¬ heap.NEW[FloppyEditInternal.DataObject];    -- ok to leave handles trash    data.ioData ¬ data.contextData ¬ NIL;    data.sectorBuffer ¬ NIL;    data.handle ¬ FloppyChannel.nullHandle;    data.writesDisallowed ¬ FALSE;    END;  MakeSWs: Tool.MakeSWsProc =    BEGIN    -- Make the initial tool subwindows    data.msgSW ¬ Tool.MakeMsgSW[window: window, lines: 1];    data.ioSW ¬ Tool.MakeFormSW[      window: window, formProc: FloppyEditInternal.MakeIOSW];    data.contextSW ¬ Tool.MakeFormSW[      window: window, formProc: FloppyEditInternal.MakeContextSW];    data.dataSW ¬ Tool.MakeFormSW[      window: window, formProc: FloppyEditInternal.MakeDataSW];    -- At initial Create time, the WindowSwap stuff is not yet active.  For    -- activate tool, the alternate view windows, if any, must be recreated.    IF swapWindowKey ~= WindowSwap.nullKey THEN ActivateViews[];    END;  -- MakeSWs  Msg: PUBLIC PROCEDURE [string: LONG STRING, blink: BOOLEAN] =    BEGIN    IF string ~= NIL THEN Put.Line[data.msgSW, string];    IF blink THEN UserTerminal.BlinkDisplay[];    END;  Transition: ToolWindow.TransitionProcType =    BEGIN    -- Since the tools world takes    -- away the menus going tiny as well as inactive, the views environment must    -- be deactivated .    SELECT TRUE FROM      old = new => RETURN;      old = active =>        BEGIN	DeactivateViews[];  -- either tiny or inactive	IF new = inactive THEN DeactivateTool[];  -- inactive only	END;      new = active =>	IF old = tiny THEN ActivateViews[] ELSE --inactive-- ActivateTool[];      ENDCASE => NULL;    END;  --//////////////////  -- Module startup  Init[];  END.LOG24-Sep-84 16:58:27	CAJ	Created file.13-May-85 17:00:34	CAJ	Remove Exec register-command stuff: conflict with  WindowSwap window registering. Remove delete DataSW's data at deactivate. Cleanup activate/deactivate. Increase initial heapsize from 4 to 10.