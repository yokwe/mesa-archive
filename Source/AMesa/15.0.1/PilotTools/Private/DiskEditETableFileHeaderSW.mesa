-- Copyright (C) 1986, 1988  by Xerox Corporation. All rights reserved. -- DiskEditETableFileHeaderSW.mesa   10-Mar-88 10:01:57 by CAJDIRECTORY  DiskEditInternal USING [dataPtr, dataWindowKey, ReplaceUIDString, ValidateUID],  Environment USING [wordsPerPage],  ETable USING [FileHeaderHandle, ItemLogged],  FormSW USING [    AllocateItemDescriptor, ClientItemsProcType, CommandItem, DisplayItem,    Enumerated, EnumeratedItem, FilterProcType, line0, line1, line2, line3,    line4, line5, line6, line7, line8, line9, LineN, LongNumberItem, NumberItem,    NumberNotifyProcType, ProcType, StringEditProc, StringItem, TagOnlyItem],  Heap USING [systemZone],  String USING [FreeString],  System USING [UniversalID],  UserTerminal USING [BlinkDisplay],  Window USING [Handle],  WindowSwap USING [RegisterView];DiskEditETableFileHeaderSW: PROGRAM  IMPORTS DiskEditInternal, FormSW, Heap, String, UserTerminal,    WindowSwap =  BEGIN  FormItems: TYPE = {eTableFileHeader, seal, version, lv, numberOfBuckets,    numberOfBucketsToAdd, maxETableSize, overflowSize, preImageSize,    numberOfPagesLogged, logged, firstFilePageLogged, unusedH, indexH,    valueH, nextH, backH, primaryETFHeader, myFirstEtablePageP,    otherFirstEtablePageP, firstOverflowPageP, firstPreImagePageP, unusedP,    indexP, valueP, nextP, backP, copyETFHeader, myFirstEtablePageC,    otherFirstEtablePageC, firstOverflowPageC, firstPreImagePageC, unusedC,    indexC, valueC, nextC, backC};  Unused: TYPE = RECORD [    max: CARDINAL ¬ 0,    itemIndex: CARDINAL ¬ 0,    base: LONG POINTER ¬ NIL,    index: CARDINAL ¬ 0,    value: CARDINAL ¬ 0];  dataPage: ETable.FileHeaderHandle = LOOPHOLE[DiskEditInternal.dataPtr];  lvString: LONG STRING ¬ NIL;  headerUnused: Unused;  primaryUnused: Unused;  copyUnused: Unused;  Back:  FormSW.ProcType =    BEGIN    pWho: LONG POINTER TO Unused ¬ SELECT index FROM      FormItems.backH.ORD => @headerUnused,      FormItems.backP.ORD => @primaryUnused,      ENDCASE => --backC-- @copyUnused;    IF pWho.index IN [0..pWho.max] THEN      (pWho.base + pWho.index)­ ¬ pWho.value;    pWho.index ¬ IF pWho.index = 0 THEN pWho.max ELSE pWho.index - 1;    ChangeUnused[sw, pWho];    END;  ChangeIndex: FormSW.NumberNotifyProcType =  --[sw: Window.Handle, item: FormSW.ItemHandle, index: CARDINAL,  -- oldValue: UNSPECIFIED]    BEGIN    pWho: LONG POINTER TO Unused ¬ SELECT index FROM      FormItems.indexH.ORD => @headerUnused,      FormItems.indexP.ORD => @primaryUnused,      ENDCASE => --indexC-- @copyUnused;    IF pWho.index ~IN [0..pWho.max] THEN      BEGIN      UserTerminal.BlinkDisplay[];      pWho.index ¬ oldValue;      END;    ChangeUnused[sw, pWho];    END;  ChangeUnused: PROCEDURE [sw: Window.Handle, pWho: LONG POINTER TO Unused] =    BEGIN    pWho.value ¬ (pWho.base + pWho.index)­;    FormSW.DisplayItem[sw, pWho.itemIndex];    FormSW.DisplayItem[sw, pWho.itemIndex + 1];    END;  ChangeValue: FormSW.NumberNotifyProcType =    BEGIN    pWho: LONG POINTER TO Unused ¬ SELECT index FROM      FormItems.valueH.ORD => @headerUnused,      FormItems.valueP.ORD => @primaryUnused,      ENDCASE => --valueC-- @copyUnused;    (pWho.base + pWho.index)­ ¬ pWho.value;    END;  CleanupETableFileHeaderSW: PROCEDURE =    BEGIN    IF headerUnused.index IN [0..headerUnused.max] THEN      (headerUnused.base + headerUnused.index)­ ¬ headerUnused.value;    IF primaryUnused.index IN [0..primaryUnused.max] THEN      (primaryUnused.base + primaryUnused.index)­ ¬ primaryUnused.value;    IF copyUnused.index IN [0..copyUnused.max] THEN      (copyUnused.base + copyUnused.index)­ ¬ copyUnused.value;    END;  DestroyETableFileHeaderSW: PROCEDURE =    BEGIN    String.FreeString[z: Heap.systemZone, s: lvString];    lvString ¬ NIL;    END;  FillETableFileHeaderSW: PROCEDURE =    BEGIN    DiskEditInternal.ReplaceUIDString[@lvString, dataPage.lv];    headerUnused ¬ [max: Environment.wordsPerPage - 155,      itemIndex: FormItems.indexH.ORD, base: @dataPage.unused,      index: 0, value: dataPage.unused[0]];    primaryUnused ¬ [max: 60, itemIndex: FormItems.indexP.ORD,      base: @dataPage.primaryETFHeader.unused, index: 0,      value: dataPage.primaryETFHeader.unused[0]];    copyUnused ¬ [max: 60, itemIndex: FormItems.indexC.ORD,      base: @dataPage.copyETFHeader.unused, index: 0,      value: dataPage.copyETFHeader.unused[0]];    END;  -- FillETableFileHeaderSW  MakeETableFileHeaderSW: FormSW.ClientItemsProcType =    BEGIN    nItems: CARDINAL = FormItems.LAST.ORD + 1;    itemLogged: ARRAY [0..4) OF FormSW.Enumerated ¬ [      ["eTFET"L, ETable.ItemLogged[eTFET]],      ["overflowBucket"L, ETable.ItemLogged[overflowBucket]],      ["nothingLogged"L, ETable.ItemLogged[nothingLogged]],      ["(trash)"L, LAST[CARDINAL]]];    items ¬ FormSW.AllocateItemDescriptor[nItems];    items[FormItems.eTableFileHeader.ORD] ¬ FormSW.TagOnlyItem[      tag: "ETableFileHeader"L, place: [2, FormSW.line0]];    items[FormItems.seal.ORD] ¬ FormSW.NumberItem[      tag: "seal "L, place: [11, FormSW.line1], radix: octal, signed: FALSE,      notNegative: TRUE, value: @dataPage.seal];    items[FormItems.version.ORD] ¬ FormSW.NumberItem[      tag: "version "L, place: [166, FormSW.line1], signed: FALSE,      notNegative: TRUE, value: @dataPage.version];    items[FormItems.lv.ORD] ¬ FormSW.StringItem[      tag: "lv"L, place: [11, FormSW.line2], inHeap: FALSE,      filterProc: ValidateLVID, string: @lvString];    items[FormItems.numberOfBuckets.ORD] ¬ FormSW.NumberItem[      tag: "numberOfBuckets "L, place: [11, FormSW.line3], signed: FALSE,      notNegative: TRUE, value: @dataPage.numberOfBuckets];    items[FormItems.numberOfBucketsToAdd.ORD] ¬ FormSW.NumberItem[      tag: "numberOfBucketsToAdd "L, place: [229, FormSW.line3], signed: FALSE,      notNegative: TRUE, value: @dataPage.numberOfBucketsToAdd];    items[FormItems.maxETableSize.ORD] ¬ FormSW.NumberItem[      tag: "maxETableSize "L, place: [11, FormSW.line4], signed: FALSE,      notNegative: TRUE, value: @dataPage.maxETableSize];    items[FormItems.overflowSize.ORD] ¬ FormSW.LongNumberItem[      tag: "overflowSize "L, place: [11, FormSW.line5], signed: FALSE,      notNegative: TRUE, value: @dataPage.overflowSize];    items[FormItems.preImageSize.ORD] ¬ FormSW.LongNumberItem[      tag: "preImageSize "L, place: [229, FormSW.line5], signed: FALSE,      notNegative: TRUE, value: @dataPage.preImageSize];    items[FormItems.numberOfPagesLogged.ORD] ¬ FormSW.NumberItem[      tag: "numberOfPagesLogged "L, place: [11, FormSW.line6], signed: FALSE,      notNegative: TRUE, value: @dataPage.numberOfPagesLogged];    items[FormItems.logged.ORD] ¬ FormSW.EnumeratedItem[      tag: "itemLogged"L, place: [215, FormSW.line6],      choices: DESCRIPTOR[itemLogged], value: @dataPage.itemLogged];    items[FormItems.firstFilePageLogged.ORD] ¬ FormSW.LongNumberItem[      tag: "firstFilePageLogged "L, place: [11, FormSW.line7], signed: FALSE,      value: @dataPage.firstFilePageLogged];    items[FormItems.unusedH.ORD] ¬ FormSW.TagOnlyItem[      tag: "unused"L, place: [11, FormSW.line8]];    items[FormItems.indexH.ORD] ¬ FormSW.NumberItem[      tag: "index "L, place: [92, FormSW.line8], signed: FALSE,      notNegative: TRUE, proc: ChangeIndex, value: @headerUnused.index];    items[FormItems.valueH.ORD] ¬ FormSW.NumberItem[      tag: "value "L, place: [209, FormSW.line8], signed: FALSE,      notNegative: TRUE, proc: ChangeValue, value: @headerUnused.value];    items[FormItems.nextH.ORD] ¬ FormSW.CommandItem[      tag: "Next"L, place: [337, FormSW.line8], proc: Next];    items[FormItems.backH.ORD] ¬ FormSW.CommandItem[      tag: "Back"L, place: [393, FormSW.line8], proc: Back];    items[FormItems.primaryETFHeader.ORD] ¬ FormSW.TagOnlyItem[      tag: "primaryETFHeader"L, place: [11, FormSW.line9]];    items[FormItems.myFirstEtablePageP.ORD] ¬ FormSW.LongNumberItem[      tag: "myFirstEtablePage "L, place: [24, FormSW.LineN[10]], signed: FALSE,      notNegative: TRUE, value: @dataPage.primaryETFHeader.myFirstETablePage];    items[FormItems.otherFirstEtablePageP.ORD] ¬ FormSW.LongNumberItem[      tag: "otherFirstEtablePage "L, place: [240, FormSW.LineN[10]],      signed: FALSE, notNegative: TRUE,      value: @dataPage.primaryETFHeader.otherFirstETablePage];    items[FormItems.firstOverflowPageP.ORD] ¬ FormSW.LongNumberItem[      tag: "firstOverflowPage "L, place: [24, FormSW.LineN[11]], signed: FALSE,      notNegative: TRUE, value: @dataPage.primaryETFHeader.firstOverflowPage];    items[FormItems.firstPreImagePageP.ORD] ¬ FormSW.LongNumberItem[      tag: "firstPreImagePage "L, place: [240, FormSW.LineN[11]], signed: FALSE,      notNegative: TRUE, value: @dataPage.primaryETFHeader.firstPreImagePage];    items[FormItems.unusedP.ORD] ¬ FormSW.TagOnlyItem[      tag: "unused"L, place: [24, FormSW.LineN[12]]];    items[FormItems.indexP.ORD] ¬ FormSW.NumberItem[      tag: "index "L, place: [101, FormSW.LineN[12]], signed: FALSE,      notNegative: TRUE, proc: ChangeIndex, value: @primaryUnused.index];    items[FormItems.valueP.ORD] ¬ FormSW.NumberItem[      tag: "value "L, place: [220, FormSW.LineN[12]], signed: FALSE,      notNegative: TRUE, proc: ChangeValue, value: @primaryUnused.value];    items[FormItems.nextP.ORD] ¬ FormSW.CommandItem[      tag: "Next"L, place: [350, FormSW.LineN[12]], proc: Next];    items[FormItems.backP.ORD] ¬ FormSW.CommandItem[      tag: "Back"L, place: [403, FormSW.LineN[12]], proc: Back];    items[FormItems.copyETFHeader.ORD] ¬ FormSW.TagOnlyItem[      tag: "copyETFHeader"L, place: [12, FormSW.LineN[13]]];    items[FormItems.myFirstEtablePageC.ORD] ¬ FormSW.LongNumberItem[      tag: "myFirstEtablePage "L, place: [24, FormSW.LineN[14]], signed: FALSE,      notNegative: TRUE, value: @dataPage.copyETFHeader.myFirstETablePage];    items[FormItems.otherFirstEtablePageC.ORD] ¬ FormSW.LongNumberItem[      tag: "otherFirstEtablePage "L, place: [240, FormSW.LineN[14]],      signed: FALSE, notNegative: TRUE,      value: @dataPage.copyETFHeader.otherFirstETablePage];    items[FormItems.firstOverflowPageC.ORD] ¬ FormSW.LongNumberItem[      tag: "firstOverflowPage "L, place: [24, FormSW.LineN[15]], signed: FALSE,      notNegative: TRUE, value: @dataPage.copyETFHeader.firstOverflowPage];    items[FormItems.firstPreImagePageC.ORD] ¬ FormSW.LongNumberItem[      tag: "firstPreImagePage "L, place: [240, FormSW.LineN[15]], signed: FALSE,      notNegative: TRUE, value: @dataPage.copyETFHeader.firstPreImagePage];    items[FormItems.unusedC.ORD] ¬ FormSW.TagOnlyItem[      tag: "unused"L, place: [24, FormSW.LineN[16]]];    items[FormItems.indexC.ORD] ¬ FormSW.NumberItem[      tag: "index "L, place: [101, FormSW.LineN[16]], signed: FALSE,      notNegative: TRUE, proc: ChangeIndex, value: @copyUnused.index];    items[FormItems.valueC.ORD] ¬ FormSW.NumberItem[      tag: "value "L, place: [220, FormSW.LineN[16]], signed: FALSE,      notNegative: TRUE, proc: ChangeValue, value: @copyUnused.value];    items[FormItems.nextC.ORD] ¬ FormSW.CommandItem[      tag: "Next"L, place: [350, FormSW.LineN[16]], proc: Next];    items[FormItems.backC.ORD] ¬ FormSW.CommandItem[      tag: "Back"L, place: [403, FormSW.LineN[16]], proc: Back];    RETURN[items: items, freeDesc: TRUE];    END;  -- MakeETableFileHeaderSW  Next:  FormSW.ProcType =  -- [sw: Window.Handle, item: FormSW.ItemHandle, index: CARDINAL]    BEGIN    pWho: LONG POINTER TO Unused ¬ SELECT index FROM      FormItems.nextH.ORD => @headerUnused,      FormItems.nextP.ORD => @primaryUnused,      ENDCASE => --nextC-- @copyUnused;    IF pWho.index IN [0..pWho.max] THEN      (pWho.base + pWho.index)­ ¬ pWho.value;    pWho.index ¬ IF pWho.index = pWho.max THEN 0 ELSE pWho.index + 1;    ChangeUnused[sw, pWho];    END;  -- This could be combined with identical copies elsewhere  ValidateLVID: FormSW.FilterProcType =    BEGIN    valid: BOOLEAN;    id: System.UniversalID;    FormSW.StringEditProc[sw, item, insert, string];    [valid, id] ¬ DiskEditInternal.ValidateUID[lvString];    IF ~valid THEN UserTerminal.BlinkDisplay[] ELSE dataPage.lv ¬ LOOPHOLE[id];    END;  -- Module initialization:  -- Register this subwindow as an alternate view for the data subwindow  WindowSwap.RegisterView[    key: DiskEditInternal.dataWindowKey,    viewName: "ETableFile Header"L,    makeFormSW: MakeETableFileHeaderSW,    viewFromDataProc: FillETableFileHeaderSW,    dataFromViewProc: CleanupETableFileHeaderSW,    destroyViewProc: DestroyETableFileHeaderSW];  END...LOG 6-Jun-86 10:06:22   CAJ    Created file.16-Sep-86 10:18:36   CAJ    Display seal as octal rather than decimal.30-Oct-86  8:49:28   CAJ    Change in ETable file header format.10-Mar-88 10:01:51   CAJ    StringItem's inHeap should be FALSE.