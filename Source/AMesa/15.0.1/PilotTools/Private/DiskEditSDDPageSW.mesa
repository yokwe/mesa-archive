-- Copyright (C) 1988  by Xerox Corporation. All rights reserved. -- DiskEditSDDPageSW.mesa     9-Mar-88 13:37:06 by CAJ 				 DIRECTORY  Device USING [Type],  DiskEditInternal USING [dataPtr, dataWindowKey],  FormSW USING [    AllocateItemDescriptor, ClientItemsProcType, CommandItem, DisplayItem,    Enumerated, EnumeratedItem, LabelItem, newLine, nextPlace, NumberItem,    NumberNotifyProcType, ProcType],  Inline USING [BITAND],  SelfDescribingDisks USING [DiskShapeDescriptorPageFormat],  UserTerminal USING [BlinkDisplay],  Window USING [Handle],  WindowSwap USING [CurrentViewHandle, RegisterView];DiskEditSDDPageSW: PROGRAM  IMPORTS DiskEditInternal, FormSW, Inline, UserTerminal, WindowSwap =  BEGIN  FormItems: TYPE = {    begin, title, seal, version, type, pagesPerTrack, headsPerCylinder,    cylinderCount, reducedWriteCylinder, preCompensationCylinder,    headLandingZone, rpm, vcmDisk, diskShapeFill, unusedIndex, unusedValue,    next, back, checkSum, invertedCheckSum};  -- This must exactly match the size of the ARRAY unused in  -- SelfDescribingDisks.DiskShapeDescriptorPageFormat.  unusedCount: CARDINAL = 243;  sw: Window.Handle ¬ NIL;  currentUnusedIndex: CARDINAL;  currentUnusedValue: CARDINAL;  diskShapeFill: UNSPECIFIED;  typeValue: Device.Type;  vcmDiskValue: BOOLEAN;      sddPage: LONG POINTER TO SelfDescribingDisks.DiskShapeDescriptorPageFormat =    LOOPHOLE[DiskEditInternal.dataPtr];  CleanupSDDPageSW: PROCEDURE =    BEGIN    -- The only things that are copied here are things that occupy less than a    -- full  word in the actual root page.  Other things are set directly by    -- the form sw.    sddPage.diskShape.vcmDisk ¬ vcmDiskValue;    sddPage.diskShape.type ¬ typeValue;    sddPage.diskShape.unused ¬ Inline.BITAND[diskShapeFill, 077777B];    END;  -- CleanupSDDPageSW  DestroySDDPageSW: PROCEDURE =    BEGIN    sw ¬ NIL;    END;  -- DestroyLvRootPageSW  FillSDDPageSW: PROCEDURE =    BEGIN    IF sw = NIL THEN      sw ¬ WindowSwap.CurrentViewHandle[DiskEditInternal.dataWindowKey];    currentUnusedIndex ¬ 0;    currentUnusedValue ¬ sddPage.unused[currentUnusedIndex];    vcmDiskValue ¬ sddPage.diskShape.vcmDisk;    typeValue ¬ sddPage.diskShape.type;    diskShapeFill ¬ LOOPHOLE[sddPage.diskShape.unused, UNSPECIFIED];    END;  -- FillSDDPageSW  MakeSDDPageSW: FormSW.ClientItemsProcType =    BEGIN    nItems: CARDINAL = 20;    vcmDiskValues: ARRAY [0..2) OF FormSW.Enumerated ¬ [      [string: "VCM disk"L, value: TRUE],      [string: "stepper motor disk"L, value: FALSE]];    items ¬ FormSW.AllocateItemDescriptor[nItems];    items[FormItems.begin.ORD] ¬ FormSW.LabelItem[      tag: NIL, invisible: TRUE, place: FormSW.newLine];    items[FormItems.title.ORD] ¬ FormSW.LabelItem[      tag: "SelfDescribingDisk page"L, place: FormSW.newLine];    items[FormItems.seal.ORD] ¬ FormSW.NumberItem[      tag: "Seal "L, signed: FALSE, notNegative: TRUE, radix: octal,      default: 0, value: @sddPage.seal, place: FormSW.newLine];    items[FormItems.version.ORD] ¬ FormSW.NumberItem[      tag: "Version "L, signed: FALSE, notNegative: TRUE, radix: octal,      default: 0, value: @sddPage.version, place: FormSW.nextPlace];    items[FormItems.type.ORD] ¬ FormSW.NumberItem[      tag: "Type "L, signed: FALSE, notNegative: TRUE, radix: decimal,      default: 0, value: @typeValue, place: FormSW.newLine];    items[FormItems.pagesPerTrack.ORD] ¬ FormSW.NumberItem[      tag: "PagesPerTrack "L, signed: FALSE, notNegative: TRUE, radix: decimal,      default: 0, value: @sddPage.diskShape.pagesPerTrack, place: FormSW.newLine];    items[FormItems.headsPerCylinder.ORD] ¬ FormSW.NumberItem[      tag: "HeadsPerCylinder "L, signed: FALSE, notNegative: TRUE, radix: decimal,      default: 0, value: @sddPage.diskShape.headsPerCylinder,      place: FormSW.nextPlace];    items[FormItems.cylinderCount.ORD] ¬ FormSW.NumberItem[      tag: "CylinderCount "L, signed: FALSE, notNegative: TRUE, radix: decimal,      default: 0, value: @sddPage.diskShape.cylinderCount,      place: FormSW.nextPlace];    items[FormItems.reducedWriteCylinder.ORD] ¬ FormSW.NumberItem[      tag: "ReducedWriteCylinder "L, signed: FALSE, notNegative: TRUE,      radix: decimal, default: 0, value: @sddPage.diskShape.reducedWriteCylinder,      place: FormSW.newLine];    items[FormItems.preCompensationCylinder.ORD] ¬ FormSW.NumberItem[      tag: "PreCompensationCylinder "L, signed: FALSE, notNegative: TRUE,      radix: decimal, default: 0,      value: @sddPage.diskShape.preCompensationCylinder, place: FormSW.nextPlace];    items[FormItems.headLandingZone.ORD] ¬ FormSW.NumberItem[      tag: "HeadLandingZone "L, signed: FALSE, notNegative: TRUE, radix: decimal,      default: 0, value: @sddPage.diskShape.headLandingZone,      place: FormSW.newLine];    items[FormItems.rpm.ORD] ¬ FormSW.NumberItem[      tag: "RPM "L, signed: FALSE, notNegative: TRUE, radix: decimal,      default: 0, value: @sddPage.diskShape.rpm, place: FormSW.nextPlace];    items[FormItems.vcmDisk.ORD] ¬ FormSW.EnumeratedItem[      tag: "VCM/Stepper"L, feedback: one, copyChoices: TRUE,      value: @vcmDiskValue, choices: DESCRIPTOR[vcmDiskValues],      place: FormSW.newLine];    items[FormItems.diskShapeFill.ORD] ¬ FormSW.NumberItem[      tag: "DiskShapeFill ", signed: FALSE, notNegative: TRUE, radix: octal,      default: 0, value: @diskShapeFill, proc: ValidateDiskShapeFill,      place: FormSW.nextPlace];    items[FormItems.unusedIndex.ORD] ¬ FormSW.NumberItem[      tag: "Unused word index "L, signed: FALSE, notNegative: TRUE,      radix: decimal, default: 0, value: @currentUnusedIndex,      proc: NoticeNewFillIndex, place: FormSW.newLine];    items[FormItems.unusedValue.ORD] ¬ FormSW.NumberItem[      tag: "Value ", signed: FALSE, notNegative: TRUE, radix: decimal, default: 0,      value: @currentUnusedValue, place: FormSW.nextPlace];    items[FormItems.next.ORD] ¬ FormSW.CommandItem[      tag: "Next", proc: UnusedNextCommand, place: FormSW.nextPlace];    items[FormItems.back.ORD] ¬ FormSW.CommandItem[      tag: "Back", proc: UnusedBackCommand, place: FormSW.nextPlace];    items[FormItems.checkSum.ORD] ¬ FormSW.NumberItem[      tag: "Checksum "L, signed: FALSE, notNegative: TRUE, radix: octal,      default: 0, value: @sddPage.checkSum, place: FormSW.newLine];    items[FormItems.invertedCheckSum.ORD] ¬ FormSW.NumberItem[      tag: "InvertedChecksum "L, signed: FALSE, notNegative: TRUE, radix: octal,      default: 0, value: @sddPage.invertedCheckSum,      place: FormSW.nextPlace];    RETURN[items, TRUE]    END;  -- MakeSDDPageSW  NoticeNewFillIndex: FormSW.NumberNotifyProcType =    BEGIN    IF oldValue IN [0..unusedCount) THEN      sddPage.unused[oldValue] ¬ currentUnusedValue;    IF currentUnusedIndex ~IN [0..unusedCount) THEN      {UserTerminal.BlinkDisplay[]; RETURN};    currentUnusedValue ¬ sddPage.unused[currentUnusedIndex];    FormSW.DisplayItem[sw, FormItems.unusedValue.ORD];    END;  -- NoticeNewFillIndex  UnusedBackCommand: FormSW.ProcType =    BEGIN    IF currentUnusedIndex IN [0..unusedCount) THEN      sddPage.unused[currentUnusedIndex] ¬ currentUnusedValue;    currentUnusedIndex ¬      IF currentUnusedIndex = 0 THEN unusedCount - 1      ELSE currentUnusedIndex - 1;    currentUnusedValue ¬ sddPage.unused[currentUnusedIndex];    FormSW.DisplayItem[sw, FormItems.unusedIndex.ORD];    FormSW.DisplayItem[sw, FormItems.unusedValue.ORD];    END;  -- UnusedBackCommand  UnusedNextCommand: FormSW.ProcType =    BEGIN    IF currentUnusedIndex IN [0..unusedCount) THEN      sddPage.unused[currentUnusedIndex] ¬ currentUnusedValue;    currentUnusedIndex ¬      (currentUnusedIndex + 1) MOD unusedCount;    currentUnusedValue ¬ sddPage.unused[currentUnusedIndex];    FormSW.DisplayItem[sw, FormItems.unusedIndex.ORD];    FormSW.DisplayItem[sw, FormItems.unusedValue.ORD];    END;  -- UnusedNextCommand  ValidateDiskShapeFill: FormSW.NumberNotifyProcType =    BEGIN    IF diskShapeFill ~IN [0..77777B) THEN      BEGIN      UserTerminal.BlinkDisplay[];      diskShapeFill ¬ oldValue;      FormSW.DisplayItem[sw, index];      END;    END;  -- ValidateDiskShapeFill  -- Module initialization:  -- Register this subwindow as a view for the data subwindow  WindowSwap.RegisterView[    key: DiskEditInternal.dataWindowKey,    viewName: "SDD page"L,    makeFormSW: MakeSDDPageSW,    viewFromDataProc: FillSDDPageSW,    dataFromViewProc: CleanupSDDPageSW,    destroyViewProc: DestroySDDPageSW];  END.LOG 9-Mar-88 13:36:59   CAJ    Created file.