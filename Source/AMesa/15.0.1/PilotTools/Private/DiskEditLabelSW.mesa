-- Copyright (C) 1983, 1984, 1985, 1986  by Xerox Corporation. All rights reserved. -- DiskEditLabelSW.mesa    11-Apr-89 18:56:30 by TXT     DIRECTORY  CompatibilityDiskFace USING [Label],  DiskEditInternal USING [diskLabel, ReplaceUIDString, ValidateUID],  File USING [lastPageNumber],  FormSW USING [    AllocateItemDescriptor, ClientItemsProcType, FilterProcType,    ItemHandle, LabelItem, LongNumberItem, LongNumberNotifyProcType, MenuProcType,    newLine, nextPlace, NumberItem, NumberNotifyProcType, StringEditProc,    StringItem],  Inline USING [LongNumber],  PilotDiskFace USING [DiskAddress],  System USING [UniversalID],  UserTerminal USING [BlinkDisplay];DiskEditLabelSW: PROGRAM  IMPORTS DiskEditInternal, FormSW, UserTerminal  EXPORTS DiskEditInternal =  BEGIN    PilotDiskAddress: TYPE = RECORD [a, b: CARDINAL];  label: MACHINE DEPENDENT RECORD [    fileIDString(0): LONG STRING ¬ NIL,    filePageNumber(2): LONG CARDINAL ¬ 0,    pageZeroAttributes(4): CARDINAL ¬ 0,    a(5): CARDINAL ¬ 0,    b(6): CARDINAL ¬ 0,    c(7): CARDINAL ¬ 0];  CleanupLabelSW: PUBLIC PROCEDURE =    BEGIN    <<filePageNumber: MACHINE DEPENDENT RECORD [      filePageLo(0): CARDINAL,      filePageHi(1:0..6): [0..128),      pad(1:7..15): [0..0]];>>    link: MACHINE DEPENDENT RECORD [      a(0:0..15): CARDINAL, b(1:0..7): [0..255), c(1:8..15): [0..255)];    temp: MACHINE DEPENDENT RECORD      [a(0:0..6): [0..0], pageZeroAttributes(0:7..15): [0..512)];    temp.pageZeroAttributes ¬ LOOPHOLE[label.pageZeroAttributes];    link ¬ [a: label.a, b: label.b, c: label.c];    --filePageNumber ¬ LOOPHOLE[label.filePageNumber];    --DiskEditInternal.diskLabel.filePageLo ¬ filePageNumber.filePageLo;    --DiskEditInternal.diskLabel.filePageHi ¬ filePageNumber.filePageHi;    SetLabelFilePage[DiskEditInternal.diskLabel, label.filePageNumber];    DiskEditInternal.diskLabel.pageZeroAttributes ¬ temp.pageZeroAttributes;    DiskEditInternal.diskLabel.dontCare ¬ LOOPHOLE[link];    END;  FillLabelSW: PUBLIC PROCEDURE =    BEGIN    filePage: LONG CARDINAL ¬ 65536;    file: System.UniversalID ¬ LOOPHOLE[DiskEditInternal.diskLabel.fileID];    link: PilotDiskFace.DiskAddress ¬      LOOPHOLE[DiskEditInternal.diskLabel.dontCare, PilotDiskFace.DiskAddress];    label.filePageNumber ¬      filePage*DiskEditInternal.diskLabel.filePageHi +       LONG[DiskEditInternal.diskLabel.filePageLo];    DiskEditInternal.ReplaceUIDString[      @label.fileIDString, file];    label.pageZeroAttributes ¬ DiskEditInternal.diskLabel.pageZeroAttributes;    label.a ¬ link.cylinder;    label.b ¬ link.head;    label.c ¬ link.sector;    END;  MakeLabelSW: PUBLIC FormSW.ClientItemsProcType =    BEGIN    bootChainLink: LONG POINTER TO PilotDiskAddress =      LOOPHOLE[@DiskEditInternal.diskLabel.dontCare];    attributesInAllPages: LONG POINTER TO WORD =      LOOPHOLE[@DiskEditInternal.diskLabel.attributesInAllPages];    i: CARDINAL ¬ 0;    nItems: CARDINAL = 10;    items ¬ FormSW.AllocateItemDescriptor[nItems];    items[0] ¬ FormSW.LabelItem[tag: NIL, invisible: TRUE, place: FormSW.newLine];    items[i ¬ i + 1] ¬ FormSW.LabelItem[tag: "Label"L, place: FormSW.newLine];    items[i ¬ i + 1] ¬ FormSW.StringItem[      tag: "File ID"L, inHeap: TRUE, string: @label.fileIDString,      filterProc: ValidateLabelFileID, place: FormSW.newLine];    items[i ¬ i + 1] ¬ FormSW.LongNumberItem[      tag: "File Page Number"L, signed: FALSE, notNegative: TRUE, default: 0,      radix: decimal, value: @label.filePageNumber,      proc: ValidateLabelFilePageNumber, place: FormSW.newLine];    items[i ¬ i + 1] ¬ FormSW.NumberItem[      tag: "PageZeroAttributes"L, signed: FALSE, notNegative: TRUE, default: 0,      radix: decimal, value: @label.pageZeroAttributes,      proc: ValidatePageZeroAttributes, place: FormSW.newLine];    items[i ¬ i + 1] ¬ FormSW.NumberItem[      tag: "AttributesInAllPages"L, signed: FALSE, notNegative: TRUE, default: 0,      radix: decimal, value: @DiskEditInternal.diskLabel.attributesInAllPages,      place: FormSW.nextPlace];    items[i ¬ i + 1] ¬ FormSW.LabelItem[tag: "Boot chain link"L,      place: FormSW.newLine];    items[i ¬ i + 1] ¬ FormSW.NumberItem[      tag: "a"L, signed: FALSE, notNegative: TRUE, default: 0, radix: decimal,      value: @label.a, place: FormSW.nextPlace];    items[i ¬ i + 1] ¬ FormSW.NumberItem[      tag: "b"L, signed: FALSE, notNegative: TRUE, default: 0, radix: decimal,      value: @label.b, place: FormSW.nextPlace];    items[i ¬ i + 1] ¬ FormSW.NumberItem[      tag: "c"L, signed: FALSE, notNegative: TRUE, default: 0, radix: decimal,      value: @label.c, place: FormSW.nextPlace];        IF i ~= nItems - 1 THEN ERROR;      -- indicates that items is incompletely initialized    RETURN[items, TRUE]    END;  ValidateLabelFileID: FormSW.FilterProcType =    BEGIN    id: System.UniversalID;    valid: BOOLEAN;    FormSW.StringEditProc[sw, item, insert, string];    [valid, id] ¬ DiskEditInternal.ValidateUID[label.fileIDString];    IF ~valid THEN UserTerminal.BlinkDisplay[]    ELSE DiskEditInternal.diskLabel.fileID ¬ LOOPHOLE[id];    END;  ValidatePageZeroAttributes: FormSW.NumberNotifyProcType =    BEGIN    IF label.pageZeroAttributes ~IN [0..512) THEN UserTerminal.BlinkDisplay[];    END;    ValidateLabelFilePageNumber: FormSW.LongNumberNotifyProcType =    BEGIN    IF label.filePageNumber ~IN [0..File.lastPageNumber] THEN      UserTerminal.BlinkDisplay[];    END;    --  Private Procedure    SetLabelFilePage: PROCEDURE     [label: LONG POINTER TO CompatibilityDiskFace.Label, fpn: LONG CARDINAL] =    BEGIN      label.filePageLo ¬ LOOPHOLE[fpn, Inline.LongNumber].lowbits;      label.filePageHi ¬ LOOPHOLE[fpn, Inline.LongNumber].highbits;    END; -- SetlabelFilePage   END.LOG 3-Sep-81 10:16:20   WDK       LONGified.  Converted to opaque Label and Address21-Apr-83 14:45:41   EKN       Update to Klamath 29-Nov-83 16:49:57   EKN       Changed (long) number items in label to be displayed as decimal instead of octal.21-Nov-85 17:13:21   RSV       Added pad2 support (AR 6856)30-Sep-86  8:30:40   CAJ       Reworked for label definition changes from real labels to fake labels in a labelless disk system. Display boot chain link as 3 elements corresponding to DiskAddress rather than 2 plain integers.11-Apr-89 18:50:18   TXT       Add SetLableFilePage because of the bug for converting [filePageNumber:LONG CARDINAL] ==> [filePageHi[0..128), filePageLo: CARDINAL]  in CleanupLabelSW,    use LongMult in FillLabelSW. 