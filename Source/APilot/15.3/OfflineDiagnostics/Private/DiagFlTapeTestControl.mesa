-- Copyright (C) 1987 by Xerox Corporation. All rights reserved. ---- File: DiagFlTapeTestControl.mesa-- Edited by: PJT 11-Mar-87 16:36:13----Note: Compile DiagFlTapeTestRec.mesa also DiagFlTapeTestControl: DEFINITIONS = BEGIN DiagFlTapeTestControlImpl: PROGRAM;  -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -- these are not part of the record RepeatingCommand:		BOOLEAN;	--Set by the command driver LastRepeatCommand:		BOOLEAN;	--Set by the command driver RepeatedCmdSoftErrCnt:		CARDINAL;	--Used by error check SoftErrorsInAPass:		CARDINAL;	--Used by error check and tests HardReadErrorsInAPass:		CARDINAL;	--Used by error check and tests RateErrorsInAPass:		CARDINAL;	--Used by error check and tests DisplaySummaryOnHardErr:	BOOLEAN;	--Used by error check and tests -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -- these are part of the record RepeatCommand:		BOOLEAN;	--Repeats an IO operation with a read RepeatCmdCnt:		CARDINAL;	--error by RepeatCmdCnt times StopRepeatCmdIfNoSoftErr:BOOLEAN;	--Stops repeating the IO commands with					--the first good completion.  CheckForError:		BOOLEAN; IgnoreSoftErrors:	BOOLEAN;   CheckPassSoftErrCount:	BOOLEAN;	--Counts the soft errors in a pass.					--When MaxSubtestSoftErrors is					--encountered a hard error is generated. MaxPassSoftErrors:	CARDINAL;	--CheckPassSoftErrCount must be TRUE.  CheckPassHardReadErrCount:BOOLEAN;	--Counts the soft errors in a pass.					--When MaxSubtestSoftErrors is					--encountered a hard error is generated. MaxPassHardReadErrors:	CARDINAL;	--CheckPassSoftErrCount must be TRUE.  CountSubtestSoftErrors:BOOLEAN;	--Counts the soft errors in a subtest.					--When MaxSubtestSoftErrors is					--encountered a hard error is generated.					--Use with IncrSectorToFind1Good1 TRUE. MaxSubtestSoftErrors:	CARDINAL;	--CountSubtestSoftErrors must be TRUE. CountSubtestHardReadErrors:BOOLEAN;	--Counts the soft errors in a subtest.					--When MaxSubtestSoftErrors is					--encountered a hard error is generated. MaxSubtestHardReadErrors:CARDINAL;	--CountSubtestHardReadErrors must be TRUE. DisplaySoftErrors:	BOOLEAN; DisplayUnrecovSoftErr:	BOOLEAN; ContinueOnHardError:	BOOLEAN; ContinueOnSoftError:	BOOLEAN;  IncrSectorToFind1Good1:BOOLEAN;	--used for finding one good sector,					--Use with IncrSectorToFind1Good1 TRUE.					--Use with SignalOnSoftError and/or					--SignalOnSoftErrInTable CheckBadPageTable:	BOOLEAN; CheckSoftErrTable:	BOOLEAN;  --loop control stuff EndlessLoop:		BOOLEAN;	--never go out of the loop LoopOnError:		BOOLEAN;	--loop when an error was encountered ControlLoopCount:	BOOLEAN;   UseSectorsPerTrack:	BOOLEAN;   UseSectorsPerStream:	BOOLEAN;   UseSectorsPerTape:	BOOLEAN;   UseTracksPerStream:	BOOLEAN;   UseTracksPerTape:	BOOLEAN;   UseStreamsPerDrive:	BOOLEAN; --FRU codes stuff ControlFRUCode:	BOOLEAN; FRUCode:		CARDINAL;  --time stuff CmdTimeOutInSeconds:	CARDINAL; Delay:			LONG CARDINAL; --signal stuff SignalOnSoftError:	BOOLEAN;	--used to SIGNAL SoftError SoftError:		SIGNAL; SignalOnSoftErrInTable:BOOLEAN;	--used to SIGNAL SoftErrorInTable SoftErrorInTable:	SIGNAL; ReturnAfterCommand:	BOOLEAN;	--used to SIGNAL ReturningAfterCommand ReturningAfterCommand:	SIGNAL; ReturnOnHardError:	BOOLEAN;	--used to SIGNAL ReturningOnHardError ReturningOnHardError:	SIGNAL; ReturnOnSoftError:	BOOLEAN;	--used to SIGNAL ReturningOnSoftError ReturningOnSoftError:	SIGNAL;  TestControlRecord: TYPE = MACHINE DEPENDENT RECORD [	spareW0B0(0:0..0):		 BOOLEAN ¬ FALSE,	endlessLoop(0:1..1):		 BOOLEAN ¬ FALSE,	repeatCommand(0:2..2):		 BOOLEAN ¬ FALSE,	stopRepeatCmdIfNoSoftErr(0:3..3):BOOLEAN ¬ FALSE,	spareW0B4(0:4..4):		 BOOLEAN ¬ FALSE,	checkForError(0:5..5):		 BOOLEAN ¬ FALSE,	ignoreSoftErrors(0:6..6):	 BOOLEAN ¬ FALSE,	loopOnError(0:7..7):		 BOOLEAN ¬ FALSE,	checkPassSoftErrCount(0:8..8):	 BOOLEAN ¬ FALSE,	checkPassHardReadErrCount(0:9..9): BOOLEAN ¬ FALSE,	countSubtestSoftErrors(0:10..10):BOOLEAN ¬ FALSE,	countSubtestHardReadErrors(0:11..11):BOOLEAN ¬ FALSE,	displaySoftErrors(0:12..12):	 BOOLEAN ¬ FALSE,	displayUnrecovSoftErr(0:13..13): BOOLEAN ¬ FALSE,	continueOnHardError(0:14..14):	 BOOLEAN ¬ FALSE,	continueOnSoftError(0:15..15):	 BOOLEAN ¬ FALSE,	signalOnSoftError(1:0..0):	 BOOLEAN ¬ FALSE,	signalOnSoftErrInTable(1:1..1):	 BOOLEAN ¬ FALSE,	returnAfterCommand(1:2..2):	 BOOLEAN ¬ FALSE,	returnOnHardError(1:3..3):	 BOOLEAN ¬ FALSE,	returnOnSoftError(1:4..4):	 BOOLEAN ¬ FALSE,	incrSectorToFind1Good1(1:5..5):	 BOOLEAN ¬ FALSE,	checkBadPageTable(1:6..6):	 BOOLEAN ¬ FALSE,	checkSoftErrTable(1:7..7):	 BOOLEAN ¬ FALSE,	controlLoopCount(1:8..8):	 BOOLEAN ¬ FALSE,	  useSectorsPerTrack(1:9..9):	 BOOLEAN ¬ FALSE,	  useSectorsPerStream(1:10..10): BOOLEAN ¬ FALSE,	  useSectorsPerTape(1:11..11):	 BOOLEAN ¬ FALSE,	  useTracksPerStream(1:12..12):	 BOOLEAN ¬ FALSE,	  useTracksPerTape(1:13..13):	 BOOLEAN ¬ FALSE,	  useStreamsPerDrive(1:14..14):	 BOOLEAN ¬ FALSE,	controlFRUCode(1:15..15):	 BOOLEAN ¬ FALSE,	maxSubtestSoftErrors(2):	 CARDINAL ¬ 0,	maxPassSoftErrors(3):		 CARDINAL ¬ 0,	maxSubtestHardReadErrors(4):	 CARDINAL ¬ 0,	maxPassHardReadErrors(5):	 CARDINAL ¬ 0,	repeatCmdCnt(6):		 CARDINAL ¬ 0,	fRUCode(7):			 CARDINAL ¬ 0,	cmdTimeOutInSeconds(8):		 CARDINAL ¬ 0,	delay(9):			 LONG CARDINAL ¬ 0]; TCNull:		TestControlRecord; TCZipControl:		TestControlRecord; -- run command file TCRunCmdFile1:		TestControlRecord; TCRunCmdFile2:		TestControlRecord; TCRunCmdFile3:		TestControlRecord; -- retention/read ID TCChckForErr:		TestControlRecord; -- format TCFormatStr:		TestControlRecord; TCFormatTape:		TestControlRecord; -- write/read diag data TCwrKnownData1:	TestControlRecord; TCrdKnownData1:	TestControlRecord; -- exerciser TCExerRdIDStr:		TestControlRecord; TCExerRd1HrdErr:	TestControlRecord; TCExerRd3SftErr:	TestControlRecord; TCExerRd6SftErr:	TestControlRecord; TCExerRd20SftErr:	TestControlRecord; TCExerIsDiagTapeCf:	TestControlRecord; TCExerWr3SftErr:	TestControlRecord; TCExerWr6SftErr:	TestControlRecord; TCExerLst:		TestControlRecord; -- confidence test TCRdIDStrCf:		TestControlRecord; TCisDiagTapeCf:	TestControlRecord; TCrdVrStrm6A7Cf:	TestControlRecord; TCwrData1SftCf:	TestControlRecord; TCrdVrData1SftCf:	TestControlRecord; TCwrData2SftCf:	TestControlRecord; TCrdVrData3SftCf:	TestControlRecord; TCconfidenceTstLst:	TestControlRecord; --surface verification TCsurfVr:		TestControlRecord;  -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  -- to set up the given test control Records  -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  SetUpTestControl: PROCEDURE [controlData: TestControlRecord];  END... -- DiagFlTapeTestControl.mesa    