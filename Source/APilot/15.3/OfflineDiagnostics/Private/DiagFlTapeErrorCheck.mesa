-- Copyright (C) 1987  by Xerox Corporation. All rights reserved. ---- File: DiagFlTapeErrorCheck.mesa-- Edited by: PJT 11-Mar-87 16:24:16-- DIRECTORY DiagFlTapeCmdDes	USING	[Command];				    DiagFlTapeErrorCheck: DEFINITIONS = BEGIN   DiagFlTapeErrorCheckImpl:	PROGRAM;  Cleanup:			SIGNAL; --error stuff SoftError:			BOOLEAN; HardError:			BOOLEAN; Disaster:			BOOLEAN; DataError:			BOOLEAN; DataErrorIndex:		CARDINAL; DataErrorExpected:		CARDINAL; DataErrorObserved:		CARDINAL; ErrorCode:		 	CARDINAL; FruCode:			CARDINAL; --bad page stuff BadPage:		 	LONG CARDINAL; BadPageInTable:		BOOLEAN; NumOfBadPages:			CARDINAL; BadPageBuffPtr:		LONG POINTER TO ARRAY [0..512) OF LONG CARDINAL; --soft error stuff SoftErrInTable:		BOOLEAN; NumOfSoftErrs:			CARDINAL; SoftErrBuffPtr:		LONG POINTER TO ARRAY [0..512) OF LONG CARDINAL; SoftErrCntBuffPtr:		LONG POINTER TO ARRAY [0..512) OF CARDINAL; --hard read error stuff NumOfHardReadErrs:		CARDINAL; HardReadErrBuffPtr:		LONG POINTER TO ARRAY [0..128) OF LONG CARDINAL;  PublicStatusCheckArray:	LONG DESCRIPTOR FOR PACKED ARRAY OF					expectedStatus; errorType: TYPE = {noError, 		    softReadError, 		    softRdErrInSoftErrTbl, 		    softRdErrInBadPageTbl, 		    hardReadError, 		    hardError, 		    disaster}; expectedStatus: TYPE= MACHINE DEPENDENT {    inProgressFalse(0),		--w0B00False  0    inProgressTrue,		--w0B00True   1    goodCompletionFalse,	--w0B01False  2    goodCompletionTrue,		--w0B01True   3    diskChangeFalse,		--w0B02False  4    diskChangeTrue,		--w0B02True   5    notReadyFalse,		--w0B03False  6    notReadyTrue,		--w0B03True   7    cylinderErrorFalse,		--w0B04False  8    cylinderErrorTrue,		--w0B04True   9    deletedDataFalse,		--w0B05False 10    deletedDataTrue,		--w0B05True  11    recordNotFoundFalse,	--w0B06False 12    recordNotFoundTrue,		--w0B06True  13    headerErrorFalse,		--w0B07False 14    headerErrorTrue,		--w0B07True  15    dataErrorFalse,		--w0B08False 16    dataErrorTrue,		--w0B08True  17    dataLostFalse,		--w0B09False 18    dataLostTrue,		--w0B09True  19    writeFaultFalse,		--w0B10False 20    writeFaultTrue,		--w0B10True  21    memoryErrorFalse,		--w0B11False 22    memoryErrorTrue,		--w0B11True  23    invalidOperationFalse,	--w0B12False 24    invalidOperationTrue,	--w0B12True  25    abortedFalse,		--w0B13False 26    abortedTrue,		--w0B13True  27    otherErrorFalse,		--w0B14False 28    otherErrorTrue,		--w0B14True  29    w0B15False,			--w0B15False 30    w0B15True,			--w0B15True  31        cmdTimedOutFalse,		--w1B00False 32    cmdTimedOutTrue,		--w1B00True  33    countLeftErrFalse,		--w1B01False 34    countLeftErrTrue,		--w1B01True  35    dataVerifyErrorFalse,	--w1B02False 36    dataVerifyErrorTrue,	--w1B02True  37    iDVerifyErrorFalse,		--w1B03False 38    iDVerifyErrorTrue,		--w1B03True  39    w1B04False,			--w1B04False 40    w1B04True,			--w1B04True  41    w1B05False,			--w1B05False 42    w1B05True,			--w1B05True  43    w1B06False,			--w1B06False 44    w1B06True,			--w1B06True  45    w1B07False,			--w1B07False 46    w1B07True,			--w1B07True  47    w1B08False,			--w1B08False 48    w1B08True,			--w1B08True  49    w1B09False,			--w1B09False 50    w1B09True,			--w1B09True  51    w1B10False,			--w1B10False 52    w1B10True,			--w1B10True  53    w1B11False,			--w1B11False 54    w1B11True,			--w1B11True  55    w1B12False,			--w1B12False 56    w1B12True,			--w1B12True  57    w1B13False,			--w1B13False 58    w1B13True,			--w1B13True  59    w1B14False,			--w1B14False 60    retentionErr,		--	     61    hardReadErr,		--	     62    tooManySubTestSoftErrs,	--	     63    tooManyPassSoftErrs,	--	     64    tooManySubTestHardReadErrs,	--	     65    tooManyPassHardReadErrs,	--	     66    last			--	     67    };   -- error masks arrays ECNull:		PACKED ARRAY [0..1] OF expectedStatus; ECStandard1:		PACKED ARRAY [0..18] OF expectedStatus; ECExpctDtErr:		PACKED ARRAY [0..18] OF expectedStatus; -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -- to look for the given status conditions -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ CheckStatus: PROCEDURE [	cmdIdx: CARDINAL¬ 0,	command: DiagFlTapeCmdDes.Command,	needToCleanUp: BOOLEAN¬ FALSE,	errorArray: LONG DESCRIPTOR FOR PACKED ARRAY OF expectedStatus ¬							PublicStatusCheckArray]; -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -- initializes the error checking arrays -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ InitErrorCheck: PROCEDURE [clearSoftErrors: BOOLEAN¬ FALSE]; END...  --of DiagFlTapeErrorCheckLOG 9-Sep-86 11:29:27	PJT	Created  