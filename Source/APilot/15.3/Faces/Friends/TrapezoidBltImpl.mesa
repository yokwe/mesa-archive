-- File: TrapezoidBltImpl.mesa - last edit:-- JPM		17-Aug-93 16:25:19-- Copyright (C) 1986, 1988, 1989, 1991, 1993 by Xerox Corporation. All rights reserved.DIRECTORY  ColorBlt,  ColorDisplayFace USING [bitsPerDisplayPixel],  Environment USING [bitsPerWord],  ESCAlphaExtras,  Frame USING [GetReturnFrame, ReadPC, WritePC],  PrincOps USING [ESCTrapTable, LocalFrameHandle],  TrapezoidBlt;TrapezoidBltImpl: PROGRAM  IMPORTS ColorBlt, ColorDisplayFace, Frame  EXPORTS TrapezoidBlt =  BEGIN  TRAPEZOIDBLTNotImplementedInMicrocode: PROC[tzbp:TrapezoidBlt.TBptr] =    BEGIN      lf: PrincOps.LocalFrameHandle ¬ Frame.GetReturnFrame[];      Frame.WritePC[pc: [Frame.ReadPC[lf] + 2], lf: lf];      SoftwareTrapezoidBlt[tzbp];    END; -- TRAPEZOIDBLTNotImplementedInMicrocode  SoftwareTrapezoidBlt: PUBLIC PROC[tzbp:TrapezoidBlt.TBptr] =    BEGIN    -- declare SoftwareTrapezoidBlt variables.      ppw: NATURAL = Environment.bitsPerWord / ColorDisplayFace.bitsPerDisplayPixel;      patternHeight: NATURAL = tzbp.misc.heightMinusOne + 1;      pattern: ColorBlt.Address ¬ tzbp.src;      yOffset: NAT ¬ tzbp.misc.yOffset;      y: INTEGER ¬ tzbp.misc.widthMinusOne; -- kludge for synthetic colors      cbTableSpace: ColorBlt.CBTableSpace;      cbp: ColorBlt.CBptr ¬ ColorBlt.AlignedCBTable[@cbTableSpace];      pattern.word ¬ pattern.word - tzbp.misc.yOffset;      pattern.pixel ¬ pattern.pixel + 16 - tzbp.xMin.val.int MOD 16;      cbp.flags ¬ [srcType: bit, dstType: display, pattern: TRUE,        srcFunc: tzbp.misc.srcFunc, dstFunc: tzbp.misc.dstFunc];      cbp.srcDesc ¬ [pattern[[yOffset: NULL, widthMinusOne: 0,        heightMinusOne: tzbp.misc.heightMinusOne]]];      cbp.colorMapping ¬ tzbp.mapping;      cbp.dstPpl ¬ tzbp.dstBpl;      IF NotSteep[tzbp.xMin] OR NotSteep[tzbp.xMax] THEN {        cbp.height ¬ 1;	FOR n:NAT IN [0..tzbp.height) DO	  cbp.srcDesc.pattern.yOffset ¬ yOffset MOD patternHeight;	  cbp.dst ¬ [word:tzbp.dst.word, pixel:tzbp.xMin.val.int];	  cbp.src ¬ [	    word:pattern.word + (yOffset MOD patternHeight),	    pixel:(pattern.pixel+cbp.dst.pixel) MOD 16];	  cbp.width ¬ tzbp.xMax.val.int - tzbp.xMin.val.int;	  cbp.flags.reserved ¬ y + n;	  ColorBlt.ColorBlt[cbp];	  tzbp.dst.word ¬ tzbp.dst.word+(tzbp.dstBpl / ppw);	  tzbp.xMin.val.li ¬ tzbp.xMin.val.li + tzbp.xMin.dVal.li;	  tzbp.xMax.val.li ¬ tzbp.xMax.val.li + tzbp.xMax.dVal.li;	  yOffset ¬ yOffset+1;	  ENDLOOP}       ELSE {          bltL: NAT ¬ tzbp.xMin.val.int;	  bltR: NAT ¬ tzbp.xMax.val.int;	  IF tzbp.height<=0 THEN RETURN;	  cbp.height ¬ 1;	  cbp.flags.reserved ¬ y;	  DO	     IF (tzbp.height ¬ tzbp.height-1) = 0 THEN EXIT;	     tzbp.xMin.val.li ¬ tzbp.xMin.val.li + tzbp.xMin.dVal.li;	     tzbp.xMax.val.li ¬ tzbp.xMax.val.li + tzbp.xMax.dVal.li;	     IF bltL=tzbp.xMin.val.int AND bltR=tzbp.xMax.val.int THEN {	        cbp.height ¬ cbp.height+1; LOOP};	     cbp.srcDesc.pattern.yOffset ¬ yOffset MOD patternHeight;	     cbp.dst ¬ [word:tzbp.dst.word, pixel:bltL];	     cbp.src ¬ [	       word:pattern.word + (yOffset MOD patternHeight),	       pixel:(pattern.pixel+bltL) MOD 16];	     cbp.width ¬ bltR-bltL;	     ColorBlt.ColorBlt[cbp];	     bltL ¬ tzbp.xMin.val.int;	     bltR ¬ tzbp.xMax.val.int;	     tzbp.dst.word ¬ tzbp.dst.word+cbp.height*( tzbp.dstBpl / ppw );	     yOffset ¬ yOffset+cbp.height;	     cbp.flags.reserved ¬ cbp.flags.reserved + cbp.height;	     cbp.height ¬ 1;	     ENDLOOP;	  cbp.srcDesc.pattern.yOffset ¬ yOffset MOD patternHeight;	  cbp.dst ¬ [word:tzbp.dst.word, pixel:bltL];	  cbp.src ¬ [	    word:pattern.word + (yOffset MOD patternHeight),	    pixel:(pattern.pixel+bltL) MOD 16];	  cbp.width ¬ bltR-bltL;	  ColorBlt.ColorBlt[cbp];	  };        END; -- TRAPEZOIDBLTNotImplementedInMicrocode  NotSteep: PROC[edge: TrapezoidBlt.Interpolator] RETURNS [BOOLEAN] = INLINE {    RETURN[ABS[edge.dVal.li] >= steepSlope]};  steepSlope: LONG CARDINAL ¬ 50000;  -- make compiling rectangles worthwhile  -- to shut off accellerator, set steepSlope ¬ 0  -- Main Line code  PrincOps.ESCTrapTable[ESCAlphaExtras.aTRAPZBLT] ¬ LOOPHOLE[TRAPEZOIDBLTNotImplementedInMicrocode];  END.LOGReinhart 28-Aug-86  placed Mesa BltGrayTrap code into microcode interface compatable procedure called software TrapezoidBlt. Added EscTrap path for single bank systems.Monahan 29-Oct-86  removed BitOps references.JPM 19-Feb-88  color mods.JPM 13-Feb-89  fixed bug in SoftwareTrapezoidBlt (need to subtract tzbp.xMin.val.int MOD 16 from pattern.pixel so things line up properly).JPM 27-Nov-91  pass line number to ColorBlt (for synthetic colors).JPM 17-Aug-93  fixed bug in SoftwareTrapezoidBlt (src.word must be adjusted by yOffset MOD)