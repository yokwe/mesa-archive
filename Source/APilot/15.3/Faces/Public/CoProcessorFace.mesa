-- CoProcessorFace.mesa  Last Edited by JPM 7-May-93 11:21:04-- Copyright (C) 1990, 1993 by Xerox Corporation.  All rights reserved.DIRECTORY  Stream USING [Block, Byte, CompletionCode, SubSequenceType],  Zone USING [Alignment];CoProcessorFace: DEFINITIONS =  BEGIN  -- TYPEs  -- Connection is a bidirectional transfer point between a Mesa stream and  -- a coprocessor stream. The record and the buffers it uses must be pinned in memory  -- and, once presented to the Face via InitiateConnection,  -- must not be unpinned or deleted until it has been disconnected.  -- The actual size of this record is given by connectionRecSize.  Connection: TYPE = LONG POINTER TO ConnectionRec;  ConnectionRec: TYPE;  ServerID: TYPE = CARDINAL;  Status: TYPE = MACHINE DEPENDENT {inProgress(0), completed(1), error(2), busyTryLater(3)};  -- variables  connectionRecSize: CARDINAL; -- actual size of ConnectionRec  connectionRecAlignment: Zone.Alignment; -- alignment of allocated ConnectionRec  -- PROCs  Get: PROC [connection: Connection, block: Stream.Block]    RETURNS [bytesTransferred: CARDINAL, why: Stream.CompletionCode,             sst: Stream.SubSequenceType];  -- may transfer fewer bytes than block will hold; if this is the case  -- and why = normal, client should continue the operation after a wakeup  GetSST: PROC [connection: Connection] RETURNS [sst: Stream.SubSequenceType];  -- returns value from last successful SetSST call  Initialize: PROC [notifyMask: WORD];  InitializeCleanup: PROC;  InitiateConnection: PROC [connection: Connection, serverID: ServerID, isServer: BOOLEAN,    mesaPutBuffer: LONG DESCRIPTOR FOR PACKED ARRAY OF Stream.Byte,    mesaGetBuffer: LONG DESCRIPTOR FOR PACKED ARRAY OF Stream.Byte] RETURNS [Status];  -- normally returns inProgress; if so, use Poll to check for completion  -- Poll will return error if ~isServer and connection.serverID not known to coprocessor  InitiateDisconnection: PROC [connection: Connection, unilateral: BOOLEAN ¬ FALSE]    RETURNS [Status];  -- normally returns inProgress; if so, use Poll to check for completion  -- if unilateral = FALSE, Poll will show inProgress until other side also disconnects  Poll: PROC [connection: Connection] RETURNS [Status];  -- valid only after an Initiate* call using specified connection  Put: PROC [connection: Connection, block: Stream.Block, endRecord: BOOLEAN]    RETURNS [bytesTransferred: CARDINAL];  -- may transfer fewer bytes than block holds; if this is the case,  -- client should continue the operation after a wakeup  SetSST: PROC [connection: Connection, sst: Stream.SubSequenceType] RETURNS [Status];  -- if returns busyTryLater, client should retry the operation after a wakeup  END.LOG22-Mar-90 - JPM - Created.10-Apr-90 - JPM - Changed to implement new connection establishment protocol.21-Apr-93 - JPM - Made ConnectionRec opaque and added Get, GetSST, Put, and SetSST 7-May-93 - JPM - Added unilateral to InitiateDisconnection (to handle a case in which the other side isn't responding)