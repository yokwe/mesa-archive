-- Copyright (C) 1979, 1980, 1981, 1985  by Xerox Corporation. All rights reserved. -- File: RS232CFace.mesa-- LastEdited: 25-Jan-85 13:34:08   By: DEG       -- This DEFINITIONS module attempts to capture the lowest level interface-- to an RS-232-C controller which is still independent of the particular controller-- implementation, as well as the processor on which the controller resides.DIRECTORY  Environment USING [Byte],  RS232CEnvironment USING [    AutoRecognitionOutcome, CharLength, ClockSource, CompletionHandle,    Correspondent, EncodeData, FlowControl, IdleState, LineSpeed, LineType,    Parity, PhysicalRecord, PhysicalRecordHandle, StopBits, SyncChar, SyncCount];RS232CFace: DEFINITIONS =  BEGIN  -- Interface Procedures  On: PROCEDURE [lineNumber: CARDINAL] RETURNS [line: Handle];  GetNextLine: PROCEDURE [lineNumber: CARDINAL]    RETURNS [nextLineNumber: CARDINAL];  ResetLine: PROCEDURE [line: Handle, paramHandle: ParamHandle]    RETURNS [outcome: ParameterOutcome] = INLINE    BEGIN RETURN[line.resetLine[line, paramHandle]] END;  SetParameters: PROCEDURE [line: Handle, paramHandle: ParamHandle]    RETURNS [outcome: ParameterOutcome] = INLINE    BEGIN RETURN[line.setParameters[line, paramHandle]] END;  AutoRecognitionWait: PROCEDURE [line: Handle]    RETURNS [outcome: RS232CEnvironment.AutoRecognitionOutcome] = INLINE    BEGIN RETURN[line.autoRecognitionWait[line]] END;  Put: PROCEDURE [line: Handle, rec: RS232CEnvironment.PhysicalRecordHandle]    RETURNS [RS232CEnvironment.CompletionHandle] = INLINE    BEGIN RETURN[line.put[line, rec]] END;  Get: PROCEDURE [line: Handle, rec: RS232CEnvironment.PhysicalRecordHandle]    RETURNS [RS232CEnvironment.CompletionHandle] = INLINE    BEGIN RETURN[line.get[line, rec]] END;  TransferWait: PROCEDURE [    line: Handle, event: RS232CEnvironment.CompletionHandle]    RETURNS [byteCount: CARDINAL, status: TransferStatus] = INLINE    BEGIN [byteCount, status] ¬ line.transferWait[line, event] END;  SendBreak: PROCEDURE [line: Handle] = INLINE BEGIN line.sendBreak[line] END;  AbortInput: PROCEDURE [line: Handle] = INLINE    BEGIN line.abort[line, input] END;  AbortOutput: PROCEDURE [line: Handle] = INLINE    BEGIN line.abort[line, output] END;  GetStatus: PROCEDURE [line: Handle] RETURNS [stat: DeviceStatus] = INLINE    BEGIN RETURN[line.getStatus[line]] END;  StatusWait: PROCEDURE [line: Handle, stat: DeviceStatus]    RETURNS [newstat: DeviceStatus] = INLINE    BEGIN RETURN[line.statusWait[line, stat]] END;  AbortStatus: PROCEDURE [line: Handle] = INLINE    BEGIN line.abort[line, other] END;  TransmitNow: PROCEDURE [    line: Handle, event: RS232CEnvironment.CompletionHandle]    RETURNS [byteCount: CARDINAL, status: TransferStatus] = INLINE    BEGIN [byteCount, status] ¬ line.transmitNow[line, event] END;  Off: PROCEDURE [line: Handle] = INLINE BEGIN line.off[line] END;  -- Face Handle  Handle: TYPE = LONG POINTER TO Object;  Object: TYPE = RECORD [    resetLine: PROCEDURE [line: Handle, paramHandle: ParamHandle]      RETURNS [outcome: ParameterOutcome],    setParameters: PROCEDURE [line: Handle, paramHandle: ParamHandle]      RETURNS [outcome: ParameterOutcome],    autoRecognitionWait: PROCEDURE [line: Handle]      RETURNS [outcome: RS232CEnvironment.AutoRecognitionOutcome],    put: PROCEDURE [line: Handle, rec: RS232CEnvironment.PhysicalRecordHandle]      RETURNS [RS232CEnvironment.CompletionHandle],    get: PROCEDURE [line: Handle, rec: RS232CEnvironment.PhysicalRecordHandle]      RETURNS [RS232CEnvironment.CompletionHandle],    transferWait: PROCEDURE [      line: Handle, event: RS232CEnvironment.CompletionHandle]      RETURNS [byteCount: CARDINAL, status: TransferStatus],    sendBreak: PROCEDURE [line: Handle],    abort: PROCEDURE [line: Handle, type: AbortType],    getStatus: PROCEDURE [line: Handle] RETURNS [stat: DeviceStatus],    statusWait: PROCEDURE [line: Handle, stat: DeviceStatus]      RETURNS [newstat: DeviceStatus],    transmitNow: PROCEDURE [      line: Handle, event: RS232CEnvironment.CompletionHandle]      RETURNS [byteCount: CARDINAL, status: TransferStatus],    off: PROCEDURE [line: Handle]];  -- TYPEs  AbortType: TYPE = {input, output, other};  ParamHandle: TYPE = LONG POINTER TO ParameterRecord;  ParameterRecord: TYPE = RECORD [    charLength: RS232CEnvironment.CharLength,    clockSource: RS232CEnvironment.ClockSource,    correspondent: RS232CEnvironment.Correspondent,    dataTerminalReady: BOOLEAN,    echo: BOOLEAN,    encodeData: RS232CEnvironment.EncodeData,    flowControl: RS232CEnvironment.FlowControl,    frameTimeout: CARDINAL,    idleState: RS232CEnvironment.IdleState,    lineType: RS232CEnvironment.LineType,    lineSpeed: RS232CEnvironment.LineSpeed,    maxAsyncTimeout: CARDINAL,    parity: RS232CEnvironment.Parity,    requestToSend: BOOLEAN,    resetBreakDetected: BOOLEAN,    resetDataLost: BOOLEAN,    resetRingHeard: BOOLEAN,    stopBits: RS232CEnvironment.StopBits,    syncCount: RS232CEnvironment.SyncCount,    syncChar: RS232CEnvironment.SyncChar];  ParameterOutcome: TYPE = {success, unimplemented};  TransferStatus: TYPE = {    success, dataLost -- (caused by input buffer overrun -- , deviceError,    frameTimeout, checksumError, parityError, asynchFramingError    -- (i.e. stop bit(s) missing) -- , invalidChar, invalidFrame, aborted,    disaster};  DeviceStatus: TYPE = RECORD [    dataLost: BOOLEAN,    --latched: caused by arrival of data with no input buffer allocated    breakDetected: BOOLEAN,  -- latched    clearToSend, dataSetReady, carrierDetect: BOOLEAN,    ringHeard: BOOLEAN,  -- latched    ringIndicator: BOOLEAN,    deviceError: BOOLEAN];  -- set if fatal device problem occurs  END. -- RS232CFaceLOGTime: May 8, 1979  8:45 AM	By: Victor VYS     	Action: Created fileTime: May 30, 1980  2:39 PM	By: Victor VYS     	Action: Remove pre-Amargosa  log entries, and add lineNumber parameter to On and Off, to allow resource  allocation on a line-by-line basis.Time: August 4, 1980  12:58 PM	By: Victor VYS     	Action: Remove PROCEDUREs  SuspendInput, SuspendOutput, RestartInput, RestartOutput.  Change ParamHandle  to a LONG pointer.Time: January 20, 1981  12:37 PM	By: WXD      	Action: Added deviceError bit  to DeviceStatus.Time: 21-Jul-81 14:04:23	By: WXD      	Action: Changed to use handle rather than  line number in all procedures other than On.Time: 13-Aug-81 15:07:40	By: WXD      	Action: Added flow control and echoing for  872/873 useTime: 27-Sep-84 17:11:15	By: DEG     	Action: Added copyright notice and rebuild for 11.1 release.Time: 23-Jan-85  2:11:26	By: DEG     	Action: Added parameters to ParameterRecord to support multiport option and also arranged fields alphabetically.Time: 25-Jan-85 13:33:56	By: DEG     	Action: Added maxAsyncTimeout to ParameterRecord to support multiport option.