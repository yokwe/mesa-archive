--File = ParallelPortFace.mesa-- last edited by:  CharlieLevy   13-Nov-85 22:45:44-- last edited by:  CharlieLevy   23-Dec-85 20:11:40-- Copyright (C) 1985 by Xerox Corporation. All rights reserved.DIRECTORY  Environment USING [Block];ParallelPortFace: DEFINITIONS =  BEGIN    ParallelPortHeadDove: PROGRAM;  -- Constants      -- Type Definitions  CommandStatus: TYPE = {    ready, inProgress, rejected };    -- returned by all procs which return immediately    -- anything non-ready is bug or an error      BufferPtr: TYPE = LONG POINTER TO Environment.Block;  DeviceType: TYPE = {    input, output, none };      DeviceStatusRec: TYPE = RECORD [-- reflects current output device status    	lptPSOPortStatusRec: LONG POINTER,  --to Head's PSOPortStatusRec	portType: DeviceType _ none,	-- no device selected/no device at all	portWasReset: BOOLEAN _ FALSE,	statusIsUpToDate: BOOLEAN _ FALSE,	testResultIsUpToDate: BOOLEAN _ FALSE,	fault: BOOLEAN _ FALSE,  --fault line	select: BOOLEAN _ FALSE,  --means "on-line"	busy: BOOLEAN _ FALSE,  --busy line currently up	noPaper: BOOLEAN _ FALSE,  --printer out of paper, may not be implemented	portException: BOOLEAN _ FALSE,  	         portError: BOOLEAN _ FALSE,	-- PROM error         other1: BOOLEAN _ FALSE,        other2: BOOLEAN _ FALSE,         other3: BOOLEAN _ FALSE	];   	   Period: TYPE = [0..15);		-- hw clock counter  TransferMode: TYPE = {    getBlock, getByte, putBlock, putByte };      TransferStatus: TYPE = {    success, inProgress, incomplete, aborted };    TransferRec: TYPE = RECORD [    useAck: BOOLEAN _ FALSE,		-- device dependent, alternative is use BUSY for EOX    enforce20uSecRule: BOOLEAN _ FALSE,	-- device dependent,    clockCounter: Period,		-- device dependent, data-out clock     transferMode: TransferMode,         -- PutBlock, word boundaries only, or PutByte, etc for Gets    bufferPtr: BufferPtr,               -- for block transfers only    byteData: [0..255] ];               -- for byte transfers only          -- PROCEDURES  ---- ---- ----    -- client should check if device is ready  Initialize: PROCEDURE [notify: WORD]    RETURNS[commandStatus: CommandStatus];    -- returns immediately  ---- ---- ----  InitiateReset: PROCEDURE []    RETURNS[commandStatus: CommandStatus];    -- needs an up-notify to get results via GetStatus[]     UpdateStatus: PROCEDURE [];    -- needs an up-notify to get results via GetStatus[]    GetStatus: PROCEDURE []    RETURNS[deviceStatus: DeviceStatusRec];    -- returns immediately  ---- ---- ----  InitiateTransfer: PROCEDURE [transfer: TransferRec]      RETURNS[commandStatus: CommandStatus];     --needs an up-notify to get results via GetTransferStatus[]     GetTransferStatus: PROCEDURE []    RETURNS[transferStatus: TransferStatus];    -- returns immediately  ---- ---- ----   InitiateTest: PROCEDURE [diagnosticTestPattern: WORD]      RETURNS[commandStatus: CommandStatus];       -- needs an up-notify to get results via GetTestResult[]      GetTestResult: PROCEDURE []		-- test result    RETURNS[returnPattern: WORD];    -- returns immediately  ---- ---- ----     END.	-- ParallelPortFace.mesa  -- CharlieLevy		11-Oct-85 16:07:23	:created file-- JMA			15-Oct-85 20:05:10	:incorporated HW changes-- JMA			 3-Nov-85 16:49:30	:changes from Design review-- CL 		        11-Nov-85 12:16:22    : changed DeviceStatusRec-- CL 		13-Nov-85 22:45:19  : aadded testResultIsUpToDate-- CL 23-Dec-85 20:11:57: added ParallelPortHeadDove: PROGRAM to try pinning module