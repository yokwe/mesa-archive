-- File: NewRS232CFace.mesa - last edit:-- GRG/RSV	       18-Oct-91 16:55:59-- BKI                 11-Jan-88 13:37:16-- DEG                  4-Apr-84 22:35:14-- JoM                  7-Sep-84 12:39:23-- Copyright (C) 1984, 1988, 1991 by Xerox Corporation. All rights reserved.<< This DEFINITIONS module attempts to capture the lowest level interface to an RS-232-C controller while still being independent of the particular underlying hardware (controller and processor). >>DIRECTORY  Environment USING [Byte],  ResidentHeap USING [Alignment, HeapLocation],  RS232CEnvironment USING [    CharLength, Correspondent, FlowControl, LineSpeed, LineType, nullLineNumber,    Parity, StopBits, SyncChar, SyncCount];NewRS232CFace: DEFINITIONS =  BEGIN  << TYPE definitions. >>  ClientType: TYPE = MACHINE DEPENDENT {ascii, ebcdic, unknown};  Command: TYPE = MACHINE DEPENDENT {abortReceive, abortTransmit, breakOff, breakOn, getDeviceStatus, off, on};  CommandStatus: TYPE = MACHINE DEPENDENT {inProgress, completed, rejected};  ControlRecord: TYPE = MACHINE DEPENDENT RECORD [    dataTerminalReady(0:0..0): BOOLEAN,    requestToSend(0:1..1): BOOLEAN,    unused(0:2..15): [0..37777B] _ 0];  DeviceStatus: TYPE = MACHINE DEPENDENT RECORD [    -- latched status bits    breakDetected(0:0..0): BOOLEAN,    dataLost(0:1..1): BOOLEAN,    ringHeard(0:2..2): BOOLEAN,    -- unlatched status bits    carrierDetect(0:3..3): BOOLEAN,    clearToSend(0:4..4): BOOLEAN,    dataSetReady(0:5..5): BOOLEAN,    ringIndicator(0:6..6): BOOLEAN,    unused(0:7..15): [0..777B] _ 0];  Handle: TYPE[2];  LineNumber: TYPE = CARDINAL;  OperationPtr: TYPE = LONG POINTER TO Operation;  Operation: TYPE = MACHINE DEPENDENT RECORD [    dataBuffer(0:0..31): LONG POINTER,    bufferByteLength(2:0..15): CARDINAL];  ParameterHandle: TYPE = LONG POINTER TO ParameterRecord;  ParameterRecord: TYPE = MACHINE DEPENDENT RECORD [    charLength(0:8..10): RS232CEnvironment.CharLength,    clientType(2:1..7): ClientType,    correspondent(2:8..15): RS232CEnvironment.Correspondent,    echo(2:0..0): BOOLEAN,    flowControl(4:0..47): RS232CEnvironment.FlowControl,    frameTimeout(3): CARDINAL,    lineSpeed(0:3..7): RS232CEnvironment.LineSpeed,    lineType(0:0..2): RS232CEnvironment.LineType,    parity(0:11..13): RS232CEnvironment.Parity,    stopBits(0:14..15): RS232CEnvironment.StopBits,    syncChar(1:8..15): RS232CEnvironment.SyncChar,    syncCount(1:0..7): RS232CEnvironment.SyncCount];  ParameterStatus: TYPE = MACHINE DEPENDENT {inProgress, completed, unimplemented, rejected};  ResetRecord: TYPE = MACHINE DEPENDENT RECORD [    resetBreakDetected(0:0..0): BOOLEAN,    resetDataLost(0:1..1): BOOLEAN,    resetRingHeard(0:2..2): BOOLEAN,    unused(0:3..15): [0..17777B] _ 0];  RS232CClientType: TYPE = MACHINE DEPENDENT {noClient, normalClient, debuggerClient};  TransferStatus: TYPE = MACHINE DEPENDENT {    inProgress,    success,    aborted,    asyncFramingError,    checksumError,    dataLost,    deviceError,    disaster,    frameTimeout,    invalidCharacter,    invalidFrame,    parityError};  CompletedTransferStatus: TYPE = TransferStatus[success..LAST[TransferStatus]];  << Constants and global READONLY variables/constants. >>  numberOfLines: READONLY CARDINAL;  nilHandle: READONLY Handle;  nullLineNumber: LineNumber = RS232CEnvironment.nullLineNumber;  operationSize: READONLY CARDINAL;  operationAlignment: READONLY ResidentHeap.Alignment;  operationLocation: READONLY ResidentHeap.HeapLocation;  syn: ARRAY ClientType OF RS232CEnvironment.SyncChar = [026B << 16X >>, 062B << 32X >>, 000B << 00X >>];  << PROCEDURE definitions. >>  GetDeviceStatus: PROCEDURE [handle: Handle]    RETURNS [deviceStatus: DeviceStatus];  GetHandle: PROCEDURE [lineNumber: LineNumber, rs232cClient: RS232CClientType _ normalClient]    RETURNS [handle: Handle];  GetNextLine: PROCEDURE [lineNumber: LineNumber]    RETURNS [nextLineNumber: LineNumber];  Initialize: PROCEDURE [notify: WORD];  InitializeCleanup: PROCEDURE;  InitiateCommand: PROCEDURE [handle: Handle, command: Command] RETURNS [commandStatus: CommandStatus];  InitiateReceive: PROCEDURE [handle: Handle, operation: OperationPtr]    RETURNS [transferStatus: TransferStatus];  --Use PollResetStatusBits to poll the completion status  InitiateResetStatusBits: PROCEDURE [handle: Handle, resetRecord: ResetRecord]    RETURNS [commandStatus: CommandStatus];  --Use PollSetControlBits to poll the completion status  InitiateSetControlBits: PROCEDURE [handle: Handle, controlRecord: ControlRecord]    RETURNS [commandStatus: CommandStatus];  InitiateSetParameters: PROCEDURE [handle: Handle, parameters: ParameterHandle] RETURNS [parameterStatus: ParameterStatus];  InitiateTransmit: PROCEDURE [handle: Handle, operation: OperationPtr]    RETURNS [transferStatus: TransferStatus];  IsReviveProcNeeded: PROCEDURE [handle: Handle] RETURNS [needed: BOOLEAN];    PollCommand: PROCEDURE [handle: Handle] RETURNS [commandStatus: CommandStatus];  PollReceiveOrTransmit: PROCEDURE [handle: Handle, operation: OperationPtr]    RETURNS [bytesTransferred: CARDINAL, transferStatus: TransferStatus];  PollResetStatusBits: PROCEDURE [handle: Handle]    RETURNS [commandStatus: CommandStatus];    PollSetControlBits: PROCEDURE [handle: Handle]    RETURNS [commandStatus: CommandStatus];    PollSetParameters: PROCEDURE [handle: Handle] RETURNS [parameterStatus: ParameterStatus];  QueueIsBad: PROCEDURE [handle: Handle] RETURNS [badQueue: BOOLEAN];  ReleaseHandle: PROCEDURE [handle: Handle]    RETURNS [nilHandle: Handle];  ReviveInputQueue: PROCEDURE [handle: Handle]     RETURNS [revived: BOOLEAN ¬ FALSE, skipped: CARDINAL ¬ 0];  END...  LOG  created by Dennis E. DEG     :  4-Apr-84 22:35:14  7-Aug-84 13:44:59 - JoM     - Added Initialize and InitializeCleanup; made a few cosmetic changes  9-Aug-84 12:27:21 - JoM     - In GetHandle, allow parameters = NIL (for subdriver convenience); added CommandStatus, ParameterStatus et al.  23-Aug-84 12:58:11 - JoM     - Made all TYPEs MACHINE DEPENDENT; simplified Operation  29-Aug-84 11:52:26 - JoM     - Removed "parameters" from GetHandle parms (should use InitiateSetParameters after GetHandle)   7-Sep-84 12:39:23 - JoM     - Added "rejected" to ParameterStatus (if line is busy); rearranged RS232CClientType enumeration so 0 = noClient  11-Jan-88 13:37:16  BKI  Changed ResetStatusBits and SetControlBits to conform to the Initiate/Poll model.  18-Oct-91 16:56:21  GRG/RSV - Added IsReviveProcNeeded, QueueIsBad and ReviveInputQueue routines for SPAR 219 fix.