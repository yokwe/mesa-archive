-- ColorBlt.mesa  (last edited by WDK, 16-Aug-93 9:09:19)-- Copyright (C) Xerox Corporation 1987, 1988, 1993 by Xerox Corporation. All rights reserved.DIRECTORY  ESCAlpha USING [alpha],  Inline USING [BITAND],  Mopcodes USING [zESC];ColorBlt: DEFINITIONS  IMPORTS Inline =  BEGIN-- ESC operation code definitions (belong in MopcodesExtrasN)aCOLORBLT: ESCAlpha.alpha = 300B;aWRITEPIXEL: ESCAlpha.alpha = 301B;-- Color Blt TableCBptr, ColorBltTablePtr: TYPE = POINTER TO CBTable;CBTable, ColorBltTable: TYPE = MACHINE DEPENDENT RECORD [  dst: Address,  dstPpl: INTEGER,  src: Address,  srcDesc: SrcDesc,  width: CARDINAL,  height: CARDINAL,  flags: ColorBltFlags,  colorMapping: ColorMapping];-- Types used to make up a ColorBltTableAddress: TYPE = MACHINE DEPENDENT RECORD [  word: LONG POINTER,  pixel: CARDINAL];SrcDesc: TYPE = MACHINE DEPENDENT RECORD [  SELECT OVERLAID * FROM    pattern => [pattern: PatternParm],    srcPpl => [srcPpl: INTEGER],    ENDCASE];PatternParm: TYPE = MACHINE DEPENDENT RECORD [  -- used with Src to describe pattern brick  reserved: [0..7] ¬ 0,  unpacked: BOOLEAN ¬ FALSE, -- must be FALSE for bit source  yOffset: [0..15],  widthMinusOne: [0..15],  -- restricted to 0 for bit source  heightMinusOne: [0..15]];ColorBltFlags: TYPE = MACHINE DEPENDENT RECORD [  -- determines the ColorBlt function  direction: Direction ¬ forward,  srcType: PixelType ¬ bit,  dstType: PixelType ¬ bit,  pattern: BOOLEAN ¬ FALSE,  srcFunc: SrcFunc ¬ null,  dstFunc: DstFunc ¬ src,  reserved: [0..255] ¬ 0];Direction: TYPE = {forward, backward};SrcFunc: TYPE = {null, complement};DstFunc: TYPE = MACHINE DEPENDENT {src(0), srcIfDstLE1(1), srcIf0(2), srcIfDstNot0(3), srcIfNot0(4), srcIfDst0(5), pixelXor(6), srcXorDst(7)};-- pixelXor: src if dst=0, else dst if src=0, else 0ColorMapping: TYPE = ARRAY [0..1] OF Color;PixelType: TYPE = {bit, display};Color: TYPE = NATURAL;-- ColorBlt functionColorBlt: PROCEDURE [ptr: CBptr] = MACHINE CODE  {Mopcodes.zESC, aCOLORBLT};SoftwareColorBlt: PROCEDURE [ptr: CBptr];-- Write individual pixelWritePixel: PROCEDURE [addr: Address, color: Color, dstType: PixelType, dstFunc: DstFunc] = MACHINE CODE  {Mopcodes.zESC, aWRITEPIXEL};SoftwareWritePixel: PROCEDURE [addr: Address, color: Color, dstType: PixelType, dstFunc: DstFunc];-- Alignment of ColorBltTabletableAlignment: PRIVATE CARDINAL = 16;tableAlignmentMask: PRIVATE INTEGER = -tableAlignment; -- same as ~(tableAlignment - 1)CBTableSpace: TYPE = ARRAY [1..SIZE[CBTable] + tableAlignment) OF WORD;AlignedCBTable: PROCEDURE [ip: POINTER TO CBTableSpace] RETURNS [CBptr] = INLINE  {RETURN[Inline.BITAND[(ip + tableAlignment - 1), tableAlignmentMask]]};END. -- of ColorBltLOG15-Dec-87 -- JPM -- Created13-Jan-88 -- JPM -- Use new ESC code, don't try to substitute for BITBLT14-Jan-88 -- JPM -- Add (Software)WritePixel16-Aug-93 -- WDK -- Added Color, breaking dependency on ColorDisplayFace.