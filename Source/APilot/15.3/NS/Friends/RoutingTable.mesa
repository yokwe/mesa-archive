-- File: RoutingTable.mesa - last edit:-- SMA                 19-May-86 16:22:37-- AOF                 13-Aug-84  8:47:15-- Copyright (C) 1984, 1986 by Xerox Corporation. All rights reserved. DIRECTORY  Driver USING [Device],  NSBuffer USING [Buffer],  Router USING [infinity, RoutersFunction],  System USING [NetworkNumber];RoutingTable: DEFINITIONS =  BEGIN  --provides model for registering different routing tables  infinity: CARDINAL = Router.infinity;  NetworkContext: TYPE = LONG POINTER TO ContextObject;  ContextObject: TYPE = RECORD[    netNumber: System.NetworkNumber,    network: Driver.Device,    stats: LONG POINTER];  Register: PROC[h: Handle ¬ NIL];  --(un)register new object (NIL => default)  Handle: TYPE = LONG POINTER TO Object;  Object: TYPE = RECORD[    type: Router.RoutersFunction,  --what type of service provided    start, stop: PROC,  --start/stop the service after/before registering    startEnumeration: System.NetworkNumber,  --starts enumeration (by client)    endEnumeration: System.NetworkNumber,  --ends enumeration (by implementation)    enumerate: EnumerateProc,  --to enumerate current table    fillTable: FillTableProc,  --to make enumerations meaningful    getDelay: GetDelayProc,  --to find delay to specific network    transmit: TransmitProc,  --transmit this packet towards destination net    forward: ForwardProc,  --forward this packet towards destination net    findNetwork: FindNetworkProc,  --find immediate net towards destination    addNetwork: AddNetworkProc,  --add new network    removeNetwork: RemoveNetworkProc,  --remove old network    flushCache: FlushCacheProc,  --flush cache entry for 'net'    stateChanged: StateChangedProc];  --state of network changed  EnumerateProc: TYPE = PROC[    previous: System.NetworkNumber,  --from last time routine was called    delay: CARDINAL ¬ infinity]  --return only entries with this delay    RETURNS[net: System.NetworkNumber];  --next ordinal valued net  FillTableProc: TYPE = PROC[maxDelay: CARDINAL ¬ infinity];  GetDelayProc: TYPE = PROC[net: System.NetworkNumber] RETURNS [delay: CARDINAL];  TransmitProc: TYPE = PROC[NSBuffer.Buffer];  ForwardProc: TYPE = PROC[NSBuffer.Buffer];  FindNetworkProc: TYPE = PROC[net: System.NetworkNumber]    RETURNS[System.NetworkNumber];    AddNetworkProc: TYPE = PROC[NetworkContext];  RemoveNetworkProc: TYPE = PROC[NetworkContext];  FlushCacheProc: TYPE = PROC[net: System.NetworkNumber];  StateChangedProc: TYPE = PROC[NetworkContext];  END....LOGtime  by  action10-Aug-84 14:57:29  AOF  Post Klamath19-May-86 16:22:02  SMA  New encapsulation scheme. 