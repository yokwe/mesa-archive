-- Copyright (C) 1981, 1982, 1983, 1984, 1985, 1986, 1988, 1989  by Xerox Corporation. All rights reserved.--11-Apr-89 11:05:56 TxH   added DeleteMapUnitPartially, GetVMIntervalWithLockHandle, and InitializeDeleteMapUnitPartiallyInternal. (SS-FX: AR#6, AR#26)--22-Jan-89 16:04:15 TxH   added consecutive real stuffs **--18-Oct-88 13:32:06 RSV   Added TrackBufferMemoryImpl.--21-Sep-88 14:25:01 TxH   commented out InitializeFind.-- 8-Dec-86  9:59:57 RSV   Added GetMappedRunCount.-- 1-Sep-85 16:33:52 kek   added debugging routine CheckMap.--21-Aug-85 17:32:27 RSV--    Moved ZoneImpl out of ResMemMgrSpecialResident since ResidentHeap no longer --    depends on it.  Procedures moved split between ZoneMakeFreeNodes and --    ZoneUncommon code packs.  Moved all HeapPruning into ZoneUncommon.--    Renamed HeapZoneChecking to ZoneChecking.  Renamed--    HeapCreateDeleteAttributes to ZoneRecreate and moved ENTRY VECTOR for--    ZoneImpl out of it and into ZoneMakeFreeNodes.  Added MakeNodeInternal--    from ResidentHeapImpl to ResMemMgrSpecialResident code pack.  Created --    ResMemMgrSwappableFrames and moved ZoneImpl frame to it from --    ResMemMgrResidentFrames.  -- 5-Jun-85 10:33:42   remove VMDataImpl.KillEntry    --15-Nov-84 14:51:00   remove AgingProcess (commented out now)    --29-Aug-84 17:54:58   Add InitializePCMemory and PeeCeeCode PACK.--11-Jul-84 16:54:29   Add InitializeApproveReserved, InitializeCountReservedMemory, InitializeAddReservedInternal, InitializeSubtractReservedInternal, AddReservedMStore, CheckOutSwapUnitsInternal.  Remove AddReservedInternal, SubtractReserved.--6-Feb-84 20:35:2    Add IsSegmentEmptyInternal--7-Oct-83 15:46:09   Add VMDataImpl.KillEntry, move Traps EV.--19-Sep-83 18:04:38   Kill is new to VMDataImpl.--10-Aug-83 15:15:50   Many procs disappeared from FrameImpl.--21-Jul-83 10:19:33   FrameImpl and PilotNub changes.--8-Jul-83 16:38:51   PilotNub changes.--20-Jun-83 10:36:46   changes to init for VMDataImpl and VMDataMapImpl	--16-Jun-83 15:30:32   Split RelocateMapUnit SupplyBackingStore-- 	into separate pack --2-May-83 16:03:04   Name changes, add FindMapUnit.--25-Mar-83 17:32:00--    Move ZoneImpl.Create from HeapCreateDeleteAttributes to--    ResMemMgrSpecialResident.--9-Mar-83  9:27:59--    Added InitializeDeallocateCleanInSwapUnit; deleted MStoreImpl.Bug.--18-Feb-83 18:03:35--    Name changes. Added InitializeGetParamAvailablity, InitializeSwappedInStatus.--30-Nov-82 12:24:17--    Name changes. Procedures appearing. Added SetDefaultSwapUnitSize--17-Oct-82 20:02:07--    Created file from shards of MesaRuntimePack of 22-Jan-82--    and SwapperPack of 17-Nov-81. Added frame packs.--    HeapOps code pack moved here from KernelBasicsPack--    (merges old HeapAttributes, HeapZoneCreateDelete,--    and ZoneRecreating) and renamed HeapCreateDeleteAttributes.ResMemMgr: SEGMENT =BEGINResMemMgrResidentBooting: CODE PACK = {  -- Cleanup and booting code must go in ordinary memory. Must be first.  MStoreImpl [ENTRY VECTOR, RecoverMStore];  PilotNub [    ENTRY VECTOR, InitializeDeviceCleanup, InitializeAwaitDebuggerRequest] };ResMemMgrSpecialResident: CODE PACK =  -- Resident code not involved in booting may go  -- in special memory. Should be second.  BEGIN  FrameImpl [    ENTRY VECTOR, FrameFaultProcess, FrameSize,    MakeFsi];  -- thought to be cool but where else to put him?  MStoreImpl [    AdjustReservedRealMemory, Allocate, AwaitBelowThreshold,    CheckMap, Promise, SetCountHeldBack, SetFreeRealMemoryThreshold,    DonateDedicatedRealMemory];  -- this one should go in Initialization someday.  PilotNub [    BreakPoint, CallDebugger, CallDebuggerWithSwapData, CheckInterrupt,    CleanMapLog, EndReadingBreakData, GetOperand, InitializeBug,    InitializeFlushTrashFromStack, InitializeNoAllocBreak,    InitializeWorryCallDebugger, Interrupt, ReportFault,    SpecialResidentCodeHandle,  -- MUST BE IN A SpecialResident CODE PACK!    ConditionSatisfied];  ResidentHeapImpl [    ENTRY VECTOR, FreeNode, MakeNode, MakeNodeInternal, SplitNode];  ResidentMemoryImpl [    InitializeAllocate, InitializeAllocateMDS, InitializeFree, ENTRY VECTOR];  VMDataImpl [    ENTRY VECTOR,    InitializeAllocateReservedMStoreInternal,    InitializeCheckOutUnlessAlreadyCheckedOut,    InitializeClearReferencedBitsOfAvailableSwappablePages,    InitializeDeallocateCleanInSwapUnit,    Kill];  VMDataMapImpl [    ENTRY VECTOR, DeleteMapUnit, DeleteMapUnitPartially, GetVMIntervalWithLockHandle, FindMapUnit, GetMapUnitAttributes,    GetMappedRunCount, InitializeGetParamAvailablity,  -- used by CreateMapUnit, GetAttributes, and SupplyBackingStore.    InitializeCreateMapUnitInternal,    InitializeSwappedInStatus,  -- used by CreateMapUnit, GetAttributes, and SupplyBackingStore.    InitializeDeleteMapUnitInternal, InitializeDeleteMapUnitPartiallyInternal,  InitializeVerifyResidentAndUniformAccess,    CreateMapUnitEntry, CreateMapUnit];  VMDataUtilities [    ENTRY VECTOR, InitializeAbortIfUnavailable,    InitializeAdjustSwapUnitTablePointers,    InitializeGetMapUnitBounds, InitializeGetSwapUnitTablePointers,    InitializeMakeRoomInSwapUnitTable];  END;ResMemMgrResidentRunFast: CODE PACK =  -- This code is put in normal memory so it will run faster. Should be third.  BEGIN  MStoreImpl [    InitializeAddReservedInternal, AddReservedMStore,     InitializeAllocateIfFree, InitializeDeallocate,    InitializeSubtractReservedInternal, RelocateAdjustingFlags, RelocatePCMemory,    GetConsecutiveRealMemory, CheckOrSweapConsecutiveInterval,--**    FreeConsecutiveRealMemory, IsActiveConsecutiveReal,--**     GetFreeSpecialRealMemory, UpdateConsecutiveMap ];--**  VMDataImpl [    CheckInSwapUnits, CheckOutSwapUnits, CheckOutSwapUnitsInternal,    FindDirtyUnreferenced, InitializeCheckInAndChangeStatus,    InitializeFindUnrefdDirtyAndReclaimAndAge,    InitializeApproveReserved, InitializeCountReservedMemory];  VMDataUtilities [    InitializeCreateTransferProcID, --InitializeFind,--    InitializeGetTransferProc, InitializeProcessSwapUnits];  END;PilotNubSignalRelated: CODE PACK = {  -- This should be packed with the signaller.  PilotNub [CATCH CODE, ProcessUncaught, StartUnwindingProcess] };        -- The following code pack uses Pinning to ensure that although swappable, it-- will be resident when usedVMDataMapImplPinned: CODE PACK = {  VMDataMapImpl [    RelocateMapUnit, SupplyBackingStore]};-- The following code packs are swappable; The ResidentHeap--   implementation does not use any of them. ZoneMakeFreeNodes: CODE PACK = {  ZoneImpl [ENTRY VECTOR, FreeNode, FreeNodeInternal, SpecialFreeNode,    MakeNode] };ZoneUncommon: CODE PACK = {  ZoneImpl [AddSegment, Create, Split, SplitNode, ValidateZone, GetAttributes,    GetSegmentAttributes, RemoveSegment]};ZoneRecreate: CODE PACK = {  ZoneImpl [NodeSize,  -- Attributes related.    GetRootNode, Recreate, SetRootNode] };  -- Zone Recreating.ZoneChecking: CODE PACK = {  ZoneImpl [    CheckNode, CheckZone, IsSegmentEmpty, IsSegmentEmptyInternal,    IsZoneEmpty, SetChecking] };ResMemMgrInitialization: CODE PACK =  BEGIN  EarlyVMAllocImpl--ALL--;  FrameImpl [MAIN, InitializeFrame];  MStoreImpl [    MAIN, InitializeMStore, InitializePCMemory, UnusedRealMemory];  PilotNub [    MAIN, InitializeInterrupt, InitializePilotNub, Install,    MyBug, MyBugLongValue, MyBugValue,  -- "never called"    SetDebuggerFielder,    VisitDebugger];  -- "never called"  ResidentHeapImpl [MAIN, InitializeResidentHeap];  ResidentMemoryImpl [MAIN, InitializeResidentMemory];  TrackBufferMemoryImpl--ALL--;  VMDataImpl [MAIN, InitializeVMDataA, InitializeVMDataB, InitializeVMDataC];  VMDataMapImpl [    MAIN, InitializeVMDataMapImplA, InitializeVMDataMapImplB,     SetDefaultSwapUnitSize];  -- (if used much, put in a separate pack)  VMDataUtilities [    MAIN, InitializeVMDataUtilitiesA, InitializeVMDataUtilitiesB];  ZoneImpl [MAIN, InitializeZone];  END;  ResMemMgrPeeCeeCode: CODE PACK =  BEGIN  MStoreImpl [MStoreEmulatePC, IsPeeCee];  END;  END; --SEGMENT--ResMemMgrResidentFrames: FRAME PACK =  BEGIN  FrameImpl;  MStoreImpl;  PilotNub;  ResidentHeapImpl;  ResidentMemoryImpl;  VMDataImpl;  VMDataMapImpl;  VMDataUtilities;  END;ResMemMgrSwappableFrames: FRAME PACK =  BEGIN  ZoneImpl;  END;  ResMemMgrInitializationFrames: FRAME PACK =  BEGIN  EarlyVMAllocImpl;  TrackBufferMemoryImpl;  END;-- End of ResMemMgrPack.pack--