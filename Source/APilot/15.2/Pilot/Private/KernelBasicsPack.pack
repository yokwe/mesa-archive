-- Copyright (C) 1981, 1982, 1983, 1984, 1985  by Xerox Corporation. All rights reserved. -- For PilotKernel, this file specifies the final merging--   of CODE packs for all of PilotKernel--   excluding HighStore (i.e. excluding FileBasics, FileMgr, VMMgr).-- For UtilityPilotKernel, this file specifies the initial merging of this code;--    there is an additional final stage of merging performed--    by UtilityPilotKernelPack.pack.--20-Nov-87 10:34:20  KEK per RSV--    Merged Streams and UnimplementedStream into MostStreams--21-Aug-85 17:32:02  RSV--    Changed name of ResMemMgr packs HeapZoneChecking, HeapCreateDeleteAttributes,--    and HeapPruning to ZoneChecking, ZoneRecreate, and ZoneUncommon respectively.--    Added ResMemMgr.ZoneMakeFreeNodes. Changed HeapSetSizeAttributes name --    to ZonePackageUncommon.  --30-Nov-84 12:43:46  add PageFaultImplSwappable, VMImplSwappable, VMUtilitiesSwappable from VMDriverPack.pack--29-Aug-84 20:25:32  Add PeeCee PACKs.--28-Sep-83 10:53:20  Add MesaRuntime.ModulePerfAndLinkInfo. Updated doc to reflect unimportance of pack ordering.--10-Aug-83 17:16:41--    FrameImpl code packs disappeared, LoadState packs appeared. --21-Jul-83 10:41:17   Add Misc.UnimplementedStream--21-Jun-83 17:38:57   adding Pinning--13-Jun-83 10:47:30   Misc.VAMObjAlloc => Misc.ObjAllocCommon--16-May-83 18:55:58   Merge HeapCreateDeleteAttributes and--    HeapPruning into one code pack.-- 2-Mar-83 15:22:01   ProcessesHot disappears. ProcessesCold renamed to SwappableProcess.-- 4-Feb-83 12:09:26   Fixed documentation.--24-Dec-82 10:31:30--    Added IAm*Pilot packs.  Klamath twiddles.-- 5-Oct-82  9:34:01--    Swapper split into VMDriver and ResMemMgr.  Old HeapOps code merging moved into MiscPack. Final pack now named HeapCreateDeleteAttributes. Added KernelBasicsPremerge. MiscSpecialResident disappeared.--27-Feb-82 16:23:45--    Combine Heap Attributes, CreateDelete, and Recreate code packs--12-Oct-81 10:57:10  Re-Add Swapper.SimpleSpaceCreate--16-Nov-81 11:26:48--    Created file from PilotKernelPack.pack of 12-Oct-81 10:57:10--    Renamed segment--    ResidentAndLowStore to KernelBasicsInitialMerge, ResidentInitialization to--    KernelBasicsInitialization, DiscardAltoFileInterlock--    to Discard.  Former Resident and ResidentCool packs split into--    SpecialResidentEntryVectors, SpecialResident, ResidentBooting--    and ResidentRunFast.  Make compatible with new code pack names.-- (For earlier log entries, please see Mesa 8.0 archive version.)KernelBasicsPremerge: SEGMENT  MERGES  -- all cross-config code packs not in the HighStore segment.    MesaRuntime, Misc, ResMemMgr =BEGIN-- The order of the code packs in this segment is unimportant.-- IF YOU CREATE OR DELETE A CODE PACK HERE, you will have-- to also make the change to KernelBasicsInitialMerge (later in this file).SignalProcessing: CODE PACK =  BEGIN  MesaRuntime.Signals;  ResMemMgr.PilotNubSignalRelated;  END;  MostStreams: CODE PACK =  BEGIN  Misc.Streams;  Misc.UnimplementedStream;  END;-- List of other code packs in the configs here merged. (Alphabetical order, please.)MesaRuntime.BcdInfoOps;MesaRuntime.InLoadOutLoad;MesaRuntime.MesaRuntimeInitialization;MesaRuntime.MesaRuntimeResidentBooting;MesaRuntime.MesaRuntimeSpecialResident;MesaRuntime.ModulePerfAndLinkInfo;MesaRuntime.NewUnnewModule;MesaRuntime.SwappableProcess;MesaRuntime.SnapshotMisc;MesaRuntime.Traps;Misc.ByteBlt;Misc.MiscInitialization;Misc.OtherObjAlloc;Misc.ObjAllocCommon;ResMemMgr.VMDataMapImplPinned;ResMemMgr.ZoneMakeFreeNodes;ZonePackageUncommon: CODE PACK =  BEGIN  ResMemMgr.ZoneRecreate;  ResMemMgr.ZoneUncommon;  END;ResMemMgr.ZoneChecking;ResMemMgr.ResMemMgrInitialization;ResMemMgr.ResMemMgrResidentBooting;ResMemMgr.ResMemMgrResidentRunFast;ResMemMgr.ResMemMgrSpecialResident;PeeCeeCode: CODE PACK =  BEGIN  ResMemMgr.ResMemMgrPeeCeeCode;  END;END;  --KernelBasicsPremerge--KernelBasicsInitialMerge: SEGMENT  MERGES  -- all code packs not in the HighStore segment.    Control, DiskDrivers, KernelBasicsPremerge, UserTerminalDriver, VMDriver =BEGIN-- The order of the RESIDENT code packs in this segment is important.-- (The order of swappable code packs is not important.)KernelResidentBooting: CODE PACK =  -- MUST BE FIRST.  BEGIN  -- Cleanup and booting code must go in ordinary memory.  -- This pack must be first so that any shared multiword constants required  --   by this code end up in ordinary memory.  Control.ResidentBooting;  KernelBasicsPremerge.MesaRuntimeResidentBooting;  KernelBasicsPremerge.ResMemMgrResidentBooting;  END;KernelSpecialResident: CODE PACK =  -- SHOULD BE SECOND.  BEGIN  -- Resident code not involved in booting may go in special memory.  -- This pack merges all of the resident code of the modules in this  -- segment which is allowed to and is desired to go in special memory.  -- This pack is placed second so that any entry vectors required by  -- ResidentRunFast will end up in special memory  -- (since access to entry vectors consumes only a small amount  -- of total processor time).  -- The ORDER OF CODE PACKS IN THIS CODE PACK is "least processor  -- utilization first";  this ensures that the procedures which do the  -- most computing will end up in regular memory in case the display bank  -- won't hold the entire code pack. This permits "easy" detection  -- of performance problems related to executing out of the display bank.  KernelBasicsPremerge.MesaRuntimeSpecialResident;  UserTerminalDriver.SpecialResident;  Control.SpecialResident;  KernelBasicsPremerge.ResMemMgrSpecialResident;  VMDriver.SpecialResident;  DiskDrivers.SpecialResident;  END;KernelResidentRunFast: CODE PACK =  -- SHOULD BE THIRD.  BEGIN  -- This code is put in normal memory so it will run faster.  -- The entry vectors for these packs are normally put in SpecialResident.  DiskDrivers.ResidentRunFast;  KernelBasicsPremerge.ResMemMgrResidentRunFast;  VMDriver.ResidentRunFast;  UserTerminalDriver.ResidentRunFast;  END;-- Swappable code packs:-- The order of the swappable code packs in this segment is essentially unimportant.--   The only constraint is that the packager demands that the pack--   containing the entry vector for a module be in the first pack--   mentioned containing that module. This is easily accomplished--   by listing packs in the order in which the occur in a config.--   (If the Packager accepts the packaging, the order is fine.)-- SIMPLE RULE: Place new packs together with the other packs of the same--   config, in the same order that they occur in that config.--  (If there are cross-config code packs, this rule will be violated.)-- IF YOU CREATE OR DELETE A CODE PACK HERE, you may have to make a-- corresponding change to Pilot.bootmesa and UtilityPilot.bootmesa!-- NOTE: There is a copy of this list in UtilityPilotKernelPack.pack.-- IF YOU CHANGE ANYTHING IN THE FOLLOWING LIST, copy your changes into it too.-- BEGIN list of swappable packs:  -- Control config:  SwappableSystem;  UtilityPilotBootFileBackingStore;  -- DiskDrivers config:  SwappableDiskDrivers;  Floppy;  -- MesaRuntime config:  NewUnnewModule;  ModulePerfAndLinkInfo;  BcdInfoOps;  SwappableProcess;  InLoadOutLoad;  SignalProcessing;  -- (MesaRuntime and ResMemMgr)  SnapshotMisc;  Traps;  -- Misc config:  ByteBlt;  MostStreams;  ObjAllocCommon;  OtherObjAlloc;  -- ResMemMgr config:  ZoneMakeFreeNodes;  ZonePackageUncommon;  ZoneChecking;  VMDataMapImplPinned;  -- UserTerminal config:  UserTerminalDriverSwappable;  -- VMDriver config:  VMDriverSwappable;  VMDriverPinned;  Pinning;      PeeCeeCode: CODE PACK =    BEGIN    VMDriver.VMDriverPeeCeeCode;    KernelBasicsPremerge.PeeCeeCode;    END;-- END list of swappable packs.KernelBasicsInitialization: CODE PACK =  -- should be last.  BEGIN  DiskDrivers.Initialization;  Initialization;  KernelBasicsPremerge.MesaRuntimeInitialization;  KernelBasicsPremerge.MiscInitialization;  KernelBasicsPremerge.ResMemMgrInitialization;  UserTerminalDriver.Initialization;  VMDriver.Initialization;  END;IAmDiagnosticPilot: CODE PACK = {Control.IAmDiagnosticPilot};IAmPilot: CODE PACK = {Control.IAmPilot};IAmUtilityPilot: CODE PACK = {Control.IAmUtilityPilot};END;  --SEGMENT---- End of KernelBasicsPack.pack --