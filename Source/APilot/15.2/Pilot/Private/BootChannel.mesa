-- Copyright (C) 1984, 1986, 1987  by Xerox Corporation. All rights reserved. -- GermWorld>BootChannel.mesa  27-Apr-87 11:37:16 by CAJ      -- Defines a simple I/O channel for the Germ to read or write boot files from I/O devices.  Typically, BootChannels are daisy-chained together.-- At Germ inititialiation time, there is a dummy call to Create, specifying a null device type, which will cause the BootChannel's implementing module's main body code to be run.  Permanently-allocated page-sized storage should be allocated at this time using ResidentMemory.DIRECTORY  Boot USING [Location],  Environment USING [lastPageCount, PageCount, PageNumber],  PilotMP USING [Code];BootChannel: DEFINITIONS =  BEGIN  Operation: TYPE = {    read,  -- read    write,  -- write    rawRead};  -- read (single) page w/o label verify/descriptor intelligence  Create: PROCEDURE [    pLocation: LONG POINTER TO Boot.Location, operation: Operation,    buffer: LONG POINTER ¬ NIL]    RETURNS [result: Result, handle: Handle];  -- Creates a channel onto the boot file on the I/O device  --   specified by pLocation­.  -- Buffer is a one page buffer for use of channel implementor during Create.  -- Implementation may use ResidentHeap to allocate IOCBs, etc.    Handle: TYPE = PROCEDURE [    page: Environment.PageNumber, count: Environment.PageCount]    RETURNS [result: Result];  Transfer: PROCEDURE [    handle: Handle, page: Environment.PageNumber, count: Environment.PageCount]    RETURNS [Result] = INLINE {RETURN[handle[page, count]]};  << Initiates transfer of the next "count" pages starting at "page" to/from       the boot file.  The transfer may not have completed when Transfer returns.       The client may call transfer with count = transferWait to wait until all       outstanding transfers complete.     When all transfers have been completed, Transfer is called with       count = transferCleanup.  At this time, the BootChannel should perform       any necessary cleanup.   >>      transferWait: Environment.PageCount = Environment.lastPageCount;   transferCleanup: Environment.PageCount = 0;  Result: TYPE = RECORD [    SELECT type: * FROM    ok => [],    error => [code: PilotMP.Code],    tryOtherLocation => [pOtherLocation: POINTER TO Boot.Location],    ENDCASE];  << Returned by create and Transfer.     If Result = [error[...]], the channel has encountered an unrecoverable       error. The boot channel will have cleaned itself up       and returned its device to a clean, initial state.     If Result = [tryOtherLocation[...]], the channel has encountered       an unrecoverable error, but has a different location which it       suggests using; result.pOtherLocation­ is valid until the next call       to BootChannel. The boot channel will have cleaned itself up       and returned its device to a clean, initial state.   >>  END.LOG  (For previous log entries, please see Mesa 10.0 archive version.)Jan 17, 80 2:46 PM	RXG      SA4000 booting: added rawRead to Operation typeFeb 4, 80  8:51 AM	WDK       Added F64K allocator, cleanup call of Transfer.Feb 4, 80  8:51 AM	PXM       Drop hardware state 2-Nov-81 15:44:18	WDK       LONGify.  Deleted passed-on storage (use ResidentHeap instead).12-Apr-83 17:18:11	WDK        Added Result. 8-Jun-84  9:55:08	AWL         Added transferWait and transferCleanup, providing potential for multiple buffering within boot channel implementations.17-Oct-86 13:23:36	CAJ         Added transferPrimer.27-Apr-87 11:30:48	CAJ         Added buffer arg to Create; deleted transferPrimer.