-- Copyright (C) 1982, 1984  by Xerox Corporation. All rights reserved. -- (See Pilot 8.0 archives for earlier entries)-- 2-Aug-84 15:24:25--	Added SystemImpl.ClockFailure and SystemImpl.CATCH CODE-- 24-Dec-82 11:18:41--	Added IAm*Pilot packs.-- 21-Sep-82 16:57:10--	InitializeLocalTimeParameters now an inline. Added frame pack.Control: SEGMENT =  BEGINResidentBooting: CODE PACK = {   -- Cleanup and booting code must go in ordinary memory. Must be first.  SystemImpl [InitializeGMTCleanup, InitializeUIDCleanup, ENTRY VECTOR] };SpecialResident: CODE PACK = {  -- Resident code not involved in booting may go in special memory. Should be second.  SystemImpl [GetGreenwichMeanTime] };  -- resident since Star uses it often.SwappableSystem: CODE PACK = {  SystemImpl [    AdjustClock, ClockFailure, GetIntervalTime, GetLocalTimeParameters,    GetProcessorID, GetUniversalID, MicrosecondsToPulses, MultThenDiv, PowerOff,    PulsesToMicroseconds, ResetAutomaticPowerOn, SetAutomaticPowerOn,    SetClock, SetLocalTimeParameters, SetSavedLTP, TimeLastSet, CATCH CODE] };UtilityPilotBootFileBackingStore: CODE PACK = {  -- Should be resident in UtilityPilot, swappable in normal Pilot.  PilotControl [ENTRY VECTOR, BlackHole] };Initialization: CODE PACK = {  PilotControl [    MAIN, Bug, EnumerateStartList, MapSwappableSpaces,    MoveCodeToSpecialMemory, StartPilot, CATCH CODE];  SystemImpl [    MAIN, InitializeSystemA, InitializeSystemB] };IAmDiagnosticPilot: CODE PACK = {PilotControl[IAmDiagnosticPilot]};IAmPilot: CODE PACK = {PilotControl[IAmPilot]};IAmUtilityPilot: CODE PACK = {PilotControl[IAmUtilityPilot]};END; --SEGMENT--ControlResidentFrames: FRAME PACK = {  PilotControl;  -- resident as contains patch table, etc.  SystemImpl };  -- contains cleanup procedure-- End of ControlPack.pack---- Copyright (C) 1981, 1982, 1985  by Xerox Corporation. All rights reserved. -- 28-Aug-85 17:30:55  Moved GetDrive and GetDriveAttributes from SwappableDiskDrivers in DiskChannelSwappable to SpecialResident in DiskChannelResident.  Since on disk error path.-- 20-Jun-85 10:32:42   Added IsReady to SwappableDiskDrivers.-- 15-Apr-85 12:04:31  Added CreateInternal to SwappableDiskDrivers. -- 28-Sep-82 16:38:58--	SA4000Impl and DiskDriverShared replaced by all new DiskChannelResident, DiskChannelSwappable. Added frame packs. Deleted AltoFileInterlock.-- 20-Nov-81 12:34:02   Improved documentation.-- 18-Nov-81  9:30:04   Fixes to crossed edit merges.-- 17-Nov-81 15:18:30  merged crossed edits.-- 6-Nov-81 13:40:18   Added catch and entry vector items. Renamed ResidentCool to SpecialResident, Resident to ResidentRunFast.  Explicitly named procedures in SpecialResident.-- 9-Nov-81 15:31:06   removed PilotDiskImpl.NoteError.-- 30-Oct-81 18:45:02   Deleted SA800Impl.  Moved more of DiskChannelImpl and PilotDiskImpl to ResidentCool.   Made SwappableDiskDrivers contain swappable portions of DiskChannelImpl.  Created Floppy for FloppyChannelImpl.-- 22-Jul-81 15:12:48   Added InspectDiskShape to ResidentCool.--  3-Jun-81 13:14:07   Added AwaitPilotDiskError and NoteError to ResidentCool.-- 8-May-81  9:52:49   SA4000 => PilotDisk, add RegisterControllers to Initialization.-- Mar 20-81   10:20   MakeLP & MakeRP are moved from Resident to ResidentCool.-- Jan 31-81   11:33   Moved frame packs into PilotKernelFrames.pack.-- Jan 19-81   15:41   Discard AltoFileInterlock, move SA4000Impl.Start to initializationDiskDrivers: SEGMENT =BEGIN  -- The only resident driver code is that callable from the page fault path.  -- Note: This packaging assumes that the system volume is a PilotDisk.SpecialResident: CODE PACK = {  -- Resident code not involved in booting may go in special memory.  Should be first.  DiskChannelResident [    ENTRY VECTOR, AwaitPilotDiskError, Bug, ChangeDriveChangeCount,    ChangeDriveState, ChangeDriveType, ChangeScheduler, DefaultDrive,    DefaultSchedule, DefaultTransition, DoDirectIO, GetDrive, GetDriveAttributes,    Schedule] };ResidentRunFast: CODE PACK = {  -- This code is put in normal memory so it will run faster. Should be second.  DiskChannelResident [    CalculatePageAddress, ControllerProcess, DefaultGetNextRequest,    DoIO, FeedDisk, FillInOperationAndSubmit] };SwappableDiskDrivers: CODE PACK = {  DiskChannelSwappable [    ENTRY VECTOR, AwaitStateChange, Bug, Change, Create, CreateInternal,    GetDriveTag, GetNextDrive, GetPageAddress, GetPageNumber, InspectDiskShape,    IsReady, SetDriveState, SetDriveTag] };Floppy: CODE PACK = {  -- This code pack contains the ENTRY VECTOR for FloppyChannelImpl.  -- As such, it is marked as IN in Pilot.bootmesa so  -- that FloppyChannelImpl's MAIN will be able to get to it.  FloppyChannelImpl EXCEPT Initialization};Initialization: CODE PACK = {  DiskChannelResident [    MAIN, RegisterControllers, RegisterDrives, Start];  --(no CATCH CODE)  FloppyChannelImpl [MAIN, RegisterDrives, Start];  DiskChannelSwappable [MAIN, InitGlobals];  --(no CATCH CODE)  DiskDrivers.StartChainPlug[    -- Explicit qualification is necessary to avoid ambiguous references    -- when all of PilotKernel is packaged via a merged segment.    MAIN, Start, ENTRY VECTOR] };END; --SEGMENT--DiskDriversResidentFrames: FRAME PACK = {DiskChannelResident};DiskDriversSwappableFrames: FRAME PACK = {  DiskChannelSwappable;  FloppyChannelImpl };DiskDriversInitializationFrames: FRAME PACK = {  -- Explicit qualification is necessary to avoid ambiguous references  -- when all of PilotKernel is packaged via a merged segment.  DiskDrivers.StartChainPlug };  -- End of DiskDriversPack.pack---- Copyright (C) 1982, 1983, 1984, 1987  by Xerox Corporation. All rights reserved. -- 27-Sep-87 20:46:37	KEK	add BootFromFloppy-- 16-Jan-87 16:14:29	ET	MDS Relief: Added LoadStateImpl$EnterGlobalFrame, LoadStateImpl$RemoveGlobalFrame, and Traps$BytePointerTrap.-- 11-Dec-84 10:45:30   Pinned SnapshotImpl procs InLoadFromBootLocation, OutLoad, OutLoadInLoad. -- 12-Jan-84 13:43:14	  Split up MesaRuntimeSwappableFrames to MesaRuntimeSwappableTrapsFrames and MesaRuntimeSwappableFrames. --  20-Oct-83 10:20:18   New proc LoadStateImpl.OriginalModuleInternal.--  7-Oct-83 11:09:27--    Make InterruptErrorTrap, RescheduleErrorTrap, StackErrorTrap, Bug resident.-- 28-Sep-83  9:48:00--    Add LoadStateImpl[GrowCopyTable, OriginalModule]. Procs vanished.--    New code pack ModulePerfAndLinkInfo.-- 26-Sep-83 11:37:44     Add ModuleInfosOfBcd from LoadStateImpl-- 11-Sep-83  0:44:44      Loader changes--  6-Sep-83 22:07:45   LoadStatePack procs appearing and disappearing.-- 10-Aug-83 15:11:04   New module LoadStatePack.--  2-Aug-83 11:18:29   Added Processes.ValidProcess.-- 28-Jul-83 11:33:07   Traps: new procs, name changes.-- 25-Jul-83 11:48:55     Add SnapShotImpl. BootFromEthernet(One).-- 21-Jul-83 10:33:06     Procs. changed in Processes and Traps.-- 11-Apr-83 18:09:37   Added NarrowFaultTrap.--  1-Apr-83 13:35:02--   Added AbortPending to MesaRuntimeSpecialResident.--  2-Mar-83 15:23:51--     ProcessesHot merged into SpecialResident. ProcessesCold renamed to SwappableProcess.-- 24-Dec-82 11:16:31   Twiddles for Klamath.-- 24-Nov-82 17:37:49--     Added GetPVLocation, GetFileLocation, GetVolumeLocation, OutLoadInLoad to InLoadOutLoad Code Pack-- 21-Sep-82 14:10:48--     PilotNub and FrameImpl moving to ResMemMgr. Added frame pack. -- (For earlier entries, please see Pilot 8.0 archives.)MesaRuntime: SEGMENT =BEGINMesaRuntimeResidentBooting: CODE PACK = {  -- Cleanup and booting code must go in ordinary memory. Must be first.  SnapshotImpl [InitializeInLoadFromBootLoc, ENTRY VECTOR] };MesaRuntimeSpecialResident: CODE PACK = {  -- Resident code not involved in booting may go  -- in special memory. Should be second.  LoadStateImpl [    -- resident since Star uses it often. Also used for heap owner checking.    ENTRY VECTOR, GetCaller];  Processes [    ENTRY VECTOR,        -- Resident since they disable interrupts:    Abort, CancelAbort,         -- Resident since important to state vector management:    GetPriority, SetPriority,    -- Resident to allow predictable short-term timing control:    EnableAborts, MsecToTicks, Pause, SetTimeout, TicksToMsec,        -- Resident since used often by clients:    AbortPending, DisableAborts, DisableTimeout, GetCurrent, InitializeCondition,    InitializeMonitor, SecondsToTicks, ValidateProcess, ValidProcess, Yield];  SnapshotImpl [      -- resident so it is always available.    BootButton,        -- Resident since they disable interrupts:    InLoadFromBootLocation, OutLoad, OutLoadInLoad];  Traps [  -- resident because can't swap them in if interrupts screwed up.    ENTRY VECTOR, Bug, InterruptErrorTrap, RescheduleErrorTrap,    StackErrorTrap] };  -- resident because stack error can occur in sensitive places.NewUnnewModule: CODE PACK = {  LoadStateImpl [    -- Everything normally required to do a  NEW <module>:    -- NOTE: At present there is no suitable logical group of other code    -- that will fit in the unused space of this code pack.    -- When the perf tools run they pin the pack containing OriginalModule;    --   Thus OriginalModule and OriginalModuleInternal should be together.    EnterGlobalFrame, RemoveGlobalFrame,    FindModule, InsertNewModule, New, NewInternal, OriginalModule,    OriginalModuleInternal, RemoveOldModule, SelfDestruct, UnNew]};ModulePerfAndLinkInfo: CODE PACK = {  -- This is a separate code pack for the following reasons:  --   o There is no room in NewUnnewModule for the StuffFromLink group.  LoadStateImpl [    -- The procs below form a logical unit, and are all dependent    -- on StuffFromLink and/or ValGlobalFrame. They are presumed to be cold.    Code, EntryVector, GlobalFrame, StuffFromLink, ValGlobalFrame,    ValidateFrame, ValidateGlobalFrame, GetTableBase,    -- The following are in this pack because are presumed to be cold    -- and they fit:    Catch, IsBound, GetBuildTime, GrowCopyTable]};BcdInfoOps: CODE PACK = {  LoadStateImpl [    -- Stuff used by the Loader (only):    CATCH CODE,    EnterModuleInfos, ExpandTables, ExpandTablesInternal, GetBcdTime,    GetModuleInfo, GFFromBcdInfo, LockBcdInfo, MarkModuleResolved,    ModuleInfosOfBcd, NewLoadState, RemoveModuleInfos,    UnresolvedModuleInfosOfBcd, UnlockBcdInfo]}; SwappableProcess: CODE PACK = {  Processes [    AllocateNakedCondition, DeallocateNakedCondition, Detach, End, Fork, Join,    ProcessTrap]};  InLoadOutLoad: CODE PACK = {  SnapshotImpl [    BootFromEthernet, BootFromEthernetOne,BootFromFloppy, BootFromFile,    BootFromVolume, BootFromPhysicalVolume, GetBootFileSize, GetDevice,    GetFileLocation, GetPVLocation, GetVolumeLocation, InLoad]};  Signals: CODE PACK = {  Processes [CATCH CODE];  -- catch code is for aborting process waiting in Pause.  Signals EXCEPT MesaRuntimeInitialization };  SnapshotMisc: CODE PACK = {  SnapshotImpl [    InstallPhysicalVolumeBootFile, InstallVolumeBootFile,    MakeBootable, MakeUnbootable, CATCH CODE]};  Traps: CODE PACK = {  Traps [    BoundsFaultTrap, BumpPCOfTrapee, BytePointerTrap, CodeTrap,    ControlTrap, DivideCheckTrap,    HardwareErrorTrap, NarrowFaultCall, PointerFaultTrap,    Restart, Start,    StartMainBody, StartNonNilControlList, StringInit, UnboundProcedureTrap,    ZeroDivisorTrap, CATCH CODE] };  MesaRuntimeInitialization: CODE PACK = {  LoadStateImpl [InitializeLoadStateA, InitializeLoadStateB, MAIN];  Processes     [InitializeProcessesA, InitializeProcessesB, MAIN];  Signals       [InitializeSignals, MAIN];  SnapshotImpl  [Bug, InitializeSnapshot, MAIN];  Traps         [MAIN] };END; --SEGMENT--MesaRuntimeResidentFrames: FRAME PACK = {  SnapshotImpl};  -- resident since it does booting.MesaRuntimeSwappableFrames: FRAME PACK = {  LoadStateImpl;  Processes;  Signals };MesaRuntimeSwappableTrapsFrames: FRAME PACK = {  Traps };-- End of MesaRuntimePack.pack---- Copyright (C) 1981, 1982, 1983, 1985, 1988  by Xerox Corporation. All rights reserved. -- 29-Aug-88 12:02:27  RSV--    Added FindBackwardFreeRange and FindHoleBackwardInBitArray.-- 21-Aug-85 17:35:35  RSV--    Removed comment about ResidentHeaps since not in this pack file anymore-- 21-Jul-83 10:05:38--    Add new Default procs. to the pack. spec.-- 13-Jun-83 10:41:14--    Rearrange procedures in VAMObjAlloc and OtherObjAlloc. VAMObjAlloc =>--    ObjAllocCommon.-- 31-May-83 14:34:25--    MarkFree, MarkAllocated => MarkInterval  (of ObjAlloc)--    ValidateFree, ValidateAlloc => ValidateInterval (of OtherObjAlloc)--    Added MaskEdgesAndMarkMiddle in OtherObjAlloc-- 21-Mar-83 17:21:34--    new routine AllSameState in OtherObjAlloc-- 24-Dec-82 11:13:51--    Deleted heap stuff.  Twiddles for Klamath conversion.-- 21-Dec-82 12:07:14--    Added VAMObjAlloc and OtherObjAlloc code packs.--  5-Oct-82  9:28:42--    ResidentHeapImpl and ZoneImpl moving to ResMemMgr. HeapOps code pack moved here from KernelBasicsPack (merges old HeapAttributes and HeapZoneCreateDelete) and renamed HeapCreateDeleteAttributes. Added frame pack. Delted module UtilitiesImpl, code pack MiscSpecialResident.-- 11-Dec-81 11:08:51   Added IsZoneEmpty, IsSegmentEmpty, DefaultSendNow.-- 20-Nov-81 12:44:04   Improved documentation.-- 9-Nov-81 10:17:41   Added ResidentBooting, entry vector and catch items. Renamed ResidentCool to SpecialResident, Resident to ResidentRunFast, CreateDelete to HeapZoneCreateDelete, Recreating to ZoneRecreating, Nodes to HeapNodes, Attributes to HeapAttributes, Checking to HeapZoneChecking. Replaced EXCEPT with explicit lists.-- (For previous log entries, please see Mesa 8.0 archive version.)Misc: SEGMENT =BEGINByteBlt: CODE PACK =  BEGIN  -- This code pack contains the ENTRY VECTOR for StreamImpl.  -- As such, it is marked as IN in Pilot.bootmesa so  -- that StreamImpl's MAIN will be able to get to it.  StreamImpl [ByteBlt, ENTRY VECTOR];  END;UnimplementedStream: CODE PACK =  BEGIN  -- The procs here are those which raise ERROR InvalidOperation; i.e., those  -- which are not implemented by default.  StreamImpl [    DefaultSetSST, DefaultGetSST, DefaultSendAttention, DefaultWaitAttention,    DefaultDelete, DefaultGetTimeout, DefaultSetTimeout, CATCH CODE];  END;Streams: CODE PACK =  BEGIN  StreamImpl [    DefaultGetByte, DefaultGet, DefaultGetPosition, DefaultGetWord, DefaultPut,    DefaultPutByte, DefaultPutWord, DefaultSendNow, DefaultSetPosition];  END;ObjAllocCommon: CODE PACK =  BEGIN  ObjAllocImpl [    ENTRY VECTOR, Allocate, AllocateAt, ExpandAllocation, FindBackwardFreeRange,    FindFreeRange, FindHoleBackwardInBitArray, FindHoleInBitArray, Free,    MarkInterval, MaskEdgesAndMarkMiddle];  END;OtherObjAlloc: CODE PACK =  BEGIN  ObjAllocImpl [AllSameState, InitializePool, ValidateInterval];  END;MiscInitialization: CODE PACK =  BEGIN  ObjAllocImpl [MAIN];  StreamImpl [InitializeStream, MAIN];  END;  END; --SEGMENT--MiscFrames: FRAME PACK =  BEGIN  ObjAllocImpl;  StreamImpl  END;-- End of MiscPack.pack---- Copyright (C) 1982, 1983, 1984, 1986, 1987, 1989  by Xerox Corporation and Fuji Xerox Co., Ltd. All rights reserved. -- 16-May-89 11:51:20 TxH  Added IsOkToDeleteFile and AnyTrashedSpaceInternal to FileLockMisc. Moved InsertLockIntoRun to SpaceImplC from SpaceImplB and added other SpaceImplC's stuff.-- 11-Apr-89 11:58:38 TxH  Added DeleteLockInternal, DiscardLockAndVMData and AnyTrashedSpace. (SS-FX: AR#6, AR#26)-- 29-Mar-89 10:05:57 TXT  Move InsertLockIntoRun to SpaceImplB and add Bug in SpaceImplB--20-Nov-87 10:41:34  KEK per RSV  Moved GetMapUnitAttributes from SpaceMisc to SpaceUnmap (since called a lot by BWS and Services Unmap code!)--17-Jul-87  9:18:39  Added CATCH CODE for MapLogImpl.--16-Jan-87 16:11:22 ET Moved GetRuns from SpaceImplA to SpaceImplB. Added CATCH CODE in SpaceImplB.--18-Dec-86 15:57:20 Added CheckBucket to FileLockMisc.--17-Nov-86 17:19:36 Changed name of SpaceImpl to SpaceImplA.  Added SpaceImplB and FileLockImpl (including FileLockMisc code pack).-- 1-Feb-86 11:32:43 Added MapLogCleaning, CleanMapLog, InsertEntry. Also, SetUpDualLogAccounting.--6-Jan-84  9:50:59 Added DoCopyHelperProcess, SendMessageToHelper, SendNewMessageProcessed, WaitForMessageFromHelper, WaitForNewMessage--10-Jun-83 15:49:52 Split allocate stuff from Map--3-Jun-83 15:32:58 change MakeResident/MakeSwappable to SetSwappability--4-May-83 15:17:06 add IsAllocated	--2-May-83 11:40:17 add AllocateInterval--1-Apr-83 15:09:10--   Add RegisterAddressFaultFielder, RegisterFaultFielder, RegisterWriteProtectFaultFielder--1-Mar-83 22:25:24  Add MapAtInternal.--27-Feb-83 13:11:22  Add procedure SetCountThreshold to SpaceMisc.--24-Dec-82 10:52:55  Twiddles for Klamath.--25-Aug-82 12:26:41  Many mods for Klamath.-- For earlier entries, see the Pilot 8.0 archivesVMMgr: SEGMENT =BEGINSpaceMap: CODE PACK =  BEGIN  FileLockImpl [ENTRY VECTOR, GetLock];  SpaceImplA [    ENTRY VECTOR, AllocateDataWindow, FinishWithRuns,    Map, MapAt, MapAtInternal];  SpaceImplB [ENTRY VECTOR, AllocateStorage, GetRuns];  SpaceImplC [ENTRY VECTOR, InsertLockIntoRuns];  END;SpaceAllocation: CODE PACK =  BEGIN  SpaceAllocImpl [    ENTRY VECTOR, Allocate, AllocateInInterval, DoAllocate, FixUpRegion,    FixUpWithInterval, IsAllocated];  END;SpaceLargeRuns: CODE PACK =  BEGIN  SpaceImplA [BiggerRuns];  END;SpaceUnmap: CODE PACK =  BEGIN  FileLockImpl [DeleteLock, DeleteLockInternal, GetFileIDFromLock];  SpaceAllocImpl [Deallocate];  SpaceImplA [DeallocatePossibleDataWindow, GetMapUnitAttributes,     Unmap, UnmapAt];  SpaceImplB [DeallocateStorage];  END;SpaceCopying: CODE PACK =  BEGIN  SpaceImplA [CopyIn, CopyOut, DoCopy];  END;  SpaceCopyingHelper: CODE PACK =  BEGIN  SpaceImplA [DoCopyHelperProcess, SendMessageToHelper, SendNewMessageProcessed,  WaitForMessageFromHelper, WaitForNewMessage];  END;SpaceStatusOps: CODE PACK =  BEGIN  SpaceImplA [    Activate, ActivateProc, Deactivate, DeactivateProc, ForceOut,    Kill, SetAccess];  END;SpaceMisc: CODE PACK =  BEGIN  SpaceImplA [    DoneWithAddressFaultFielder, DoneWithFaultHandler,    DoneWithWriteProtectFaultFielder, GetSwapUnitAttributes,    Pointer, PointerFromPage, RegisterAddressFaultFielder,    RegisterFaultFielder, RegisterWriteProtectFaultFielder, SetCountThreshold];  END;  FileLockMisc: CODE PACK =  BEGIN  FileLockImpl [   AnyTrashedSpace, AnyTrashedSpaceInternal, CheckBucket, DiscardLockAndVMData,   GetLockHandleFromFileID, IsLocked, IsOkToDeleteFile];  END;SpaceCodeHacking: CODE PACK =  BEGIN  SpaceImplA [    MakeCatchCodeResident,   MakeCatchCodeSwappable,    MakeEntryVectorResident, MakeEntryVectorSwappable,    MakeGlobalFrameResident, MakeGlobalFrameSwappable,    MakeProcedureResident,   MakeProcedureSwappable,    SetSwappability];  END;SpaceSpecialCreates: CODE PACK =  BEGIN  SpaceAllocImpl [    AllocateAligned, AllocateForCode, FindAlignedSpace, AllocateInterval];  END;SpaceMapLogging: CODE PACK =  BEGIN  MapLogImpl [MakeDiskBackingStoreEntry, WriteLog1, ENTRY VECTOR, CATCH CODE];  END;  MapLogCleaning: CODE PACK =  BEGIN  -- these guys less used than PROCs in SpaceMapLogging.  MapLogImpl [CleanMapLog, InsertEntry, UpdateESV];  END;SpaceCatchCode: CODE PACK =  BEGIN  FileLockImpl [Bug, CATCH CODE];  SpaceAllocImpl [CATCH CODE];  SpaceImplA [Bug, BugV, CATCH CODE];  SpaceImplB [CATCH CODE];--  SpaceImplC [CATCH CODE];  END;SpaceProcesses: CODE PACK =  BEGIN  SpaceImplA [FaultFielder, FaultProcess, OperationHandler, QueueOperation];  END;VMMgrInitialization: CODE PACK =  BEGIN  FileLockImpl [FileLockInit, MAIN];  MapLogImpl [InitializeMapLog, MAIN, SetUpDualLogAccounting];  SpaceAllocImpl [InitializeSpaceAllocation, MAIN, SpaceForSpaceAllocation];  SpaceImplA      [InitializeVMMgr, MAIN];  SpaceImplB [MAIN];  SpaceImplC [MAIN];  END;END; --SEGMENT--VMMgrFrames: FRAME PACK =  BEGIN  FileLockImpl;  MapLogImpl;  SpaceAllocImpl;  SpaceImplA;  SpaceImplB;  SpaceImplC;  END;--End of VMMgrPack.pack---- Copyright (C) 1981, 1982, 1983, 1984, 1986, 1987, 1988  by Xerox Corporation. All rights reserved. -- NOTE: This pack file contains TWO SEGMENTs: FileMgr and Scavengers.-- For previous log entries, please see Mesa 8.0 archive version.--12-Jan-88  0:43:24  RSV/ET--     Split LVScavenger into LVErase, LVOtherScavengerOps, LVCompaction, LVScavengerCommon, and LVScavenger. Added MapMarkerPage, UnmapMarkerPage, FixETableFilePages to LVScavenger.--16-Dec-87 18:16:26  RSV--     PhysicalVolumeImpl is now PhysicalVolumeImplA and PhysicalVolumeImplB.--20-Nov-87 10:22:43  KEK per RSV--     Moved InterpretBackingStoreRun from FileOther to new pack--     HighLevelInterpretBackingStoreRun.-- 29-Jun-87  8:19:17--     Moved GetBootLocation from FileOther to FileMakeBootableOrUnbootable;--     added GetBootLocationInternal, GetDescriptor, GetVolumePage.-- 6-Feb-87 17:16:04--     Deleted FileImpl.MakeFileList.-- 3-Feb-87 22:10:59--     Added VerifierImplC procs.-- 2-Feb-87 15:09:11--     Added VolumeLockingImpl procs.--15-Oct-86 12:12:30--     Added GetDuplicatePVRootLocation, MarkDataLostPage, GetNextDataLostPage,--     and ClearDataLostPage all from PhysicalVolumeImpl.--28-Jul-86 11:23:14 --     Added WriteDuplicatePVRootPage to Othello and--     CompareDuplicateAndMainPVRootPages to PhysicalVolume.--     Deleted Scavenger things, added Verifier things.  Changed--     FileMakeBootableOrUnbootable code pack for labeless FileImpl.  Added--     DoBootfileOp to FileMakeBootableOrUnbootable.--12-Jun-86 10:51:35--     Deleted TempFileManipulation code pack.  Replaced GetNextFile with--     MakeFileList procedure. Deleted procedures CreateTempsList, DeleteTemps,--     and TempsListRemoveAll (all from FileImpl).  Added --     BugV and MakeBootableOrUnbootableInternal from FileImpl, GetLVHandle--     and GetLVID from VolTableImpl.  Deleted ReadLabel and HandleBSError from--     SimpleFileImpl--17-Jan-84 14:03:28--     Added ChangeName. ScavengerConversionImplA.CompleteVolumeConversion is --     always called by the LV scavenger --16-Jan-84 15:58:36--     ScavengerConversionImplA.ConvertVolume is always called by the LV scavenger--12-Jan-84 14:29:06 --     LVScavenger splits into LVScavenger and LVScavengerConversion.--     FileMgrFrames splits into FileMgrFrames and FileMgrScavengerFrames.--1-Nov-83  9:59:01--     FindDebuggerAndSystemLV splits into FindDebugger, FindSystemLV.--4-Sep-83 14:13:18 Shuffle things around to improve working set.--    Also add LastOpenedForWrite from module VolumeImpl.--28-Aug-83 13:51:53 Add new proc. GetType from module FileImpl.--22-Aug-83 11:23:46 Added ScavengerConversionImplA and B.--25-Jul-83 11:47:16 VolumeImpl.ChangeLabel => ChangeLabelString.--16-May-83 19:06:54 Refinements to may of the code packs.--24-Mar-83 14:00:02 Delete OpenInitialVolumes, IsCurrentVersion,--    both from VolumeImpl. Add new SEGMENT, Scavengers, to the Pack. It includes--    all of the procedures, etc., for both the Logical and Physical volume--    Scavengers.--16-Mar-83 19:37:03 Add GetNextFile From FileImpl.--16-Feb-83 10:46:34 Add PVScavenger Procedures.--16-Feb-83 10:46:34 Three fewer procedures in FileImpl.--30-Jan-83 13:57:20 Procedure name changes in VolumeImpl. --12-Jan-83 11:08:56 Procedure name changes in PhysicalVolumeImpl.--24-Dec-82 11:38:51 Twiddles for Klamath--20-Dec-82 15:34:54 Converted to Klamath--17-Oct-82 19:49:23 Deleted TransactionRelatedRunning pack. Procs--   disappearing. Added frame pack.--13-Feb-82 15:32:15 Added VolFileMapImpl.InvalidateCache--10-Feb-82 21:47:56 New buffer manager in VolFileMapImpl-- 2-Feb-82 10:23:25 New hole finding code for VolAllocMapImpl-- 6-Jan-82 10:57:06 Most or all catch code must be in cached--   descriptor code packs.   -- 3-Dec-81 11:18:07 Replaced ScavengeImpl with ScavengerImplA and--   ScavengerImplB; created new pack, ScavengerProcs, for ScavengerImplB; added--   PhysicalVolumeScavenger pack.--24-Nov-81  8:39:50 Added VolAllocMapImpl.AccessVAMPrivate.-- 6-Nov-81 13:40:18 Added SwappableEntryVectorsForResident, catch--   and entry vector items. Renamed FileMgrResident--   to ResidentButSwappableEntryVectors.FileMgr: SEGMENT =BEGINHighLevelGetBSData: CODE PACK =  BEGIN  FileImpl [ENTRY VECTOR, GetBackingStoreRun, GetBackingStoreRunWithCache];  END;HighLevelInterpretBackingStoreRun: CODE PACK =  BEGIN  FileImpl [InterpretBackingStoreRun];  END;FileCreate: CODE PACK =  BEGIN  FileImpl [Create, CreateFileID, CreateInternal, CreateWithContents];  END;FileMakePermanentOrTemporary: CODE PACK =  BEGIN  FileImpl [MakePermanent, MakePermanentOrTemporary, MakeTemporary];  END;FileDelete: CODE PACK =  BEGIN  FileImpl [Delete, DeleteInternal];  END;FileSetSize: CODE PACK =  BEGIN  --these logically belong with the SimpleFile operations of the same name,  -- since they are just facades into SimpleFile  FileImpl [SetSize, SetSizeWithContents];  END;FileAttributes: CODE PACK =  BEGIN  FileImpl [GetAttributes, GetFileAttributes, GetSize, GetType];  END;FileMakeBootableOrUnbootable: CODE PACK =  BEGIN  FileImpl [    DoBootfileOp, GetBootLocation, GetBootLocationInternal,    GetDescriptor, GetDiskAddress, GetVolumePage, MakeBootable,    MakeUnbootable, MakeUnbootableInternal];  END;FileOther: CODE PACK =  BEGIN  FileImpl [    GetRootFile, PutRootFile, SetDebuggerFiles];  END;VolumeCommon: CODE PACK =  --"frequent" operations on volumes  BEGIN  VolumeImpl [ENTRY VECTOR, GetAttributes, GetLabelString];  VolumeLockingImpl [ENTRY VECTOR];  END;VolumeRootDir: CODE PACK =  BEGIN  VolumeImpl [    FindRootFileEntry, GetNextRootFile, InsertRootFile, LookUpRootFile,    RemoveRootFile, RootDirectoryAccess];  END;VolumeConsistencyOps: CODE PACK =  BEGIN  ScavengerUtilitiesImpl [    ENTRY VECTOR, CheckLVConsistency, FreeLVMarkerPages, GatherLVMarkerPages,    GetRelativePointer, LVRootAndMarkersConsistent, ValidateLVMarkerPage,    ValidLVRootPage, ValidVolumeRootFiles];  VolumeImpl [IsConsistent, IsConsistentInternal];  END;VolumeOpen: CODE PACK =  BEGIN  VolumeImpl [Open, OpenInternal, OpenVolume];  VolumeLockingImpl [LockVolume, VolumeLockQuery, ReadLockVolume];  END; VolumeClose: CODE PACK =  BEGIN  VolumeImpl [Close];  VolumeLockingImpl [UnlockVolume];  END;VolumeMiscOps: CODE PACK =  BEGIN  VolumeImpl [    ChangeLabelString, ChangeVolumeType, GetLogicalVolumeBootFiles, GetNext,    GetStatus, GetType, LastOpenedForWrite];  VolumeLockingImpl [ForcefullyUnlock, ForcefullyUnlockInternal,    ForcefullyLockInternal];  END;PhysicalVolume: CODE PACK =  BEGIN   PhysicalVolumeImplA [    ENTRY VECTOR, AssertNotAPilotVolume, AssertPilotVolume, AwaitStateChange,    FinishWithNonPilotVolume, GetAttributes, GetDuplicatePVRootLocation,    GetHandle, GetHints, GetNext, GetNextDrive, GetSavedLocalTimeParameters,    InterpretHandle, IsReady, Offline, PhysicalVolumeOffLineInternal,    PhysicalVolumeOnLineInternal, SetSavedLocalTimeParameters, TempOnline];    PhysicalVolumeImplB [    ENTRY VECTOR, CompareDuplicateAndMainPVRootPages, DriveFromIndex,    GetDriveData, PhysicalRootPageCheck, PVIDFromDrive, ValidateDrive];  VolumeImpl [AllRightToTakePVAway, NewPVOnline];  --online, offline code  END;Othello: CODE PACK =  BEGIN  PhysicalVolumeImplA [    ChangeName, ClearDataLostPage, CreatePhysicalVolume,    GetContainingPhysicalVolume, GetNextBadPage, GetNextDataLostPage,    GetNextLogicalVolume, GetNextSubVolume, GetPhysicalVolumeBootFiles,    MarkDataLostPage, MarkPageBad, Scavenge, SetPhysicalVolumeBootFiles];  PhysicalVolumeImplB [WritePVRootPage, WriteDuplicatePVRootPage];  VolumeImpl [Create, Erase, IsBadPage, SetLogicalVolumeBootFiles];  END;ScavengerMiscUtilities: CODE PACK =  BEGIN  ScavengerUtilitiesImpl [    FreeLVBadPages, GatherLVBadPages, MovePages, ReadPages, ResidentMap,    TransferPageRun, WritePages];  END;  BugAndCatchCode: CODE PACK =  BEGIN  FileImpl [Bug, BugV, CATCH CODE];  VolumeImpl [Bug, BugWithValue, CATCH CODE];  PhysicalVolumeImplA [Bug, CATCH CODE];  PhysicalVolumeImplB [Bug, CATCH CODE];  ScavengerUtilitiesImpl [Bug, CATCH CODE];  VolumeLockingImpl [Bug, CATCH CODE];   END;Initialization: CODE PACK =  BEGIN  FileImpl [InitFile, MAIN];  PhysicalVolumeImplA [InitializeFileMgr, InitialOnline, MAIN];  PhysicalVolumeImplB [MAIN];  VolumeImpl [InitVolume, MAIN, FindDebugger, FindSystemLV];  ScavengerUtilitiesImpl [MAIN];  VolumeLockingImpl [MAIN];  END;	END; --FileMgr SEGMENT--Scavengers: SEGMENT =BEGINPhysicalVolumeScavenger: CODE PACK =  BEGIN  PhysicalVolumeScavengerImpl EXCEPT [MAIN];  END;    LVScavenger:  CODE PACK =  BEGIN  VerifierImplA [    ENTRY VECTOR, AddFileToFileList, CleanupVerifier,    InitializeVerifier, ModifyETFETable, FixETableFilePages, Verifier,     VerifierAccessProc, VerifierWithLock];  VerifierImplB [    ENTRY VECTOR, CreateBadDataPageList, CreateBadPageList, CrudeBucketValidation,    CrudeETFETValidation, CrudeFirstOverflowPageValidation,    CrudeHeaderValidation, CrudeOverflowPageValidation, ETableInit,    IsDataOnPageBad, IsPageBad, MarkItProcessed, MarkItUnProcessed,    MarkVAMPagesAsBusy, ReadPage, ReadParallelAndCorrect, ValidPage,    ValidateETable, VerifyAndCorrectLVRootAndMarkerPages, WritePage];  VerifierImplC [    ENTRY VECTOR, AddToErrorList, CleanOutETablesInBuckets, CompactOverflow,    DoIOForOneRun, FastVerify, GatherRunsAndDoIO, MapMarkerPage, UnmapMarkerPage,     MinimalReadAndCorrect, ProduceScavengerLog, ReadInPageRun,    ValidateAndRepairRootDirectory, WriteOutPageRun];  END;LVErase: CODE PACK =  BEGIN  VerifierImplB [EraseLV, WriteMultipleCopies];  END;LVOtherScavengerOps: CODE PACK =  BEGIN  VerifierImplB [ClearLog, GetLog, MakeFileList];  END;LVCompaction: CODE PACK =  BEGIN  VerifierImplA [CompactDisk];  VerifierImplC [CompactFilesInOverflow];  END;LVScavengerCommon: CODE PACK =  BEGIN  VerifierImplB [GetDiskIOInfo, ClearDataLostPageList, VamInit, VamFind];  END;  -- this code pack contains the stuff called by any two or more of the above LV  -- Verifier type code packs.ScavengerBugAndCatchCode: CODE PACK =  BEGIN  VerifierImplA [Bug, CATCH CODE];  VerifierImplB [Bug, CATCH CODE];  VerifierImplC [Bug, CATCH CODE];  END;ScavengerInitialization: CODE PACK =  BEGIN  PhysicalVolumeScavengerImpl [MAIN];  VerifierImplA [MAIN];  VerifierImplB [MAIN];  VerifierImplC [MAIN];  END;	END; --Scavengers SEGMENT--FileMgrFrames: FRAME PACK =  BEGIN  FileImpl;  VolumeImpl;  VolumeLockingImpl;  END;  FileMgrScavengerFrames: FRAME PACK =  BEGIN  PhysicalVolumeImplA;  PhysicalVolumeImplB;  PhysicalVolumeScavengerImpl;  VerifierImplA;  VerifierImplB;  VerifierImplC;  ScavengerUtilitiesImpl;  END;-- End of FileMgrPack.pack---- Copyright (C) 1982, 1983, 1984, 1986, 1987, 1988  by Xerox Corporation. All rights reserved. --21-Jun-88 18:40:31  RSV--   Added FinishWithSequence to FileCreateDelete.  Added BugV to--   FileBasicsBugAndCatchCode.--20-Nov-87 10:13:57  KEK per RSV--   Moved GetNextLV from VolTableSeldomUsed to VolTableCommon.  Moved FreeLV--   and CreateLVEntry from OtherAccess to VolTableCommon.  Moved GetNextPV and--   GetNextSV from VolTableSeldomUsed into new pack BackingStoreRunSupport.--   Moved PVAccess from OtherAccess to BackingStoreRunSupport.  Moved--   GetBSChannel from ManipulateVolumeData to BackingStoreRunSupport.-- 1-May-87 10:15:27  RSV--   Added ReplaceOldETableInternal to FileSetSize.--12-Mar-87 16:41:58  RSV--   Deleted RealUpdatePhysicalMarkerPages from BuildingVolumes.-- 6-Feb-87 16:10:22  RSV--   Deleted OldMakeFileList and OldMakeFileListInternal.--29-Jan-87 16:09:10  RSV--   Added OldMakeFileList and OldMakeFileListInternal.--17-Nov-86 17:37:42  RSV--   Added GetVolumeIndex.-- 5-Nov-86 16:38:56  RSV--   Added SetTemporaryInternal and GetPageGroupInternal from ETableImplB.--22-Oct-86  9:49:18  RSV--   Deleted UnmapImageLog from ETableImplA.--20-Oct-86 15:47:02  RSV--   Deleted MapLVRootPage, Verifier, MapImageLog, and UnmapLVRootPage from--   ETableImplA.-- 7-Oct-86 13:52:22  RSV--   Added CreateETableInternal from ETableImplB.-- 2-Sep-86 11:46:09  RSV--   Added ETableImplC stuff, took out MakeFileList from ETableImplA.--26-Aug-86 13:49:09  RSV --   Added MapDuplicatePVRootPage and UnmapDuplicatePVRootPage to--   BuildingVolumes.  Added ReadPVLabelAndData to SeldomUsedLabelOperations.--   Get rid of LabelTransferImpl operation and change them to reflect--   DataTransferImpl.  Also get rid of SimpleFileImpl.ReadLabel.  Added--   MakeFileListInternal to FileMapSeldomUsed.  Finally, added ClearLog--   to FileMapSeldomUsed.--12-Jun-86 12:53:22--   Deleted VolFileMapImpl and add ETableImplA and ETableImplB entries in packs.--   Added GetLVHandle and GetLVID from VolTableImpl to VolTableSeldomUsed pack.--   Delete ReadLabel (since labels will no longer exist) from SimpleFileImpl.--   Delete HandleBSError from SimpleFileImpl (was in FileBasicsBugAndCatchCode).--   Added ReadPVLabelAndData to LabelOperationsSeldomUsed.  Changed names of--   GetVFMContext and SetVFMContext to GetETableContext and SetETableContext--   respectively. --13-Nov-84 17:36:21   Added FindSVInternal to VolTableCommon.--17-Sep-84 15:54:45   Added RealVerifyLabelsAndData to CommonLabelOperations. --12-Jan-84 13:45:55   Split FileAttributes to FileAttributes and FileGetFileDescriptor-- 4-Jan-84 13:45:57	CATCH CODE now exists for VolFileMapImpl-- 4-Sep-83 15:00:35   Shuffle things around to improve working--   set. Also add HandleBSError from module SimpleFileImpl.--28-Jul-83 10:58:00--   Remove ReportErrorToDebugger from VolBackingStoreImpl's code.--21-Jul-83 10:29:33--   Remove ReportErrorToDebugger from LabelTransferImpl's code.--23-May-83 11:25:21   Refinements to many of the code packs.--23-May-83 11:25:21--   Move Begin and End OperationSequenceInternal to VolTableCommon.--16-May-83 19:00:57   Refinements to many of the code packs.--10-May-83 14:18:24--   Put ReadLabel from SimpleFileImpl in Mapping CODE PACK (no longer an--   embedded proc). --28-Mar-83 11:42:48--   DiskBackingStoreImpl.GetDiskChannel moves to a resident code pack. The--   SwappableDiskBackingStore CODE PACK goes away.-- 3-Mar-83 10:10:50--   New Procedure, Open, in VolFileMapImpl. VolTableImpl.GetStatus=>GetLVStatus--16-Feb-83 13:42:16--   New VolTableImpl procs: TableLockStatus, LockStatus, AcquireLock, Unlock, UnlockSVInternal, LockRemainingSVs, UnlockRemainingSVs, EndOperationSequence, EndOperationSequenceInternal, BeginOperationSequence, BeginOperationSequenceInternal, ForceConsistencyInternal, GetOperationSequenceCount, CreateLVEntry, FreeLV. Some VolTableImpl procs disappeared. Moved Mapping earlier as dictated by loc of EV. Moved Get, Lower, Find, GetBuffer, ReleaseBuffer, GetVFMContext to Mapping; RealReadLabelAndData to SeldomUsedLabelOperations. Split FileCreateDelete out of FileSetSize. Split frames into swappable and resident. Reordered code packs. Moved some frames to resident.--12-Jan-83 11:52:42	Name Changes in VolTableImpl.-- 4-Jan-83 20:27:36	Add RegisterPVMarkerID.--24-Dec-82 11:32:39	Twiddles.--20-Dec-82 17:51:35	Created File.FileBasics: SEGMENT =BEGINSpecialResident: CODE PACK =  -- Must be first.  BEGIN  DiskBackingStoreImpl [    ENTRY VECTOR, AwaitError, GetHandleRec, NewChannelRecord,    RegisterChannel, RegisterErrorProcess, ReleaseHandle,    RemoveErrorProcess, ReportErrorToDebugger, Restart, Transfer];  VolBackingStoreImpl [ENTRY VECTOR, Transfer];  VolTableImpl [ENTRY VECTOR, Bug, BugV, GetID];  END;ResidentRunFast: CODE PACK =  -- This code is put in normal memory so it will run faster. Should be second.  -- GetDiskChannel is included since it is called from VolBackingStore.Transfer  BEGIN  DiskBackingStoreImpl [    GetDiskChannel, GetDiskChannelInternal, TransferInternal];  END;VolTableCommon: CODE PACK =  BEGIN  VolTableImpl [    AcquireLock, BeginOperationSequenceInternal, ConstructSVDesc,    CreateLVEntry,  -- (usually called from CreateSVEntry)    DecrementLocksOutstanding, EndOperationSequenceInternal, FindLV, FindSV,    FindSVInternal, ForceConsistencyInternal,    FreeLV, -- (usually called from UnlockSVInternal)    GetETableContext, GetLVStatus,    GetNextLV, GetSVToken, GetVolumeIndex, LVAccess,    LockStatus, SetETableContext, SVFromLVID, TableLockStatus, Unlock];  END;FileMapOftenUsed: CODE PACK =  BEGIN  ETableImplA [    ENTRY VECTOR, AcquireLVBucketInfo, ConvertTypeToID,    FindBucketInfoByLVID, ReleaseLVBucketInfo];  ETableImplB [    ENTRY VECTOR, DoBucketIO, DoOverflowIO, FindETable, Hash,    SearchOverflow, WhereIsFilePageOnVolume];  VolAllocMapImpl [ENTRY VECTOR, RealClose];  END;BasicGetBSData: CODE PACK =  BEGIN  SimpleFileImpl [ENTRY VECTOR, GetBackingStoreData];  END;BackingStoreRunSupport: CODE PACK =  BEGIN  VolTableImpl [    GetNextPV, GetNextSV, PVAccess, GetBSChannel];       -- GetBSChannel is called by SpecialFile.InterpretBackingStoreRun  END;CommonDataOperations: CODE PACK =  BEGIN  DataTransferImpl [    ENTRY VECTOR, Perform, RealVerifyData, RealWriteData, SubmitRequest];  END;FileCreateDelete: CODE PACK =  BEGIN  VolAllocMapImpl [FreePageGroup, GetBackwardPool, GetPool, MapVamPage];  ETableImplA [FinishWithSequence, GrowOverflow];  ETableImplB [AddToOverflow, CreateETable, CreateETableInternal, DeleteETable,    DeleteETableInternal, MakeNewETable, ReplaceOldETable];  END;FileCreate: CODE PACK =  BEGIN  VolAllocMapImpl [    AllocPageGroup, BitState, SearchVamRange, SetPageGroupInternal];  END;FileMapSeldomUsed: CODE PACK =  BEGIN  ETableImplA [    AddBuckets, ClearLog, CopyPrimariesToCopies, DoHeaderIO, UnmapHeader,    MapETFETable, MapRuns, GetBSRuns, ETFileETableCopyOut, GetPages,    GetLongerSequence, MapBucketHandle, Logger, UnmapETFETables,    MapOverflowWindow, UnmapOverflowWindow, WriteBucketHeaders];  ETableImplB [    GetCurrentETFileSize, ReplacePage, ReplacePageInternal, SetBootable,    SetTemporary, SetTemporaryInternal];  ETableImplC [    ENTRY VECTOR, MakeFileList, MakeFileListInternal];  END;FileSetSize: CODE PACK =  BEGIN  -- separating this from FileCreateDelete makes it a page smaller.  ETableImplB [InsertPageGroup, ReplaceOldETableInternal, ShrinkLastPageGroup];  SimpleFileImpl [SetSize, SetSizeInternal, GrowFile, ShrinkFile];  VolAllocMapImpl [ExpandAllocation];  END;FileAttributes: CODE PACK =  BEGIN  ETableImplB [    GetFileAttributes, GetFileAttributesInternal, GetPageGroup,    GetPageGroupInternal, GetSize];  SimpleFileImpl [    GetAttributes, GetAttributesInternal, GetPageGroup,    GetSize, GetSizeInternal];  END;FileGetFileDescriptor: CODE PACK =  BEGIN  SimpleFileImpl [GetFileDescriptor];  END;OtherAccess: CODE PACK =  BEGIN  VolTableImpl [    CreateSVEntry, FindPV, -- (usually called from UnlockSVInternal)    SVAccess, TableAccess, UnlockSVInternal];  END;ManipulateVolumeData: CODE PACK =  BEGIN  VolTableImpl [    AssertRootPageReadability,    GetClientData, GetDiskChannel, GetDrive, SetClientData, SetClosed,    SetOpen, SetReadOnlyStatus];  END;VolTableSeldomUsed: CODE PACK =  BEGIN  VolTableImpl [    BeginOperationSequence, ChangeSubVolume, EndOperationSequence,    ForceConsistency, GetLVHandle, GetLVID,    GetOperationSequenceCount, LockEntireLV, LockRemainingSVs,    UnlockRemainingSVs];  END; VolumeOpen: CODE PACK =  BEGIN  ETableImplA [Open];  END;VolumeClose: CODE PACK =  BEGIN  ETableImplA [Close];  END;BuildingVolumes: CODE PACK =  BEGIN  ETableImplA [CreateFile, DeleteFile, MinPagesForETables];  SimpleFileImpl [RealUpdateLogicalMarkerPages];  VolAllocMapImpl [PagesForVam, RealSetPageGroup];  VolTableImpl [    MapDuplicatePVRootPage, MapMarkerPage, MapPVRootPage,     UnmapDuplicatePVRootPage, UnmapMarkerPage, UnmapPVRootPage];  END;OnlineOffline: CODE PACK =  BEGIN  VolTableImpl [    MapLVRootPage, RegisterPVMarkerID,    SetLVOffline, SetPVOffline, SetSVOffline, SetLVOnline,  SetPVOnline,    SetSVOnline];  END;SeldomUsedDataOperations: CODE PACK =  BEGIN  DataTransferImpl [    DiskStatusToDataStatus, Log, ReadPVData, RealReadData];  END;FileBasicsBugAndCatchCode: CODE PACK =  BEGIN  DataTransferImpl [CATCH CODE, Bug, BugV];  SimpleFileImpl [CATCH CODE, Bug];  VolAllocMapImpl [Bug, CATCH CODE];  ETableImplA [Bug, BugV, CATCH CODE];  ETableImplB [Bug, CATCH CODE];  ETableImplC [CATCH CODE];  VolTableImpl [CATCH CODE];  END;FileBasicsInitialization: CODE PACK =  BEGIN   DiskBackingStoreImpl [InitDiskBackingStore, MAIN];  DataTransferImpl [InitDataTransfer, MAIN];  SimpleFileImpl [InitSimpleFile, MAIN];  VolAllocMapImpl [InitVolAllocMap, MAIN];  VolBackingStoreImpl [InitVolBackingStore, MAIN];  ETableImplA [InitETable, MAIN];  ETableImplB [MAIN];  ETableImplC [MAIN];  VolTableImpl [InitializeFileBasics, MAIN];  END;END;FileBasicsResidentFrames: FRAME PACK =  BEGIN  DiskBackingStoreImpl;  VolBackingStoreImpl;  VolTableImpl;  END;FileBasicsSwappableFrames: FRAME PACK =  BEGIN  DataTransferImpl;  SimpleFileImpl;  VolAllocMapImpl;  ETableImplA;  ETableImplB;  ETableImplC;  END;-- End of FileBasicsPack.pack-- Copyright (C) 1982, 1983, 1984, 1985, 1989  by Xerox Corporation. All rights reserved. --12-Apr-89 12:15:46   changed VMImpl to VMImplA, and VMImplB. VMImplB includes consecutive real stuff: TxH --20-Jan-89 15:23:22   added consecutive real stuff: TxH **--26-Jun-85 16:16:17   Move Bug, Pin, Unpin, EV from Pinning to SpecialResident.-- 5-Dec-84 16:25:56   add VMDriverPinned, to make these procs pinnable instead of rez.--15-Nov-84 15:55:38   remove UnmapBatch (nested now), add RelocateEntry, UnmapEntry.--29-Aug-84 17:55:59   Add PeeCeeCode PACK--11-Jul-84 16:45:04   Removed ApproveReserved, CountResv'dTls--19-Sep-83 18:05:26   Kill no longer in VMImpl.--20-Jun-83 15:41:22   Added Pinning, GetSwapUnitsFor...--19-Apr-83 11:05:32   Added VMUtilities.Bug.--11-Apr-83 18:04:40   Added InstallTransferWatcher.--24-Feb-83 15:12:22   Added GetFlags.-- 5-Nov-82  9:14:44   Procedure disappeared.--28-Sep-82 17:31:31   Created file. Put in frame pack.VMDriver: SEGMENT =BEGINSpecialResident: CODE PACK = {  -- Resident code not involved in booting may go in special memory.  Should be first.  PageFaultImpl [    ENTRY VECTOR, AwaitAddressFault, AwaitWriteFault];  PinningImpl [ENTRY VECTOR];  PinningImpl [Bug, Pin, Unpin];  SwapBufferImpl [ENTRY VECTOR];  VMImplA [    ENTRY VECTOR,  Bug, CopyInSynchronous, CopyOutSynchronous,    DeactivateOrUnmapBatch, GetSwapUnitAttributes, HandleVMIOError,    SetBatchCount, SetSwappability, SetSwappabilitySynchronous, Wait,    CATCH CODE]; -- (HandleVMIOError catches ABORTED from debugger)  VMImplB [ENTRY VECTOR, CATCH CODE];  VMUtilities [    ENTRY VECTOR, AwaitNoOverlappingOperations, Bug,    EnqueueOperation, FinishQueuedOperation, GetFlags, GetNextQueuedOperation,    CATCH CODE]}; -- (ExecutorProcess catches ABORTED from debugger)ResidentRunFast: CODE PACK = {  -- This code is put in normal memory so it will run faster. Should be second.  PageFaultImpl [LookUpProcessType, RestartAndAwaitNext];  SwapBufferImpl [Allocate, Deallocate];  VMImplA [    EnterVM, ExitVM, IntervalRequiringInput, IntervalRequiringOutput,    IOTransfer, Map, PageFaultProcess, ProcessBatches, ReadUsingBuffer,    ResidentRunFastCodeHandle, SwapOutProcess, Unmap, UnmapEntry];  VMUtilities [    AllocateRealMemory, DeallocateMStoreIfClean, ReadDead] };VMDriverSwappable: CODE PACK = {  PageFaultImpl [    AbortFaultedProcess, ReportFaultedProcess,    RestartFaultedProcess,  -- (Make this resident if heavily used e.g. by a transaction system.)    CATCH CODE]; -- (ReportFaultedProcess catches ABORTED from debugger)  VMImplA [    Activate, AnotherPageFaultProcess, AnotherSwapOutProcess, CopyIn, CopyOut,    Deactivate, ForceOut, InstallTransferWatcher, GetSwapUnitsForCatchCode,    GetSwapUnitsForEntryVector, GetSwapUnitsForGlobalFrame,    GetSwapUnitsForProcedure, GetSwapUnitsInternal];  VMImplB [FreeConsecutiveVMResidentRealMemory];  VMUtilities [AnotherExecutorProcess, ExecutorProcess]};  VMDriverPinned: CODE PACK = { --is pinned when executing...--  PageFaultImpl [DeclareHelperProcess, DeleteHelperProcess, PageFaultProcessStarted];  VMImplA [    ActivateSynchronous, DeactivateSynchronous, ForceOutSynchronous, Relocate,    SetAccess, PartiallyUnmap];  VMImplB [GetConsecutiveVMResidentRealMemory]};    Pinning: CODE PACK =  -- temp - ought to be improved at some stage  BEGIN  PinningImpl [MakeUnusedProceduresSwappable];  PinningImpl [CreatePinHandle, DestroyPinHandle];  END;Initialization: CODE PACK = {  PageFaultImpl [MAIN, InitializePageFault];  PinningImpl [MAIN, InitializePinning];  SwapBufferImpl [MAIN, InitializeSwapBuffer];  VMImplA [MAIN, InitializeVMDriver];  VMImplB [MAIN, InitializeVMDriverB];  VMUtilities [MAIN, InitializeOperationQueue, InitializeVMUtilities]};  VMDriverPeeCeeCode: CODE PACK =  BEGIN  VMImplB [EmulatePC];  END;END; --SEGMENT--VMDriverResidentFrames: FRAME PACK = {  PageFaultImpl;  PinningImpl;  SwapBufferImpl;  VMImplA;  VMImplB;  VMUtilities};-- End of VMDriverPack.pack---- Copyright (C) 1981, 1982, 1983, 1984, 1985, 1986, 1988, 1989  by Xerox Corporation. All rights reserved.--11-Apr-89 11:05:56 TxH   added DeleteMapUnitPartially, GetVMIntervalWithLockHandle, and InitializeDeleteMapUnitPartiallyInternal. (SS-FX: AR#6, AR#26)--22-Jan-89 16:04:15 TxH   added consecutive real stuffs **--18-Oct-88 13:32:06 RSV   Added TrackBufferMemoryImpl.--21-Sep-88 14:25:01 TxH   commented out InitializeFind.-- 8-Dec-86  9:59:57 RSV   Added GetMappedRunCount.-- 1-Sep-85 16:33:52 kek   added debugging routine CheckMap.--21-Aug-85 17:32:27 RSV--    Moved ZoneImpl out of ResMemMgrSpecialResident since ResidentHeap no longer --    depends on it.  Procedures moved split between ZoneMakeFreeNodes and --    ZoneUncommon code packs.  Moved all HeapPruning into ZoneUncommon.--    Renamed HeapZoneChecking to ZoneChecking.  Renamed--    HeapCreateDeleteAttributes to ZoneRecreate and moved ENTRY VECTOR for--    ZoneImpl out of it and into ZoneMakeFreeNodes.  Added MakeNodeInternal--    from ResidentHeapImpl to ResMemMgrSpecialResident code pack.  Created --    ResMemMgrSwappableFrames and moved ZoneImpl frame to it from --    ResMemMgrResidentFrames.  -- 5-Jun-85 10:33:42   remove VMDataImpl.KillEntry    --15-Nov-84 14:51:00   remove AgingProcess (commented out now)    --29-Aug-84 17:54:58   Add InitializePCMemory and PeeCeeCode PACK.--11-Jul-84 16:54:29   Add InitializeApproveReserved, InitializeCountReservedMemory, InitializeAddReservedInternal, InitializeSubtractReservedInternal, AddReservedMStore, CheckOutSwapUnitsInternal.  Remove AddReservedInternal, SubtractReserved.--6-Feb-84 20:35:2    Add IsSegmentEmptyInternal--7-Oct-83 15:46:09   Add VMDataImpl.KillEntry, move Traps EV.--19-Sep-83 18:04:38   Kill is new to VMDataImpl.--10-Aug-83 15:15:50   Many procs disappeared from FrameImpl.--21-Jul-83 10:19:33   FrameImpl and PilotNub changes.--8-Jul-83 16:38:51   PilotNub changes.--20-Jun-83 10:36:46   changes to init for VMDataImpl and VMDataMapImpl	--16-Jun-83 15:30:32   Split RelocateMapUnit SupplyBackingStore-- 	into separate pack --2-May-83 16:03:04   Name changes, add FindMapUnit.--25-Mar-83 17:32:00--    Move ZoneImpl.Create from HeapCreateDeleteAttributes to--    ResMemMgrSpecialResident.--9-Mar-83  9:27:59--    Added InitializeDeallocateCleanInSwapUnit; deleted MStoreImpl.Bug.--18-Feb-83 18:03:35--    Name changes. Added InitializeGetParamAvailablity, InitializeSwappedInStatus.--30-Nov-82 12:24:17--    Name changes. Procedures appearing. Added SetDefaultSwapUnitSize--17-Oct-82 20:02:07--    Created file from shards of MesaRuntimePack of 22-Jan-82--    and SwapperPack of 17-Nov-81. Added frame packs.--    HeapOps code pack moved here from KernelBasicsPack--    (merges old HeapAttributes, HeapZoneCreateDelete,--    and ZoneRecreating) and renamed HeapCreateDeleteAttributes.ResMemMgr: SEGMENT =BEGINResMemMgrResidentBooting: CODE PACK = {  -- Cleanup and booting code must go in ordinary memory. Must be first.  MStoreImpl [ENTRY VECTOR, RecoverMStore];  PilotNub [    ENTRY VECTOR, InitializeDeviceCleanup, InitializeAwaitDebuggerRequest] };ResMemMgrSpecialResident: CODE PACK =  -- Resident code not involved in booting may go  -- in special memory. Should be second.  BEGIN  FrameImpl [    ENTRY VECTOR, FrameFaultProcess, FrameSize,    MakeFsi];  -- thought to be cool but where else to put him?  MStoreImpl [    AdjustReservedRealMemory, Allocate, AwaitBelowThreshold,    CheckMap, Promise, SetCountHeldBack, SetFreeRealMemoryThreshold,    DonateDedicatedRealMemory];  -- this one should go in Initialization someday.  PilotNub [    BreakPoint, CallDebugger, CallDebuggerWithSwapData, CheckInterrupt,    CleanMapLog, EndReadingBreakData, GetOperand, InitializeBug,    InitializeFlushTrashFromStack, InitializeNoAllocBreak,    InitializeWorryCallDebugger, Interrupt, ReportFault,    SpecialResidentCodeHandle,  -- MUST BE IN A SpecialResident CODE PACK!    ConditionSatisfied];  ResidentHeapImpl [    ENTRY VECTOR, FreeNode, MakeNode, MakeNodeInternal, SplitNode];  ResidentMemoryImpl [    InitializeAllocate, InitializeAllocateMDS, InitializeFree, ENTRY VECTOR];  VMDataImpl [    ENTRY VECTOR,    InitializeAllocateReservedMStoreInternal,    InitializeCheckOutUnlessAlreadyCheckedOut,    InitializeClearReferencedBitsOfAvailableSwappablePages,    InitializeDeallocateCleanInSwapUnit,    Kill];  VMDataMapImpl [    ENTRY VECTOR, DeleteMapUnit, DeleteMapUnitPartially, GetVMIntervalWithLockHandle, FindMapUnit, GetMapUnitAttributes,    GetMappedRunCount, InitializeGetParamAvailablity,  -- used by CreateMapUnit, GetAttributes, and SupplyBackingStore.    InitializeCreateMapUnitInternal,    InitializeSwappedInStatus,  -- used by CreateMapUnit, GetAttributes, and SupplyBackingStore.    InitializeDeleteMapUnitInternal, InitializeDeleteMapUnitPartiallyInternal,  InitializeVerifyResidentAndUniformAccess,    CreateMapUnitEntry, CreateMapUnit];  VMDataUtilities [    ENTRY VECTOR, InitializeAbortIfUnavailable,    InitializeAdjustSwapUnitTablePointers,    InitializeGetMapUnitBounds, InitializeGetSwapUnitTablePointers,    InitializeMakeRoomInSwapUnitTable];  END;ResMemMgrResidentRunFast: CODE PACK =  -- This code is put in normal memory so it will run faster. Should be third.  BEGIN  MStoreImpl [    InitializeAddReservedInternal, AddReservedMStore,     InitializeAllocateIfFree, InitializeDeallocate,    InitializeSubtractReservedInternal, RelocateAdjustingFlags, RelocatePCMemory,    GetConsecutiveRealMemory, CheckOrSweapConsecutiveInterval,--**    FreeConsecutiveRealMemory, IsActiveConsecutiveReal,--**     GetFreeSpecialRealMemory, UpdateConsecutiveMap ];--**  VMDataImpl [    CheckInSwapUnits, CheckOutSwapUnits, CheckOutSwapUnitsInternal,    FindDirtyUnreferenced, InitializeCheckInAndChangeStatus,    InitializeFindUnrefdDirtyAndReclaimAndAge,    InitializeApproveReserved, InitializeCountReservedMemory];  VMDataUtilities [    InitializeCreateTransferProcID, --InitializeFind,--    InitializeGetTransferProc, InitializeProcessSwapUnits];  END;PilotNubSignalRelated: CODE PACK = {  -- This should be packed with the signaller.  PilotNub [CATCH CODE, ProcessUncaught, StartUnwindingProcess] };        -- The following code pack uses Pinning to ensure that although swappable, it-- will be resident when usedVMDataMapImplPinned: CODE PACK = {  VMDataMapImpl [    RelocateMapUnit, SupplyBackingStore]};-- The following code packs are swappable; The ResidentHeap--   implementation does not use any of them. ZoneMakeFreeNodes: CODE PACK = {  ZoneImpl [ENTRY VECTOR, FreeNode, FreeNodeInternal, SpecialFreeNode,    MakeNode] };ZoneUncommon: CODE PACK = {  ZoneImpl [AddSegment, Create, Split, SplitNode, ValidateZone, GetAttributes,    GetSegmentAttributes, RemoveSegment]};ZoneRecreate: CODE PACK = {  ZoneImpl [NodeSize,  -- Attributes related.    GetRootNode, Recreate, SetRootNode] };  -- Zone Recreating.ZoneChecking: CODE PACK = {  ZoneImpl [    CheckNode, CheckZone, IsSegmentEmpty, IsSegmentEmptyInternal,    IsZoneEmpty, SetChecking] };ResMemMgrInitialization: CODE PACK =  BEGIN  EarlyVMAllocImpl--ALL--;  FrameImpl [MAIN, InitializeFrame];  MStoreImpl [    MAIN, InitializeMStore, InitializePCMemory, UnusedRealMemory];  PilotNub [    MAIN, InitializeInterrupt, InitializePilotNub, Install,    MyBug, MyBugLongValue, MyBugValue,  -- "never called"    SetDebuggerFielder,    VisitDebugger];  -- "never called"  ResidentHeapImpl [MAIN, InitializeResidentHeap];  ResidentMemoryImpl [MAIN, InitializeResidentMemory];  TrackBufferMemoryImpl--ALL--;  VMDataImpl [MAIN, InitializeVMDataA, InitializeVMDataB, InitializeVMDataC];  VMDataMapImpl [    MAIN, InitializeVMDataMapImplA, InitializeVMDataMapImplB,     SetDefaultSwapUnitSize];  -- (if used much, put in a separate pack)  VMDataUtilities [    MAIN, InitializeVMDataUtilitiesA, InitializeVMDataUtilitiesB];  ZoneImpl [MAIN, InitializeZone];  END;  ResMemMgrPeeCeeCode: CODE PACK =  BEGIN  MStoreImpl [MStoreEmulatePC, IsPeeCee];  END;  END; --SEGMENT--ResMemMgrResidentFrames: FRAME PACK =  BEGIN  FrameImpl;  MStoreImpl;  PilotNub;  ResidentHeapImpl;  ResidentMemoryImpl;  VMDataImpl;  VMDataMapImpl;  VMDataUtilities;  END;ResMemMgrSwappableFrames: FRAME PACK =  BEGIN  ZoneImpl;  END;  ResMemMgrInitializationFrames: FRAME PACK =  BEGIN  EarlyVMAllocImpl;  TrackBufferMemoryImpl;  END;-- End of ResMemMgrPack.pack---- Copyright (C) 1981, 1982  by Xerox Corporation. All rights reserved. --21-Sep-82 14:43:43   Added frame pack.--18-Nov-81 16:11:27   ?--9-Nov-81 14:38:25--	Added entry vector and catch items. Renamed--	ResidentCool to SpecialResident, Resident to--	ResidentRunFast. Replaced EXCEPT with explicit--	lists.--14-Aug-81 21:16:06  Add Beep, SetCursorPosition to residentCool.--Mar 23, 81  10:29--	GetBitBltTable, SetCursorPattern, SetMousePosition--	are moved from Resident to ResidentCool (new CODE PACK).--Jan 31, 1981  11:33  Moved frame packs into PilotKernelFrames.pack.UserTerminalDriver: SEGMENT =BEGINSpecialResident: CODE PACK = {  -- Resident code not involved in booting may go in special memory. Must be first.  UserTerminalImpl [    Beep, GetBitBltTable, SetCursorPattern, SetCursorPosition,    SetMousePosition, ENTRY VECTOR]};ResidentRunFast: CODE PACK = {  -- Resident code desired to run faster goes in ordinary memory. Must be second.  UserTerminalImpl [WaitForScanLine, WaitForVerticalRetrace]};UserTerminalDriverSwappable: CODE PACK = {  UserTerminalImpl [    BlinkDisplay, CreateScrollWindow, DeleteScrollWindow,    GetBackground, GetCursorPattern, GetState,    Scroll, SetBackground, SetBorder, SetState,    CATCH CODE]};Initialization: CODE PACK = {  UserTerminalDriver.StartChainPlug[    -- Explicit qualification is necessary to avoid ambiguous references    -- when all of PilotKernel is packaged via a merged segment.    MAIN, Start, ENTRY VECTOR];  UserTerminalImpl[MAIN, Start]};END; --SEGMENT--UserTerminalDriverResidentFrames: FRAME PACK = {  UserTerminalImpl};  -- resident to maintain real-time response.UserTerminalDriverInitializationFrames: FRAME PACK = {  -- Explicit qualification is necessary to avoid ambiguous references  -- when all of PilotKernel is packaged via a merged segment.  UserTerminalDriver.StartChainPlug};-- End of UserTerminalDriverPack.pack---- Copyright (C) 1981, 1982, 1983, 1984, 1985  by Xerox Corporation. All rights reserved. -- For PilotKernel, this file specifies the final merging--   of CODE packs for all of PilotKernel--   excluding HighStore (i.e. excluding FileBasics, FileMgr, VMMgr).-- For UtilityPilotKernel, this file specifies the initial merging of this code;--    there is an additional final stage of merging performed--    by UtilityPilotKernelPack.pack.--20-Nov-87 10:34:20  KEK per RSV--    Merged Streams and UnimplementedStream into MostStreams--21-Aug-85 17:32:02  RSV--    Changed name of ResMemMgr packs HeapZoneChecking, HeapCreateDeleteAttributes,--    and HeapPruning to ZoneChecking, ZoneRecreate, and ZoneUncommon respectively.--    Added ResMemMgr.ZoneMakeFreeNodes. Changed HeapSetSizeAttributes name --    to ZonePackageUncommon.  --30-Nov-84 12:43:46  add PageFaultImplSwappable, VMImplSwappable, VMUtilitiesSwappable from VMDriverPack.pack--29-Aug-84 20:25:32  Add PeeCee PACKs.--28-Sep-83 10:53:20  Add MesaRuntime.ModulePerfAndLinkInfo. Updated doc to reflect unimportance of pack ordering.--10-Aug-83 17:16:41--    FrameImpl code packs disappeared, LoadState packs appeared. --21-Jul-83 10:41:17   Add Misc.UnimplementedStream--21-Jun-83 17:38:57   adding Pinning--13-Jun-83 10:47:30   Misc.VAMObjAlloc => Misc.ObjAllocCommon--16-May-83 18:55:58   Merge HeapCreateDeleteAttributes and--    HeapPruning into one code pack.-- 2-Mar-83 15:22:01   ProcessesHot disappears. ProcessesCold renamed to SwappableProcess.-- 4-Feb-83 12:09:26   Fixed documentation.--24-Dec-82 10:31:30--    Added IAm*Pilot packs.  Klamath twiddles.-- 5-Oct-82  9:34:01--    Swapper split into VMDriver and ResMemMgr.  Old HeapOps code merging moved into MiscPack. Final pack now named HeapCreateDeleteAttributes. Added KernelBasicsPremerge. MiscSpecialResident disappeared.--27-Feb-82 16:23:45--    Combine Heap Attributes, CreateDelete, and Recreate code packs--12-Oct-81 10:57:10  Re-Add Swapper.SimpleSpaceCreate--16-Nov-81 11:26:48--    Created file from PilotKernelPack.pack of 12-Oct-81 10:57:10--    Renamed segment--    ResidentAndLowStore to KernelBasicsInitialMerge, ResidentInitialization to--    KernelBasicsInitialization, DiscardAltoFileInterlock--    to Discard.  Former Resident and ResidentCool packs split into--    SpecialResidentEntryVectors, SpecialResident, ResidentBooting--    and ResidentRunFast.  Make compatible with new code pack names.-- (For earlier log entries, please see Mesa 8.0 archive version.)KernelBasicsPremerge: SEGMENT  MERGES  -- all cross-config code packs not in the HighStore segment.    MesaRuntime, Misc, ResMemMgr =BEGIN-- The order of the code packs in this segment is unimportant.-- IF YOU CREATE OR DELETE A CODE PACK HERE, you will have-- to also make the change to KernelBasicsInitialMerge (later in this file).SignalProcessing: CODE PACK =  BEGIN  MesaRuntime.Signals;  ResMemMgr.PilotNubSignalRelated;  END;  MostStreams: CODE PACK =  BEGIN  Misc.Streams;  Misc.UnimplementedStream;  END;-- List of other code packs in the configs here merged. (Alphabetical order, please.)MesaRuntime.BcdInfoOps;MesaRuntime.InLoadOutLoad;MesaRuntime.MesaRuntimeInitialization;MesaRuntime.MesaRuntimeResidentBooting;MesaRuntime.MesaRuntimeSpecialResident;MesaRuntime.ModulePerfAndLinkInfo;MesaRuntime.NewUnnewModule;MesaRuntime.SwappableProcess;MesaRuntime.SnapshotMisc;MesaRuntime.Traps;Misc.ByteBlt;Misc.MiscInitialization;Misc.OtherObjAlloc;Misc.ObjAllocCommon;ResMemMgr.VMDataMapImplPinned;ResMemMgr.ZoneMakeFreeNodes;ZonePackageUncommon: CODE PACK =  BEGIN  ResMemMgr.ZoneRecreate;  ResMemMgr.ZoneUncommon;  END;ResMemMgr.ZoneChecking;ResMemMgr.ResMemMgrInitialization;ResMemMgr.ResMemMgrResidentBooting;ResMemMgr.ResMemMgrResidentRunFast;ResMemMgr.ResMemMgrSpecialResident;PeeCeeCode: CODE PACK =  BEGIN  ResMemMgr.ResMemMgrPeeCeeCode;  END;END;  --KernelBasicsPremerge--KernelBasicsInitialMerge: SEGMENT  MERGES  -- all code packs not in the HighStore segment.    Control, DiskDrivers, KernelBasicsPremerge, UserTerminalDriver, VMDriver =BEGIN-- The order of the RESIDENT code packs in this segment is important.-- (The order of swappable code packs is not important.)KernelResidentBooting: CODE PACK =  -- MUST BE FIRST.  BEGIN  -- Cleanup and booting code must go in ordinary memory.  -- This pack must be first so that any shared multiword constants required  --   by this code end up in ordinary memory.  Control.ResidentBooting;  KernelBasicsPremerge.MesaRuntimeResidentBooting;  KernelBasicsPremerge.ResMemMgrResidentBooting;  END;KernelSpecialResident: CODE PACK =  -- SHOULD BE SECOND.  BEGIN  -- Resident code not involved in booting may go in special memory.  -- This pack merges all of the resident code of the modules in this  -- segment which is allowed to and is desired to go in special memory.  -- This pack is placed second so that any entry vectors required by  -- ResidentRunFast will end up in special memory  -- (since access to entry vectors consumes only a small amount  -- of total processor time).  -- The ORDER OF CODE PACKS IN THIS CODE PACK is "least processor  -- utilization first";  this ensures that the procedures which do the  -- most computing will end up in regular memory in case the display bank  -- won't hold the entire code pack. This permits "easy" detection  -- of performance problems related to executing out of the display bank.  KernelBasicsPremerge.MesaRuntimeSpecialResident;  UserTerminalDriver.SpecialResident;  Control.SpecialResident;  KernelBasicsPremerge.ResMemMgrSpecialResident;  VMDriver.SpecialResident;  DiskDrivers.SpecialResident;  END;KernelResidentRunFast: CODE PACK =  -- SHOULD BE THIRD.  BEGIN  -- This code is put in normal memory so it will run faster.  -- The entry vectors for these packs are normally put in SpecialResident.  DiskDrivers.ResidentRunFast;  KernelBasicsPremerge.ResMemMgrResidentRunFast;  VMDriver.ResidentRunFast;  UserTerminalDriver.ResidentRunFast;  END;-- Swappable code packs:-- The order of the swappable code packs in this segment is essentially unimportant.--   The only constraint is that the packager demands that the pack--   containing the entry vector for a module be in the first pack--   mentioned containing that module. This is easily accomplished--   by listing packs in the order in which the occur in a config.--   (If the Packager accepts the packaging, the order is fine.)-- SIMPLE RULE: Place new packs together with the other packs of the same--   config, in the same order that they occur in that config.--  (If there are cross-config code packs, this rule will be violated.)-- IF YOU CREATE OR DELETE A CODE PACK HERE, you may have to make a-- corresponding change to Pilot.bootmesa and UtilityPilot.bootmesa!-- NOTE: There is a copy of this list in UtilityPilotKernelPack.pack.-- IF YOU CHANGE ANYTHING IN THE FOLLOWING LIST, copy your changes into it too.-- BEGIN list of swappable packs:  -- Control config:  SwappableSystem;  UtilityPilotBootFileBackingStore;  -- DiskDrivers config:  SwappableDiskDrivers;  Floppy;  -- MesaRuntime config:  NewUnnewModule;  ModulePerfAndLinkInfo;  BcdInfoOps;  SwappableProcess;  InLoadOutLoad;  SignalProcessing;  -- (MesaRuntime and ResMemMgr)  SnapshotMisc;  Traps;  -- Misc config:  ByteBlt;  MostStreams;  ObjAllocCommon;  OtherObjAlloc;  -- ResMemMgr config:  ZoneMakeFreeNodes;  ZonePackageUncommon;  ZoneChecking;  VMDataMapImplPinned;  -- UserTerminal config:  UserTerminalDriverSwappable;  -- VMDriver config:  VMDriverSwappable;  VMDriverPinned;  Pinning;      PeeCeeCode: CODE PACK =    BEGIN    VMDriver.VMDriverPeeCeeCode;    KernelBasicsPremerge.PeeCeeCode;    END;-- END list of swappable packs.KernelBasicsInitialization: CODE PACK =  -- should be last.  BEGIN  DiskDrivers.Initialization;  Initialization;  KernelBasicsPremerge.MesaRuntimeInitialization;  KernelBasicsPremerge.MiscInitialization;  KernelBasicsPremerge.ResMemMgrInitialization;  UserTerminalDriver.Initialization;  VMDriver.Initialization;  END;IAmDiagnosticPilot: CODE PACK = {Control.IAmDiagnosticPilot};IAmPilot: CODE PACK = {Control.IAmPilot};IAmUtilityPilot: CODE PACK = {Control.IAmUtilityPilot};END;  --SEGMENT---- End of KernelBasicsPack.pack ---- Copyright (C) 1982, 1983, 1984, 1986  by Xerox Corporation. All rights reserved. -- This file specifies the merging of CODE packs for the HighStore part of PilotKernel (FileBasics, FileMgr, VMMgr).--20-Nov-87 10:23:37  KEK per RSV--    Merge--    FileCreateDelete and FileDelete into FileCreationDeletion.  Add --    InterpretBackingStoreRun which merges HighLevelInterpretBackingStoreRun--    and BackingStoreRunSupport.  Merged VolumeCommon and CloseVolume--    (FileMgr.VolumeClose and FileBasics.VolumeClose into VolumeCommonAndClose).--    Merge VolTableSeldomUsed and OtherAccess into OtherVolTable (new pack).--  5-Nov-86 14:26:50  Added VMMgr.FileLockMisc.-- 14-Jul-86 17:30:09  Changed VamVfmCommon to FileMapOftenUsed.  Deleted FileMgr.TempFileManipulation and changed FileBasics.CommonLabelOperations to FileBasics.CommonDataOperations.--  1-Feb-86 11:34:17  Added VMMgr.MapLogCleaning.-- 12-Jan-84 13:58:24 Added FileBasics.FileGetFileDescriptor--  6-Jan-84  9:57:03  Added new SpaceCopyingHelper code pack--  1-Sep-83 11:31:51  Reconcile with changes to lower level packs.-- 10-Jun-83 15:31:42   More refinements to many of the packs, add a couple of new Code Packs.-- 16-May-83 18:41:46   Refinements to many of the packs, add a couple of new Code Packs.-- 28-Mar-83 11:47:24 Modify to reflect the fact that the scavengers are now in their own SEGMENT.--    The FileBasics.SwappableDiskBackingStore Code Pack disappeared.--  4-Feb-83 14:42:04 Minor changes. Fixed documentation.-- 24-Dec-82 11:32:19   Many changes for Klamath-- (See Pilot 8.0 archives for earlier entries)-- THE ORDER OF THE CODE PACKS BELOW IS CRUCIAL.-- DO NOT REARRANGE THE ORDER OF ANYTHING UNLESS YOU-- ARE SURE OF THE CONSEQUENCES.-- In general, new packs will probably be be placed-- later in the sequence, rather than earlier.HighStore: SEGMENT MERGES FileBasics, FileMgr, VMMgr =  BEGIN  HighStoreSpecialResident: CODE PACK =  -- Must be first.    BEGIN    FileBasics.SpecialResident    END;  HighStoreResidentRunFast: CODE PACK =  -- Must be second.    BEGIN    FileBasics.ResidentRunFast;    END;  FileBasics.VolTableCommon;  FileBasics.FileMapOftenUsed;  VMMgr.SpaceAllocation;  VMMgr.SpaceMap;  GetBSData: CODE PACK =    BEGIN    FileBasics.BasicGetBSData;    FileMgr.HighLevelGetBSData;    END;  FileBasics.CommonDataOperations;    FileCreationDeletion: CODE PACK =    BEGIN    FileBasics.FileCreateDelete;    FileMgr.FileDelete;    END;  FileCreation: CODE PACK =    BEGIN    FileBasics.FileCreate;    FileBasics.FileGetFileDescriptor;    FileMgr.FileCreate;    END;  FileBasics.FileMapSeldomUsed;  FileMgr.FileMakePermanentOrTemporary;    FileSetSize: CODE PACK =    BEGIN    FileBasics.FileSetSize;    FileMgr.FileSetSize;    END;    FileAttributes: CODE PACK =    BEGIN    FileBasics.FileAttributes;    FileMgr.FileAttributes;    END;    VolumeCommonAndClose: CODE PACK =    BEGIN    FileMgr.VolumeCommon;    FileMgr.VolumeClose;    FileBasics.VolumeClose;    END;      OpenVolume: CODE PACK =    BEGIN    FileMgr.VolumeOpen;    FileBasics.VolumeOpen;    END;  FileVolumeMisc: CODE PACK =    BEGIN    FileMgr.FileMakeBootableOrUnbootable;    FileMgr.FileOther;    FileMgr.VolumeRootDir;    FileMgr.VolumeMiscOps;    END;  FileMgr.VolumeConsistencyOps;  PVOnlineOffline: CODE PACK =    BEGIN    FileBasics.OnlineOffline;    FileBasics.SeldomUsedDataOperations;    FileMgr.PhysicalVolume;    END;    InterpretBackingStoreRun: CODE PACK =    BEGIN    FileBasics.BackingStoreRunSupport;    FileMgr.HighLevelInterpretBackingStoreRun;    END;    OtherVolTable: CODE PACK =    BEGIN    FileBasics.VolTableSeldomUsed;    FileBasics.OtherAccess;    END;  FileBasics.ManipulateVolumeData;  FileBasics.BuildingVolumes;    FileMgr.Othello;  FileMgr.ScavengerMiscUtilities;  VMMgr.SpaceUnmap;  VMMgr.SpaceCopying;  VMMgr.SpaceCopyingHelper;  VMMgr.SpaceMapLogging;  VMMgr.MapLogCleaning;  VMMgr.SpaceLargeRuns;  VMMgr.SpaceStatusOps;  VMMgr.SpaceMisc;  VMMgr.SpaceCodeHacking;  VMMgr.SpaceSpecialCreates;  VMMgr.SpaceProcesses;  VMMgr.FileLockMisc;    HighStoreBugAndCatchCode: CODE PACK =    BEGIN    FileBasics.FileBasicsBugAndCatchCode;    FileMgr.BugAndCatchCode;    VMMgr.SpaceCatchCode;    END;    HighStoreInitialization: CODE PACK =    BEGIN    FileBasics.FileBasicsInitialization;    FileMgr.Initialization;    VMMgr.VMMgrInitialization;    END;END; --HighStorePack.pack---- Copyright (C) 1982, 1983, 1984, 1985  by Xerox Corporation. All rights reserved. -- Frame packs for all of PilotKernel-- See Pilot 8.0 archives for earlier entries-- 21-Aug-85 17:37:23  RSV  Added ResMemMgrSwappable Frames-- 12-Jan-84 14:31:37  SwappableFrames => SwappableHotFrames and SwappableCoolFrames-- 23-Mar-83 10:17:09   FileBasicsFrames => FileBasicsResidentFrames and FileBasicsSwappableFrames-- 24-Dec-82 10:47:37 	Major rework for KlamathResidentFrames: FRAME PACK MERGES  -- merges all resident frame packs of PilotKernel.  ControlResidentFrames,  DiskDriversResidentFrames,  FileBasicsResidentFrames,  MesaRuntimeResidentFrames,  ResMemMgrResidentFrames,  UserTerminalDriverResidentFrames,  VMDriverResidentFrames;SwappableHotFrames: FRAME PACK MERGES  FileBasicsSwappableFrames,  FileMgrFrames,  MesaRuntimeSwappableFrames,  ResMemMgrSwappableFrames,  MiscFrames,  VMMgrFrames;  SwappableCoolFrames: FRAME PACK MERGES  DiskDriversSwappableFrames,  MesaRuntimeSwappableTrapsFrames,  FileMgrScavengerFrames;  InitializationFrames: FRAME PACK MERGES  -- all frames that are needed at initialization time  DiskDriversInitializationFrames,  ResMemMgrInitializationFrames,  UserTerminalDriverInitializationFrames;