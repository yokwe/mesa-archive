-- Copyright (C) 1986, 1987  by Xerox Corporation. All rights reserved. -- FloppyTape.mesa      9-Jul-87 11:26:43 by RSV  DIRECTORY  File USING [Type];    FloppyTape: DEFINITIONS =  BEGIN    -- Volume Types and Structures    Drive: TYPE = CARDINAL;   localDrive: Drive = 0;     VolumeHandle: TYPE [2];   nullVolumeHandle: READONLY VolumeHandle;    VolumeName: TYPE = LONG STRING;  -- File Types and Structures    FileID: TYPE [2];   FileHandle: TYPE = RECORD [volume: VolumeHandle, file: FileID];  nullFileID: READONLY FileID;    -- and more    ByteCount: TYPE = LONG CARDINAL;    ByteOffset: TYPE = LONG CARDINAL;    FeedBack: TYPE = {none, erasePass, retentionPass, formatPass, verifyPass};  FeedBackPtr: TYPE = LONG POINTER TO FeedBack;    maxBytesInName: CARDINAL = 100;    NotifyClientProc: TYPE = PROCEDURE [drive: Drive, which: {start, stop}];    SectorNumber: TYPE = LONG CARDINAL;  nullSectorNumber: SectorNumber = 0;    VMBuffer: TYPE = RECORD [count: ByteCount, vm: LONG POINTER];  ScatteredVMSeq: TYPE = RECORD [SEQUENCE length:CARDINAL OF VMBuffer];  ScatteredVM: TYPE = LONG POINTER TO ScatteredVMSeq;    -- Volume operations    ChangeVolume: PROCEDURE [    volume: VolumeHandle] RETURNS [newVolume: VolumeHandle];    CloseVolume: PROCEDURE [volume: VolumeHandle];  Erase: PROCEDURE [    drive: Drive ¬ localDrive, newName: VolumeName, clientWord: UNSPECIFIED ¬ 0,    securityErase: BOOLEAN ¬ FALSE];  Format: PROCEDURE [    drive: Drive ¬ localDrive, name: VolumeName, clientWord: UNSPECIFIED ¬ 0,    feedBack: FeedBackPtr ¬ NIL];  GetNextBadSector: PROCEDURE [    drive: Drive ¬ localDrive, sector: SectorNumber]    RETURNS [nextBadSector: SectorNumber];  GetVolumeAttributes: PROCEDURE [    volume: VolumeHandle, name: VolumeName]     RETURNS [    freeSpace, usedSpace: ByteCount, rootFile: FileID, clientWord: UNSPECIFIED,    drive: Drive, numberOfBadSectors: CARDINAL];  MarkSectorBad: PROCEDURE [drive: Drive ¬ localDrive, sector: SectorNumber];  OpenVolume: PROCEDURE [    drive: Drive ¬ localDrive, readOnly: BOOLEAN ¬ FALSE,    notifyClientOnRetention: NotifyClientProc] RETURNS [volume: VolumeHandle];  Retention: PROCEDURE [drive: Drive];  Scavenge: PROCEDURE [drive: Drive ¬ localDrive] RETURNS [okay: BOOLEAN];  -- File operations  AppendFile: PROCEDURE [    file: FileHandle, scatteredVM: ScatteredVM, updateEndOfFile: BOOLEAN];  ForceOut: PROCEDURE [volume: VolumeHandle];  GetFileAttributes: PROCEDURE [file: FileHandle]    RETURNS [size: ByteCount, type: File.Type];  GetNextFile: PROCEDURE [previousFile: FileHandle]     RETURNS [nextFile: FileHandle];  ReadFile: PROCEDURE [    file: FileHandle, first: ByteOffset, scatteredVM: ScatteredVM];  RewriteFile: PROCEDURE [    file: FileHandle, first: ByteOffset, scatteredVM: ScatteredVM];  SetRootFile: PROCEDURE [fileID: FileID, volumeHandle: VolumeHandle];  SetVerifyAfterWrite: PROCEDURE [    volumeHandle: VolumeHandle, verifyAfterWrite: BOOLEAN ¬ TRUE];  WriteFile: PROCEDURE [    volume: VolumeHandle, type: File.Type, scatteredVM: ScatteredVM]     RETURNS [fileId: FileID];      -- and more    FileHandleFromID: PROCEDURE [    fileId: FileID, volume: VolumeHandle] RETURNS [file: FileHandle];  -- Signals  ChangeTapeNow: SIGNAL [drive: Drive];  -- Errors    AlreadyFormatted: SIGNAL [labelString: VolumeName];    IOError: ERROR [    file: FileHandle, byte: ByteOffset, firstHole: SectorNumber,     howManyHoles: CARDINAL];    Error: ERROR [error: ErrorType];    ErrorType: TYPE = {    badTape, badSectors, fileNotFound, hardwareError, inUse, invalidByteOffset,     invalidVolumeHandle, insufficientSpace, needsScavenging, noSuchDrive,     notFormatted, notReady, volumeOpen, writeInhibited};          END.    LOG   12-Jan-87 16:55:14	ET      Created file.12-Jan-87 20:29:46	ET	Added volumeHandle to SetRootFile.16-Jan-87 18:58:04	RSV	Added SectorNumber, nullSector, GetNextBadSector, and MarkSectorBad. Changed invalidPageNumber to invalidByteOffset.26-Jan-87 23:01:41	ET	Added notifyClientOnRetention to OpenVolume.21-Feb-87 17:36:22      ET	Added SIGNAL MissingPages. 2-Mar-87 20:52:02	ET	Added feedback for Format procedure. defaulted clientWord to 0. 13-Mar-87  7:24:30	ET	Merged IOError and MissingPages into IOError. Added parameters to callBack notifyClientOnRetention of OpenVolume. Changed Retention parameter to drive instead of volumeHandle. Added drive return parameter to GetVolumeAttributes. Put feedback as a Format parameter vs a global variable. Added new procedure ChangeVolume.20-May-87 12:37:51	ET	Added numberOfBadSectors to GetVolumeAttributes.15-Jun-87 16:13:34      RSV     Added inUse ErrorType.  Added writeTapeWithZeros parameter to Erase.24-Jun-87 17:19:04      RSV     writeTapeWithZeros ¬ securityErase in Erase procedure. 9-Jul-87 11:26:43      RSV     Added ChangeTapeNow Signal and SetVerifyAfterWrite Procedure.