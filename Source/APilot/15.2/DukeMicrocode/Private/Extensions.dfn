{File name: Extensions.dfnDefinitions for initialization, escape code configuration, and bank switchingCreated: July 16, 1986 by JPMLast Revised:December 5, 1990 -- JPM -- merge in changes for optional SmallTalk supportSeptember 15, 1989 -- JPM -- redo bank assignments allowing alternate banks for some codesJuly 13, 1988 -- TXM -- add addrBLTsIntRet and addrBLTsFltRet 9-Mar-88 15:36:05 -- JT -- remove incorrect reserve statementOctober 15, 1987 -- JPM -- take codes F0 - FF out of bank 1 (so that IBEmpty trap won't cause bank switch)October 8, 1987 -- JPM -- change addressesAugust 18, 1987 -- JPM -- change address of addrBank1ESCx, put unassigned codes into bank 1November 24, 1986 -- JPM -- remove FPTEnabled (correct value in SingleBank.dfn/DualBank.dfn)August 4, 1986 -- JPM -- add BandBLT linkage addressesJuly 29, 1986 -- JPM -- add addrLinkage and FPTEnabled; reserve kernel space}{ 	Copyright (C) 1986, 1987, 1988, 1989, 1990 by Xerox Corporation.  All rights reserved.}{	Reserve[0F6F, 0FFF];	}	{Kernel}{Bank constants}Set[bank0,		0],Set[bank1,		0C];Set[bank2,		0A];Set[bank3,		09];{Hard-wired addresses in bank 0 -- always needed}Set[addrDISPNIonly,	0DA3],Set[addrESCc,		0BEF],Set[addrESCHi,		0C00],Set[addrRefillInt,	0B1E],Set[addrSaveRegs,	0CB6];Set[addrBLTsIntRet,	02CC];Set[addrBLTsFltRet,	02CD];Set[addrReturnFromRum,	0900];Set[addrLinkage,	0004];{Hard-wired addresses for conditional BandBLT code}SetLabel[LSEPReturn,	03A8],Set[addrTrapzReturn,	Or[03A8{LSEPReturn}, 1{Type.LSEP}]],Set[addrBitBLTReturn,	Or[03A8{LSEPReturn}, 3{Or[Type.LSEP,2]}]];SetLabel[HowBigStack,	0030],Set[addrBandBLTNormEntry, Or[0030{HowBigStack}, 0B{hbs.C}]];{Hard-wired addresses in other banks if present}Set[addrBankESCx,	0000];Set[addrBankESCHi,	0010];{Hard-wired addresses in bank 1 if present}Set[addrBandBLTIntEntry, 0009];Set[addrBandBLTNormalEntry, 000A];{Hard-wired addresses in bank 3 if present}Set[addrSmallTalkEntry,	0900];{Macros for cross-bank jumps}MacroDef[GOTOBANK,GOTOABS[addr#1]];MacroDef[DISPBANK,GOTOABS[addr#1]];MacroDef[GOTOBANK3,GOTOABS[addr#1]];MacroDef[GOTOBANK2,GOTOABS[addr#1]];MacroDef[GOTOBANK1,GOTOABS[addr#1]];MacroDef[GOTOBANK0,GOTOABS[addr#1]];{Escape code configuration: 0 = implemented in bank 0 (see Misc.mc for specifics) 1 = implemented in bank 1 when present (see Bank1Misc.mc for specifics) 2 = implemented in bank 2 when present (see Bank2Misc.mc for specifics)}{Set[ESC0nBank,0],			emulator -- always in bank 0}{Set[ESC1nBank,0],			emulator -- always in bank 0}{Set[ESC2nBank,0],			emulator -- usually in bank 0}{Set[ESC3nBank,0],			emulator -- usually in bank 0}Set[ESC4nBank,1],			{floating point}Set[ESC5nBank,1],			{floating point -- unused}Set[ESC6nBank,2],			{Cedar}{Set[ESC7nBank,0],			emulator -- always in bank 0}{Set[ESC8nBank,0],			processor-dependent -- usually in bank 0}{Set[ESC9nBank,0],			processor-dependent -- always in bank 0}Set[ESCAnBank,1],			{image processing}Set[ESCBnBank,1],			{RES support}Set[ESCCnBank,2],			{unassigned}Set[ESCDnBank,2],			{unassigned}Set[ESCEnBank,1],			{floating point}{Set[ESCFnBank,0];			unassigned -- don't use (IBEmpty trap here)}Set[BandBLTBank,2],Set[ByteBLTBank,1],Set[CompressAssistBank,1],Set[MiscPCEBank,1],Set[SmallTalkBank,3];Set[bankBandBLT,bank2],Set[bankBitBLT,bank0],Set[bankTrapZ,bank1],Set[bankSmallTalk,bank3],Set[bankExtraSmallTalk,bank2];