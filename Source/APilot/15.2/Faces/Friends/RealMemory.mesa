-- Copyright (C) 1981, 1982  by Xerox Corporation. All rights reserved. -- RealMemory.mesa   26-Sep-84  2:51:52 by DXG     DIRECTORY  Environment USING [PageCount, PageNumber],  PageMap USING [RealPageNumber];RealMemory: DEFINITIONS =  BEGIN  allocMap: READONLY DESCRIPTOR FOR ARRAY OF WORD;  -- Storage to hold real memory allocation table: size is enough words  -- to contain bits numbered [0..maxRealPageNumber), even if real page  -- numbers do not begin at zero.  -- Initial value is not important.  Initialize: PROCEDURE;  -- initializes exported variable allocMap.    Count: PROCEDURE RETURNS [    count: Environment.PageCount,    realPageMin, realPageMax: PageMap.RealPageNumber];  -- Returns the total number of pages of real memory which might  -- ever be present in virtual memory.  -- realPageMin, realPageMax are the maximum and minimum of the page numbers of ordinary real memory pages.  -- This procedure may only be called during Pilot initialization  -- when all PrincOps real memory is still mapped in virtual memory  -- (it's put there as a result of the action of the initial microcode).  -- Normal clients wanting the size of real memory should  -- use SpecialSpace.realMemorySize.    MoveIntervalToDisplayMemory: PROCEDURE [    page: Environment.PageNumber, count: Environment.PageCount,    bufferPage: Environment.PageNumber];  -- Exchanges any ordinary real pages, which are currently behind the given  -- virtual memory interval, for any available reserved real pages which are  -- part of the Dandelion display memory.  Any recovered ordinary real pages  -- are returned to Pilot for general use.  This is a no-op on processors other  -- than the Dandelion.  -- bufferPage is a page of unused, unmapped VM.    FreeReservedMemory: PROCEDURE [     keep: Environment.PageCount, bufferPage: Environment.PageNumber];  -- Frees all of the reserved memory in the Dandelion display memory except for  -- keep pages.  -- bufferPage is a page of unused, unmapped VM.        -- Code pack handle for special memory:    SpecialResidentCodeHandle: PUBLIC PROCEDURE;  -- This procedure's only purpose is to provide a handle on the Heads CODE PACK  -- which contains resident code which may be moved to reserved memory.  END.LOGJanuary 15, 1981  3:13 PM   RXG      Created file4-Nov-81 10:11:36   WDK    /JGS       Added MoveIntervalToDisplayMemory and HeadsReservedMemoryHandle, deleted   MoveCodeToDisplayMemory. Improved documentation.9-Nov-81 15:50:01   AWL         Added FreeReservedMemory.13-Nov-81 13:39:46   WDK       HeadsReservedMemoryHandle becomes SpecialResidentCodeHandle and SpecialResidentEVHandle.17-Nov-81 14:44:13   WDK       Deleted SpecialResidentEVHandle.11-Jan-82 11:19:34   WDK       Added Count.Time: 26-Sep-84  2:51:45	By: DXG     	Action: Added copyright notice and rebuild for 11.1 release.