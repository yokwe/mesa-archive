-- CoProcessorHeadBounty.mesa - last edit:--  JPM		21-Aug-90 10:15:48-- Copyright (C) 1990 by Advanced Workstation Products, Inc., a Xerox company.  All rights reserved.<< The following program was created in 1990 but has not been published within the meaning   of the copyright law, is furnished under license, and may not be used, copied and/or   disclosed except in accordance with the terms of said license.>>DIRECTORY  BountyInputOutput USING [GetFCBPtr, NotifyIOP, UpNotifyMaskType],  CoProcessorFace USING [Connection, ConnectionRec, Status],  CoProcessorIOFaceBounty USING [CoProcessorFCBType],  DeviceCleanup USING [Await, Item, Reason],  Environment USING [bytesPerWord],  HeadStartChain USING [Start];  CoProcessorHeadBounty: PROGRAM   IMPORTS BountyInputOutput, DeviceCleanup, RemainingHeads: HeadStartChain   EXPORTS CoProcessorFace, HeadStartChain =   BEGIN  -- constants  fcb: LONG POINTER TO CoProcessorIOFaceBounty.CoProcessorFCBType =    BountyInputOutput.GetFCBPtr[coProcessor];  bpw: CARDINAL = Environment.bytesPerWord;  -- PUBLIC variables  connectionRecSize: PUBLIC CARDINAL ¬ IF fcb = NIL THEN SIZE[CoProcessorFace.ConnectionRec]    ELSE MAX[SIZE[CoProcessorFace.ConnectionRec], (fcb.connectionRecSize + bpw - 1) / bpw];  -- PUBLIC PROCs  Initialize: PUBLIC PROC [notifyMask: WORD] = {IF fcb # NIL THEN    BEGIN    IF NOT fcb.stopAgent THEN      BEGIN      fcb.stopAgent ¬ TRUE;      BountyInputOutput.NotifyIOP[fcb.downNotify];      THROUGH [0..LAST[CARDINAL]) UNTIL fcb.agentStopped DO ENDLOOP      END;    fcb.agentQueue ¬ 0;    fcb.mesaConnectionReq ¬ [idle, NIL, completed];    fcb.upNotify ¬ notifyMask;    fcb.stopAgent ¬ FALSE;    BountyInputOutput.NotifyIOP[fcb.downNotify]    END};  InitializeCleanup: PUBLIC PROC = {IF fcb # NIL THEN    BEGIN    item: DeviceCleanup.Item;    savedStopAgent: BOOLEAN ¬ fcb.stopAgent;    savedUpNotify: BountyInputOutput.UpNotifyMaskType ¬ fcb.upNotify;    savedAgentQueue: LONG UNSPECIFIED ¬ fcb.agentQueue;    DO      reason: DeviceCleanup.Reason = DeviceCleanup.Await[@item];      SELECT reason FROM	turnOff, kill =>	  BEGIN	  IF NOT (savedStopAgent ¬ fcb.stopAgent) THEN	    BEGIN	    fcb.stopAgent ¬ TRUE;	    BountyInputOutput.NotifyIOP[fcb.downNotify]	    END;	  THROUGH [0..LAST[CARDINAL]) UNTIL fcb.agentStopped DO ENDLOOP;          savedUpNotify ¬ fcb.upNotify;          savedAgentQueue ¬ fcb.agentQueue	  END;	turnOn =>	  BEGIN          fcb.upNotify ¬ savedUpNotify;          fcb.agentQueue ¬ savedAgentQueue;	  IF NOT (fcb.stopAgent ¬ savedStopAgent)	    THEN BountyInputOutput.NotifyIOP[fcb.downNotify];	  END;	ENDCASE    ENDLOOP    END};  InitiateConnection: PUBLIC PROC [    connection: CoProcessorFace.Connection, isServer: BOOLEAN]    RETURNS [CoProcessorFace.Status] =    BEGIN    IF connection = NIL THEN RETURN[error];    IF fcb = NIL THEN RETURN[completed];    IF fcb.mesaConnectionReq.requestType # idle THEN RETURN[busyTryLater];    fcb.mesaConnectionReq.requestType ¬ IF isServer THEN accept ELSE connect;    fcb.mesaConnectionReq.connection ¬ connection;    fcb.mesaConnectionReq.status ¬ inProgress;    BountyInputOutput.NotifyIOP[fcb.downNotify];    RETURN[inProgress]    END;  InitiateDisconnection: PUBLIC PROC [connection: CoProcessorFace.Connection]    RETURNS [CoProcessorFace.Status] =    BEGIN    IF connection = NIL THEN RETURN[error];    IF fcb = NIL THEN RETURN[completed];    IF fcb.mesaConnectionReq.requestType # idle THEN RETURN[busyTryLater];    fcb.mesaConnectionReq.requestType ¬ delete;    fcb.mesaConnectionReq.connection ¬ connection;    fcb.mesaConnectionReq.status ¬ inProgress;    BountyInputOutput.NotifyIOP[fcb.downNotify];    RETURN[inProgress]    END;  NotifyForTransfer: PUBLIC PROC = {    IF fcb # NIL THEN BountyInputOutput.NotifyIOP[fcb.downNotify]};  Poll: PUBLIC PROC [connection: CoProcessorFace.Connection]    RETURNS [status: CoProcessorFace.Status] =    BEGIN    IF fcb = NIL THEN RETURN[completed];    IF fcb.mesaConnectionReq.connection # connection THEN RETURN[error];    IF (status ¬ fcb.mesaConnectionReq.status) # inProgress      THEN fcb.mesaConnectionReq.requestType ¬ idle;    END;  Start: PUBLIC --HeadStartChain.-- PROC =    {RemainingHeads.Start[]};  END.LOG22-Mar-90 - JPM - Created. 9-Apr-90 - JPM - Changed to implement new connection establishment protocol.21-Aug-90 - JPM - Removed reference to CoProcessorIOFaceBounty.coProcessor (now in BountyInputOutput).