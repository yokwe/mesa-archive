--File = RS232CIOFaceDove.mesa-- Copyright (C) 1985 by Xerox Corporation. All rights reserved.	-- last -- DMS		31-Oct-85 11:26:06	:Added Rs Watch Dog task TCB-- JPM		22-Aug-85  8:53:57	:Opie redesign conversion-- DMS		29-Jul-85 18:22:37	:Changed description of EEPRom Image-------------------------------------------------------------------------------- Description:--RS232CIOFaceDove contains the IORegion (IOPage equivalent on the Dlion) which--is a region of memory that is permanently mapped into contiguous Real--Memory. This IORegion houses the well defined structures in shared memory and--allows communication between Mesa's RS232cHeadDove and the IOP's RS232Handler--software.  the equivalent of RS232CIOFaceDove in DLion is known as IOPInterfaceDefs.--******************************************************************************DIRECTORYDoveInputOutput USING [Byte, ByteSwappedWord, ClientCondition, IOPCondition, NotifyMask, OpieAddress, QueueBlock, TaskContextBlock ],RS232CEnvironment USING [FlowControl],NewRS232CFace USING [Operation];RS232CIOFaceDove: DEFINITIONS =BEGIN--IOCB description for RS232C (IOCB is allocated by the driver) and structured-- the same way in the definition file for the .asm files of RS232--------------------------------------------------------------------------------	INPUT OUTPUT  CONTEXT  BLOCK  DEFINITION  FOR  RS232C  CH A(DTE)------------------------------------------------------------------------------IOCB: TYPE = MACHINE DEPENDENT RECORD[rsOperation:		NewRS232CFace.Operation,			-- described in the facersTransferCountChA:	WORD,				--byte count in the bufferrsNextIocbChA:		DoveInputOutput.OpieAddress,		--address of the next IOCBcurrentOpStatus:	CurrentOpStatusType,			--current operation statusrsIocbStatusByte0: 	RSReadRegister0Type,			--Read register 0 of the 8274rsIocbStatusByte1: 	RSReadRegister1Type,			--Read register 1 of the 8274rsIocbStatusByte2: 	RSReadRegister2Type,			--Read register 1 of the 8274rsBufferPtr:		DoveInputOutput.OpieAddress,		-- Pointer to BufferrsBufferSize:		DoveInputOutput.ByteSwappedWord,	-- size of BufferrsIOCBType:		RSIOCBType,				-- IOCB type (Rx or Tx)rsActiveIOCB:		DoveInputOutput.Byte			-- Set and cleared handler	];--------------------------------------------------------------------------------	FUNCTION  CONTEXT  BLOCK  DEFINITION  FOR  RS232C------------------------------------------------------------------------------FunctionContextBlock: TYPE =  MACHINE DEPENDENT RECORD[rS232CMainTaskTcb:	DoveInputOutput.TaskContextBlock,txTaskChATcb:		DoveInputOutput.TaskContextBlock,specRxTaskChATcb:	DoveInputOutput.TaskContextBlock,rxTaskChATcb:		DoveInputOutput.TaskContextBlock,extStatTaskChATcb:	DoveInputOutput.TaskContextBlock,--Queue definition for the Transmit task of channel ArsQueueTxChA: 		DoveInputOutput.QueueBlock,--Queue definition for the Receive task of channel ArsQueueRxChA:		DoveInputOutput.QueueBlock,--Locked memory access variablers232LockMask:  	WORD,rs232WorkMask:		DoveInputOutput.NotifyMask,--Device Context Block for the RS232 device i8274.  This DCB contains various--device status, work Condition etc which maintain the context of the--communication channel of the MPSC i8274rsIOPSystemInputPort: 	RSIOPSystemInputPortType,	--Input port of the IOP for External statusrsWorkList: 		RSWorkListType,		-- Mesa command sequence to i8274rsCommandWorkList:	CMDWorkListType,rsBaudRateChA: 		WORD,			-- Baud rate value of i8254 timer 0 (Ch A/DTE)--Description of write registers of the MPSC for channel A for Mesa controlrsWR0ofi8274ChA: 	WR0ByteType,		--Write Register 0 for Channel A of MPSCrsWR1ofi8274ChA: 	WR1ByteType,		--Write Register 1 for Channel A of MPSCrsWR3ofi8274ChA: 	WR3ByteType,		--Write Register 3 for Channel A of MPSCrsWR4ofi8274ChA: 	WR4ByteType,		--Write Register 4 for Channel A of MPSCrsWR5ofi8274ChA: 	WR5ByteType,		--Write Register 5 for Channel A of MPSCrsWR6ofi8274ChA: 	WR6ByteType,		--Write Register 6 for Channel A of MPSCrsWR7ofi8274ChA:	WR7ByteType,		--Write Register 7 for Channel A of MPSCrsReadRegister0: 	RSReadRegister0Type,rsReadRegister1: 	RSReadRegister1Type,rsReadRegister2: 	RSReadRegister2Type,rsLatchedStatus: 	RSLatchedStatusType,rsTTYHost:		DoveInputOutput.Byte,rsClientType: 		RSClientType _ rsNoClient,rs232Mode:		RSModeType,rs232FlowControl: 	RS232CEnvironment.FlowControl,rsFrameTimeoutValue:	WORD,		-- Frame timeout value  	rsClientConditionChA: 	DoveInputOutput.ClientCondition,rs232ChAWork: 		DoveInputOutput.IOPCondition,txChAWork: 		DoveInputOutput.IOPCondition,txChAWaitXOn: 		DoveInputOutput.IOPCondition,rsEEpromImage: 		RSEEpromconfigImageA,--  Error and status countersrsRxCRCErrorCnt:	WORD,specErrorCount:		WORD,rsOverRunErrors:	WORD,badTxIntCnts:		WORD,badRxIntCnts:		WORD,badSpecRxIntCnts:	WORD,badExtStatIntCnts:	WORD,badTxIntTimeout:	WORD];	------------------------------------------------------	RSModeType: TYPE = MACHINE DEPENDENT  {asynch(0), synch(1), (0FEH)};     RSWorkListType: TYPE = MACHINE DEPENDENT RECORD   [  workFori8274: BOOLEAN _ FALSE,  wr7: BOOLEAN _ FALSE,  wr6: BOOLEAN _ FALSE,  wr5: BOOLEAN _ FALSE,  wr4: BOOLEAN _ FALSE,  wr3: BOOLEAN _ FALSE,  wr1: BOOLEAN _ FALSE,  wr0: BOOLEAN _ FALSE,  newBaudRate:  BOOLEAN _ FALSE,  changeMode: BOOLEAN _ FALSE,  reservedD6: BOOLEAN _ FALSE,  reservedD5: BOOLEAN _ FALSE,  reservedD4: BOOLEAN _ FALSE,  reservedD3: BOOLEAN _ FALSE,  reservedD2: BOOLEAN _ FALSE,  reservedD1: BOOLEAN _ FALSE  ];CMDWorkListType: TYPE = MACHINE DEPENDENT RECORD [abortRx: BOOLEAN _ FALSE,abortTx: BOOLEAN _ FALSE,newTx: BOOLEAN _ FALSE,getDeviceStatus: BOOLEAN _ FALSE,commandInProgress: BOOLEAN _ FALSE,rtsCommand: BOOLEAN _ FALSE,dtrCommand: BOOLEAN _ FALSE,resetValues: BOOLEAN _ FALSE,reserved4: DoveInputOutput.Byte];CurrentOpStatusType:TYPE = MACHINE DEPENDENT {pollRxOrTx(0), complete(1), aborted(2), frameTimeout(3),disaster(4), dataLost(5), (0F8H)};WR0ByteType: TYPE = MACHINE DEPENDENT RECORD [ResetRxTxCRC(0:0..1): ResetRxTxCRCType,SDLCcmd(0:2..4): SDLCcmdType,CommStatRegPtr(0:5..7): CommStatRegPtrType];ResetRxTxCRCType: TYPE = MACHINE DEPENDENT {nullCode,				-- 0 resetRxCRCChecker,			-- 1 resetTxCRDGenerator,			-- 2 resetTxUnderrunLatch};			-- 3SDLCcmdType: TYPE = MACHINE DEPENDENT{nullCode,sendAbort,resetExtStatusint,channelReset,enaIntOnNextRxChar,resetTxIntDMAPending,errorReset,endOfInterrupt};CommStatRegPtrType: TYPE = [0..7];WR1ByteType: TYPE = MACHINE DEPENDENT RECORD[waitEnable: BOOLEAN,notUsed:BOOLEAN _ FALSE,waitOnRxOrTx: WaitOn,interruptCondition: IntConditionType,statusAffectsVector: BOOLEAN,txIntDMAenable: BOOLEAN,extInterruptEnable: BOOLEAN];WaitOn: TYPE = MACHINE DEPENDENT{waitOnTx(0),waitOnRx(1)};IntConditionType: TYPE = MACHINE DEPENDENT{rxIntDMAdisable,rxIntOn1stCharOrSpecCondition,intOnAllRxParityAffectsVector,intOnAllRxParityNotAffectVector};WR3ByteType: TYPE = MACHINE DEPENDENT RECORD[rxCharLength: CharLengthType,autoEnable: BOOLEAN,enterHuntMode: BOOLEAN,rxCRCenable: BOOLEAN,addrSearchMode: BOOLEAN,syncCharLoadInhibit: BOOLEAN,rxEnable: BOOLEAN];CharLengthType: TYPE = MACHINE DEPENDENT{ch5bits,ch7bits,ch6bits,ch8bits};WR4ByteType: TYPE = MACHINE DEPENDENT RECORD[clockRate: ClockRateType,syncCharControl: SyncCharControlType,stopBits: StopBitsType,parityOddOrEven: Parity,enableParity: BOOLEAN];ClockRateType: TYPE = MACHINE DEPENDENT{x1clk,x16clk,x32clk,x64clk};SyncCharControlType: TYPE = MACHINE DEPENDENT{bitSync8,BitSync16,SdlcHdlc,extSyncMode};StopBitsType: TYPE = MACHINE DEPENDENT{enableSyncModes, oneStopBit, oneAndHalfStopBit, twoStopBit};Parity: TYPE = MACHINE DEPENDENT{parityOdd(0), parityEven(1)};WR5ByteType: TYPE = MACHINE DEPENDENT RECORD[dtr: BOOLEAN,txCharLength: CharLengthType,sendBreak: BOOLEAN,txEnable: BOOLEAN,modeSDLCOrCRC16: Mode,rts: BOOLEAN,txCRCenable: BOOLEAN];Mode:TYPE = MACHINE DEPENDENT{SDLC(0), CRC16(1)};WR6ByteType: TYPE = MACHINE DEPENDENT RECORD[SDLCaddress: DoveInputOutput.Byte];WR7ByteType: TYPE = MACHINE DEPENDENT RECORD[mustBe7EinSDLC: DoveInputOutput.Byte _ 07EH];RSReadRegister0Type: TYPE =  MACHINE DEPENDENT RECORD[break: BOOLEAN,syncOnlyTxUnderrun: BOOLEAN,cts: BOOLEAN,synDetect: BOOLEAN,carrierDetect:BOOLEAN,txBufferEmpty: BOOLEAN,chAIntPending: BOOLEAN,rxCharAvailable: BOOLEAN];RSReadRegister1Type: TYPE =  MACHINE DEPENDENT RECORD[endOfFrameSDLCMode: BOOLEAN,crcFramingError: BOOLEAN,rxOverrunError: BOOLEAN,parityError: BOOLEAN,bitCharMode: BitCharModeType,allSent: BOOLEAN];BitCharModeType:TYPE = MACHINE DEPENDENT{bitSyncResidue0,bitSyncResidue1,bitSyncResidue2,bitSyncResidue3,bitSyncResidue4,bitSyncResidue5,bitSyncResidue6,bitSyncResidue7};RSReadRegister2Type: TYPE =  MACHINE DEPENDENT RECORD[chBStatusAffectsVector: DoveInputOutput.Byte];RSLatchedStatusType: TYPE =  MACHINE DEPENDENT RECORD[breakDetected: BOOLEAN _ FALSE,dataLost: BOOLEAN _ FALSE,ringHeard: BOOLEAN _ FALSE,notUsed0: BOOLEAN,notUsed1: BOOLEAN,notUsed2: BOOLEAN,notUsed3: BOOLEAN,notUsed4: BOOLEAN];RSIOPSystemInputPortType: TYPE =  MACHINE DEPENDENT RECORD[unAssigned1: BOOLEAN,unAssigned2: BOOLEAN,unAssigned3: BOOLEAN,unAssigned4: BOOLEAN,unAssigned5: BOOLEAN,dataSetReady: BOOLEAN,     -- active lowringIndicator: BOOLEAN,      -- active lowdataTerminalReady: BOOLEAN,  -- active lownotAssigned : DoveInputOutput.Byte];RSClientType: TYPE = MACHINE DEPENDENT{rsNoClient(0), rsNormalClient(1), rsDebuggerClient(2), (0FCH)};RSEEpromconfigImageA: TYPE = MACHINE DEPENDENT RECORD[rsDeviceTypeChA : DoveInputOutput.Byte,rsChAAttributes	: DoveInputOutput.Byte];RSIOCBType: TYPE = MACHINE DEPENDENT {rsIOCBTypeRx(0), rsIOCBTypeTx(1), (0FEH)};  END.