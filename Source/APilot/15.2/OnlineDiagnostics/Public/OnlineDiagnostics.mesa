-- File: OnlineDiagnostics.mesa - last edit:-- TJacobs.ES          18-Jun-85 15:46:48-- Grundler.PA          1-Nov-83  0:23:45-- Copyright (C) 1985 by Xerox Corporation. All rights reserved.--Overview:--This interface defines the procedures relating to the on-line diagnostics.-- These procedures are tests of the floppy disk drive,-- Lear Siegler, LF (bitmap) display, and keyboard and mouse.-- NOTE  This interface has undergone extensive revision for Klamath.OnlineDiagnostics: DEFINITIONS =  BEGIN  -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  -- LF display, keyboard, and mouse  -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Background:   TYPE = {white, black};  CursorArray:  TYPE = ARRAY [0..16) OF WORD;  Coordinate:   TYPE = MACHINE DEPENDENT RECORD [x, y: INTEGER];  KeyboardType: TYPE = {american, european, japanese};  NextAction:   TYPE = {nextPattern, invertPattern, quit};  KeyboardAndMouseTest: PROC [    keyboardType:         KeyboardType,    screenHeight:         CARDINAL [0..32767],    screenWidth:          CARDINAL [0..32767],    SetBackground:        PROC [background: Background],    SetBorder:            PROC [oddPairs, evenPairs: [0..377B]],    GetMousePosition:     PROC RETURNS [Coordinate],    SetMousePosition:     PROC [newMousePosition: Coordinate],    SetCursorPattern:     PROC [cursorArray: CursorArray],    SetCursorPosition:    PROC [newCursorPosition: Coordinate],    keyboard:             LONG POINTER,    Beep:                 PROC [duration: CARDINAL],    ClearDisplay:         PROC,    BlackenScreen:        PROC [x, y, width, height: CARDINAL],    InvertScreen:         PROC [x, y, width, height: CARDINAL],    WaitForKeyTransition: PROC];  LFDisplayTest: PROC [    screenHeight:         CARDINAL [0..32767],    screenWidth:          CARDINAL [0..32767],    SetBackground:        PROC [background: Background],    SetBorder:            PROC [oddPairs, evenPairs: [0..377B]],    GetNextAction:        PROC RETURNS [NextAction],    ClearDisplay:         PROC,    BlackenScreen:        PROC [x, y, width, height: CARDINAL],    FillScreenWithObject: PROC [p: LONG POINTER TO ARRAY [0..16) OF WORD]];  -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  -- Floppy   -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  FloppyReturn: TYPE = {    deviceNotReady, notDiagDiskette, floppyFailure, noErrorFound};  Field: TYPE = RECORD [fieldName: FloppyMessage, fieldValue: UNSPECIFIED];  FieldDataType: TYPE = {    boolean, cardinal, character, hexadecimal, hexbyte, integer, octal, string};  YesOrNo: TYPE = {yes, no};  FloppyWhatToDoNext: TYPE = {    continueToNextError, loopOnThisError, displayStuff, exit};  SingleDouble: TYPE = {single, double};  SectorLength: TYPE = {one28, two56, five12, one024};  ErrorHandling: TYPE = {noChecking, stopOnError, loopOnError, continueOnError};  DisplayFieldsProc: TYPE = PROC [    fields:          DESCRIPTOR FOR ARRAY OF Field,    title:           FloppyMessage _ tFirst,    fieldType:       FieldDataType,    numberOfColumns: CARDINAL _ 3];        DisplayTableProc:  TYPE = PROC [    headers:         DESCRIPTOR FOR ARRAY OF FloppyMessage,    rowNames:        DESCRIPTOR FOR ARRAY OF FloppyMessage,    values:          DESCRIPTOR FOR ARRAY OF DESCRIPTOR FOR ARRAY OF UNSPECIFIED,    title:           FloppyMessage _ tFirst,    fieldType:       FieldDataType];  DisplayNumberedTableProc: TYPE = PROC [    values:          LONG DESCRIPTOR FOR ARRAY OF UNSPECIFIED,    rowNameHeader:   FloppyMessage _ tFirst,    title:           FloppyMessage _ tFirst,    numOfColumns:    CARDINAL,    startNum:        INTEGER,    fieldType:       FieldDataType];        PutMessageProc: TYPE = PROC [msg: FloppyMessage];    GetConfirmationProc: TYPE = PROC [msg: FloppyMessage];    GetYesOrNoProc: TYPE = PROC [msg: FloppyMessage] RETURNS [YesOrNo];  GetFloppyChoiceProc: TYPE = PROC RETURNS [FloppyWhatToDoNext];  FloppyStandardTest: PROC [    displayFields:        DisplayFieldsProc,    displayTable:         DisplayTableProc,    displayNumberedTable: DisplayNumberedTableProc,    putMessage:           PutMessageProc,    getConfirmation:      GetConfirmationProc,    getYesOrNo:           GetYesOrNoProc,    getFloppyChoice:      GetFloppyChoiceProc]    RETURNS [floppyReturn: FloppyReturn];  FloppyCleanReadWriteHeads: PROC [    displayFields:        DisplayFieldsProc,    displayTable:         DisplayTableProc,    displayNumberedTable: DisplayNumberedTableProc,    putMessage:           PutMessageProc,    getConfirmation:      GetConfirmationProc,    getYesOrNo:           GetYesOrNoProc,    getFloppyChoice:      GetFloppyChoiceProc]    RETURNS [floppyReturn: FloppyReturn];  FloppyCommandFileTest: PROC [    density:              SingleDouble,    sides:                SingleDouble,    sectorsPerTrack:      CARDINAL [8..26],    sectorLength:         SectorLength,    errorHandling:        ErrorHandling,    cmdFile:              LONG STRING,    displayFields:        DisplayFieldsProc,    displayTable:         DisplayTableProc,    displayNumberedTable: DisplayNumberedTableProc,    putMessage:           PutMessageProc,    getConfirmation:      GetConfirmationProc,    getYesOrNo:           GetYesOrNoProc,    getFloppyChoice:      GetFloppyChoiceProc];  FloppyDisplayErrorLog: PROC [    displayFields:        DisplayFieldsProc,    displayTable:         DisplayTableProc,    displayNumberedTable: DisplayNumberedTableProc,    putMessage:           PutMessageProc,    getConfirmation:      GetConfirmationProc,    getYesOrNo:           GetYesOrNoProc,    getFloppyChoice:      GetFloppyChoiceProc];  FloppyExerciser: PROC [    displayFields:        DisplayFieldsProc,    displayTable:         DisplayTableProc,    displayNumberedTable: DisplayNumberedTableProc,    putMessage:           PutMessageProc,    getConfirmation:      GetConfirmationProc,    getYesOrNo:           GetYesOrNoProc,    getFloppyChoice:      GetFloppyChoiceProc];  FloppyFormatDiskette: PROC [    displayFields:        DisplayFieldsProc,    displayTable:         DisplayTableProc,    displayNumberedTable: DisplayNumberedTableProc,    putMessage:           PutMessageProc,    getConfirmation:      GetConfirmationProc,    getYesOrNo:           GetYesOrNoProc,    getFloppyChoice:      GetFloppyChoiceProc];  FloppyMessage: TYPE = {    cFirst, cCallCSC, cCloseWn, cEnsureReady, cExit, cInsDiffCleanDisk,    cInsertCleanDisk, cInsertDiagDisk, cInsertWriteable, cNBNotReady,    cOtherDiskErr, cRemoveCleanDisk, cRemoveDiskette, cLast,    hFirst, hBusy, hExpec1, hExpec2, hCRC1, hCRC2, hCRCErr, hDelSector, hDiskChng,    hErrDetc, hGoodComp, hHead, hHeadAddr, hIllglStat, hIncrtLngth, hObser1,    hObser2, hReadHead, hReadSector, hReadStat, hReady, hRecal, hRecalErr,    hSector, hSectorAddr, hSectorCntErr, hSectorLgth, hSeekErr, hTimeExc, hTrack,    hTrack0, hTrackAddr, hTwoSide, hWriteDelSector, hWritePro, hWriteSector,    hLast,    iFirst, iBadContext, iBadLabel, iBadSector, iBadTrack0, iCheckPanel, iCIERec,    iCleanDone, iCleanProgress, iErrDet, iErrNoCRCErr, iExerWarning, iFormDone,    iFormProgress, iFormWarning, iHardErr, iHeadDataErr, iInsertDiagDisk,    iInsertFormDisk, iOneSided, iRunStdTest, iSoftErr, iTnx, iTwoSided,    iUnitNotReady, iVerDataErr, iLast,         tFirst, tByteCnt, tCIERH, tCIERS, tCIEVer, tCIEWDS, tCIEWS, tHeadDataErr,    tHeadDisp, tHeadErrDisp, tSectorDisp, tStatDisp, tSummErrLog, tVerDataErr,    tLast,        yFirst, yDispSects, yDispExpObsData, yDoorJustOpened, yDoorOpenNow,    yDoorOpenShut, yIsItDiagDisk, yIsItWrProt, yStillContinue, yStillSure, yLast,    xSeekVerify, xNotReady, xBadTrack, xSeekErrors, xRecordNotFound, xHeaderError,    xDataError, xDataLost, xOtherError, xUseDrive0, xUseDrive1, xUseDrive2,    xUseDrive3,xUnknownDiskDriveType, xNoDiskDrivePresent, xExtraMessage1,    xExtraMessage2, xExtraMessage3, xExtraMessage4, xExtraMessage5 };  -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  -- Lear-Siegler Tests  -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  LSMessage: TYPE = {    kTermAdj, kTypeCharFill, kCTLC, kFillScreen, kTypeXHair, kEndAdj, kTermTest,    kTestKey, kCTLStop, kLineFeed, kReturnKey, kLetter, kAndCTL, kEscape, kSpBar,    kAndShift, kShColon, kShSemiColon, kTypeComma, kHyphen, kTypePeriod, kVirgule,    kNumeral, kKey, kLearColon, kSemiColon, kShComma, kShHyphen, kShPeriod,    kShVirgule, kAtSign, kLeftBracket, kBackSlash, kRightBracket, kCaret, kBreak,    kShAt, kShLeftBracket, kShBackSlash, kShRightBracket, kShCaret, kShBreak,    kUnknown};  LSAdjust: PROC [    cancelSignal: SIGNAL,    GetMesaChar:  PROC RETURNS [CHARACTER],    PutCR:        PROC,    PutMessage:   PROC [message: LSMessage, char: CHARACTER _ 0C],    PutMesaChar:  PROC [char: CHARACTER]];  LSTest: PROC [    cancelSignal: SIGNAL,    GetMesaChar:  PROC RETURNS [CHARACTER],    PutMessage:   PROC [message: LSMessage, char: CHARACTER _ 0C]];  END.......  LOG(Date			- Person	- Action)22-Jun-83  8:22:24  	- SMA  		- Removed INR stats and phone net					  procedures. 1-Nov-83  0:23:43  	- Grundler  	- Removed RS232C, communications and 					  Ethernet diagnostics.18-Jun-85 15:37:35	- TJacobs	- Added new TYPEs to FloppyMessage for 					  DayBreak conversion.