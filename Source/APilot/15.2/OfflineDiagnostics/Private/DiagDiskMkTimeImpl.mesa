-- Copyright (C) 1984, 1985  by Xerox Corporation. All rights reserved. -- File: DiagDiskMkTimeImpl.mesa----    --Notes:  --	1. Unless otherwise specified the maximun number of characters  --	per message is 100.  --	2. The '14 chars max' are required to be able to display  --	four columns of commands when getting a command file. 	 	   DIRECTORY  DiagDiskMkTime	USING	[MkTime],  Heap			USING   [Create],  String		USING   [AppendString];			   DiagDiskMkTimeImpl: PROGRAM    IMPORTS	Heap,	String    EXPORTS	DiagDiskMkTime  = BEGIN    --create space to hold the STRINGs  mkTimeSpace: UNCOUNTED ZONE¬ Heap.Create[initial: 1];  mkTime: PUBLIC LONG POINTER TO stringArray;    stringArray: TYPE= ARRAY DiagDiskMkTime.MkTime OF LONG STRING;    SetMessages: PROC   = BEGIN  timeMsgs: ARRAY DiagDiskMkTime.MkTime OF LONG STRING¬ [    comma:		", "L,    dateCorrectQuest:	"Is the date correct? (Yes/No): "L,    dateRequirem:	"DATE REQUIREMENT"L,    dateTimeCorr:	"Is the below Date and Time correct (Yes/No): "L,    day:		"day: "L,    DSTCorrectQuest:	"Is the below Daylight Savings Time correct? (Yes/No): "L,    endPlusOrMin:	")"L,    enterQuestForExpl:	"Enter a '?' for further explanations"L,    firstDayDST:	"First day of Daylight Savings Time: "L,    gettingTime:	"PLEASE WAIT!  Getting time from server."L,    Hour:		"Hour: "L,    lastDayDST:		"Last day of Daylight Savings Time: "L,    --Note: The contents of each of the following 15 lines may be  --rearanged to fit within 15 lines of explanation.    localDaylightTExpl1:"The 'First day of Daylight Savings Time' is the day of the year on or"L,    localDaylightTExpl2:"before which Daylight Savings Time takes effect, where:"L,    localDaylightTExpl3:"        1 =>  January  1"L,    localDaylightTExpl4:"      366 => December 31."L,    localDaylightTExpl5:"(The correspondence between numbers and days is based on a leap year."L,    localDaylightTExpl6:"Similarly, 'Last day of Daylight Savings Time' is the day of the year on"L,    localDaylightTExpl7:"or before which Daylight Savings Time ends.  Note that in any given year,"L,    localDaylightTExpl8:"year, Daylight Savings Time actually begins and ends at 2 AM on the last"L,    localDaylightTExpl9:"Sunday not following the  specified date.  The system makes this adjustment"L,    localDaylightTExpl10:"for you automatically.  The normal values are"L,    localDaylightTExpl11:"      121   (April 30) for the first day of DST"L,    localDaylightTExpl12:"      305 (October 31) for the last  day of DST."L,    localDaylightTExpl13:"If Daylight  Savings  Time is not  observed locally, both values should be"L,    localDaylightTExpl14:"set to zero."L,    localDaylightTExpl15:"The supported numbers are 0 to 366."L,    localDaylightTReq:	"LOCAL DAYLIGHT SAVINGS TIME REQUIREMENT"L,  --Note: The contents of each of the following 8 lines may be  --rearanged to fit within 8 lines of explanation.    localTimeZoneExpl1:	"Number  of  hours  between  Greenwich  and local time.  For time"L,    localTimeZoneExpl2:	"zones west of  Greenwich, the offset is negative; for time zones"L,    localTimeZoneExpl3:	"east of Greenwich, the offset is positive. Examples:"L,    localTimeZoneExpl4:	"      Tokyo          +9 hours    (Japanese standard time)"L,    localTimeZoneExpl5:	"      San Francisco  -8 hours    (Pacific  time zone)"L,    localTimeZoneExpl6:	"      Boston         -5 hours    (Eastern  time zone)"L,    localTimeZoneExpl7:	" "L,    localTimeZoneExpl8:	"The supported numbers are -12 to +12 (note: sign must be entered)."L,    localTimeZoneReq:	"LOCAL TIME ZONE REQUIREMENT"L,    Minute:		"Minute: "L,    minutesOffsetExpl1:	"Almost always zero"L,    minutesOffsetExpl2:	"The supported numbers are 0 to 59."L,    minutesOffset:	"Minutes offset (standard= 0): "L,    month:		"month: "L,    noRespFromServer:	"No response from Time Server."L,    presentDay:		"Present day [1..31]: "L,    presentMonth:	"Present month [1..12]: "L,    presentYear:	"Present year [1982..2050]: "L,    proInGetTime:	"Problem in getting the correct time."L,    rTCFailure:		"Real Time Clock failure."L,    Second:		"Second: "L,    startPlusOrMin:	"("L,    supportedDays:	"The supported number of days is 1 through 31."L,    supportedHours:	"The supported number of hours is 0 through 23."L,    supportedMinutes:	"The supported number of minutes is 0 through 59."L,    supportedMonths:	"The supported number of months is 1 through 12."L,    supportedSeconds:	"The supported number of seconds is 0 through 59."L,    supportedYears:	"The supported number of years is 1982 through 2050."L,    timeCorrect:	"Is the time correct? (Yes/No): "L,    timeRequired:	"TIME REQUIRED"L,    timeRequirem:	"TIME REQUIREMENT"L,    timeZoneCorrect:	"Is the below time zone correct? (Yes/No): "L,    timeZoneOffset:	"Time zone offset from Greenwich: "L,    weekDayFri:		"Fri"L,    weekDayMon:		"Mon"L,    weekDaySat:		"Sat"L,    weekDaySun:		"Sun"L,    weekDayThu:		"Thu"L,    weekDayTue:		"Tue"L,    weekDayWed:		"Wed"L,    year:		"year: "L];      mkTime ¬mkTimeSpace.NEW[stringArray];    FOR x: DiagDiskMkTime.MkTime IN DiagDiskMkTime.MkTime DO    mkTime­[x]¬ mkTimeSpace.NEW[StringBody[timeMsgs[x].length]];    String.AppendString[mkTime[x], timeMsgs[x]];  ENDLOOP;      END; --SetMessages    -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  -- Main line code  -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    SetMessages[];      END....--of DiagDiskMkTimeImpl.mesa  LOG19-May-89 20:00:29, TXM, changed firstDayDST, lastDayDST, localDaylightTExpl, localTimeZoneExpl,			 presentDay, presentMonth and presentYear for Japanese Standard Time.