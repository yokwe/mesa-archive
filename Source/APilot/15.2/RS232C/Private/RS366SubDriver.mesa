-- File: RS366SubDriver.mesa - last edit:-- BKI                 31-Aug-87 17:26:45-- Copyright (C) 1987 by Xerox Corporation. All rights reserved.<< This MONITOR is a machine-independent implementation of nominally driver-like functions which are underneath the current RS-366 Face. It is hoped that these functions may eventually be incorporated into the RS-366 driver, and that all machine-dependent heads would then implement a new interface (herein referred to as NewRS366Face).>>DIRECTORY  NewRS366Face USING [    CommandStatus, DeviceControl, DeviceStatus, GetDeviceStatus, GetDialerCount,    InitiateGetStatus, InitiateSetControl, Poll],  RS232CSubDriver USING [root, upNotify],  RS366Face USING [GetStatusBits, SetStatusBits];RS366SubDriver: MONITOR  LOCKS root.root  IMPORTS root: RS232CSubDriver, NewRS366Face  EXPORTS RS366Face  SHARES RS232CSubDriver =  BEGIN  -- PUBLIC PROCEDUREs  GetDialerCount: PUBLIC PROC RETURNS[dialerCount: CARDINAL] =    {RETURN[NewRS366Face.GetDialerCount[]]};  GetStatus: PUBLIC ENTRY PROC[dialerNumber: CARDINAL] RETURNS[getStatusBits: RS366Face.GetStatusBits] =    BEGIN    ENABLE UNWIND => NULL;    commandStatus: NewRS366Face.CommandStatus;    deviceStatus: NewRS366Face.DeviceStatus;    commandStatus ¬ NewRS366Face.InitiateGetStatus[dialerNumber];    UNTIL commandStatus = completed DO      WAIT root.upNotify;      commandStatus ¬ (IF commandStatus = rejected THEN        NewRS366Face.InitiateGetStatus[dialerNumber]	ELSE NewRS366Face.Poll[dialerNumber]);      ENDLOOP;    deviceStatus ¬ NewRS366Face.GetDeviceStatus[dialerNumber];    getStatusBits ¬ [      powerIndication: deviceStatus.powerIndication,      dataLineOccupied: deviceStatus.dataLineOccupied,      callOriginationStatus: deviceStatus.callOriginationStatus,      presentNextDigit: deviceStatus.presentNextDigit,      abandonCallAndRetry: deviceStatus.abandonCallAndRetry];    END;  SetStatus: PUBLIC ENTRY PROC[dialerNumber: CARDINAL, setStatusBits: RS366Face.SetStatusBits] =    BEGIN    ENABLE UNWIND => NULL;    commandStatus: NewRS366Face.CommandStatus;    deviceControl: NewRS366Face.DeviceControl = [      callRequest: setStatusBits.callRequest,      digitPresent: setStatusBits.digitPresent,      digit: setStatusBits.digit];    commandStatus ¬ NewRS366Face.InitiateSetControl[dialerNumber, deviceControl];    UNTIL commandStatus = completed DO      WAIT root.upNotify;      commandStatus ¬ (IF commandStatus = rejected THEN        NewRS366Face.InitiateSetControl[dialerNumber, deviceControl]	ELSE NewRS366Face.Poll[dialerNumber]);      ENDLOOP;    END;  END... -- RS366SubDriverLOG31-Aug-87 17:26:45  BKI  Created file.