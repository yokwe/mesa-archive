$	DEBUG MOD186;MoonCsTest.asm	NAME	CPTest$	TITLE(CP Test)$	NOLIST		;Next line includes Daisy.def	$	INCLUDE(MoonSys.def)$	INCLUDE(MOONLINK.def);-----------------------------------------------------------------CPTCBlock  STRUC  CPSpare0 DB  0CPTestControl DB  0CPPageParity DB  0CPBankParity DB  0CPExpectedIntCount DB  0CPMIntCount DB  0CPWaitTime DW  0CPEndingData3 DB  0CPParityData3 DB  0CPErrorControl DB  0CPSpare1 DB  0CPExpectedCS DW  0CPObservedCS DW  0CPExpectedData DW  0CPObservedData DW  0CPFault DB  0CPIntControl DB  0CPTCBlock ENDS;Test ControlCPParityTest equ 1CPStopStartTest equ 2;Interrupt ControlCPDoCountAndInt equ 0CPDoCountOnly equ 1;Error ControlCPStopOnLast equ 1CPNoStop equ 2CPNoMemParity equ 80HCPNoMesaIntError equ 8;Fault ControlCPNoError equ 0CPDataError equ 1CPCSAddressError equ 2CPIntCountError equ 4CPCSNoParityData3 equ 8CPCSEndingData3 equ 10HCPLoopCount equ 48CPNoCount equ 0;-----------------------------------------------------------------$	LIST		;Previous line included Daisy.def;--------------------------------------------MonitorCode	SEGMENT COMMON	ASSUME	CS:MonitorCode, SS:MonitorCode, DS:MonitorCode	ORG TestCodeLoc	 ;-----------------------------------------------------------------         jmp CPStart         jmp CPPreProcess	 jmp CPFRUList	 jmp CPDummy	 jmp CPDummy	 jmp CPDummy	 jmp CPDummy	 	ORG CPTestCodeLocCPDummy:    RetCPStart:    CALL SetVectors	    Mov bx,[si].TCBPointer ;Get Index to TCB            Mov [bx].CPFault,CPNoError	    Mov [bx].CPMIntCount,CPNoCount	    CALL ExtNewStartCp	    Mov bx,[si].TCBPointer ;Get Index to TCB	    TEST [bx].CPTestControl,CPParityTest	    jz   NotParity	    jmp   DoParityNotParity:  Call ExtDoRunTimeWork	    CALL WaitThisTime	    Test [DI].JumpControl,TelescopeAutoSet	    jnz CPStart	    Test [DI].JumpControl,TelescopeR	    jz TestForward	    jmp TelescopeReverseTestForward:Test [DI].JumpControl,TelescopeF	    jz TestAuto	    jmp TelescopeFowardTestAuto:   Test [DI].JumpControl,TelescopeA	    jz TestManual	    jmp TelescopeAutoTestManual: Test [DI].JumpControl,TelescopeIt	    jz CPEndTest	    CALL ExtTelescopeCp	    mov [DI].JumpControl,TelescopeSetCPEndTest:  CALL GetCPAddressCPEndTest1: CALL CheckCPAdress	    CALL CheckCPData3	    CALL CheckIntCount            TEST [bx].CPErrorControl,CPNoStop	    jnz   CPStart                Ret;-----------------------------------------------------------------	TelescopeAuto:MOV [DI].JumpControl,TelescopeR+TelescopeSet            call ExtSetTelValues	    jmp CPStart	    TelescopeReverse:CALL GetCPAddress	    Mov ax,[di].InCSAddress	    cmp  [bx].CPObservedCS,ax	    je  TRNotDone	    CALL ExtUnTelescopeCp	    inc [DI].JumpFile	    jmp SetTForwardTRNotDone:  CALL ExtUnTelescopeCp            cmp [DI].JumpFile,3            je AllDone	    dec [DI].JumpFileTAgain:	    CALL ExtTelescopeCp	    jmp CPStart	    AllDone:    MOV [DI].JumpControl,TelescopeSet+TelescopeAutoSet            CALL ExtTelescopeCp	    jmp TMessage		        SetTForward:MOV [DI].JumpControl,TelescopeF+TelescopeSet            CALL ExtTelescopeCp            jmp CkTFDone		        TelescopeFoward:CALL GetCPAddress	    Mov ax,[di].InCSAddress	    cmp  [bx].CPObservedCS,ax	    jne  TFBackOneCkTFDone:   Mov al,[DI].JumpTest	    inc al	    cmp  al,[DI].JumpFile	    je TFDone	    CALL ExtUnTelescopeCp	    inc [DI].JumpTest	    jmp TAgainTFBackOne:  CALL ExtUnTelescopeCp	    dec [DI].JumpTest	    CALL ExtTelescopeCpTFDone:     MOV [DI].JumpControl,TelescopeSet+TelescopeAutoSet            Mov al,[DI].JumpTest	    inc al 	    cmp al,[DI].JumpFile	    je TMessage	    Mov al,1	    jmp TMessage1TMessage:   Mov al,[DI].JumpTestTMessage1:  Mov ah,[si].TestN            CALL ExtMessage	    jmp CPStart	    	     	       ;-----------------------------------------------------------------	DoParity:   CALL SetCPAddress	    mov cx,CPLoopCountDoParityLoop:push cx	    CALL CpStartCS             pop cx	    CALL CheckCPAdress            CALL CheckCParityData3	    push cx            CALL IncCPAddress	    pop cx            LOOP DoParityLoop	    CALL CpStartCS	    Mov ax,0FF0H	    or al,[si].TestN	    Mov [bx].CPExpectedCS,AX	    jmp  CPEndTest1	    CpStartCS:  CALL ExtNewStartCp	    CALL WaitThisTime	    CALL GetCPAddress	    Ret	    	    	    CPError: or [bx].CPFault,dl 	 or [di].MesaFault,dl	 TEST [bx].CPErrorControl,CPStopOnLast + CPNoStop	 jz   CPErrorRet	 RetCPErrorRet: Pop ax ;pull one call from stack and return to Monitor                Ret	    CheckCPAdress:Mov dl,CPCSAddressError 	     Mov ax,[di].InCSAddress	     CPCompareCSReg:Mov [bx].CPObservedCS,ax	     cmp  [bx].CPExpectedCS,ax	     je CPCompareRegCSRet	     jmp  CPErrorCPCompareRegCSRet:Ret	     CheckCPData3:Mov dl,CPCSEndingData3 	     Mov ax,0	     Mov al,[di].InCSData3             Mov [bx].CPObservedData,ax	     Mov al,[bx].CPEndingData3	     CPCompareReg:Mov [bx].CPExpectedData,ax	     cmp  [bx].CPObservedData,ax	     je CPCompareRegRet	     jmp  CPErrorCPCompareRegRet:Ret	     CheckCParityData3:Mov dl,CPCSNoParityData3 	     Mov ax,0	     Mov al,[di].InCSData3	     and ax,1	     Mov [bx].CPObservedData,ax	     Mov al,[bx].CPParityData3	     jmp  CPCompareReg	     CheckIntCount: TEST [bx].CPErrorControl,CPNoMesaIntError             jnz CPCompareRegRet	     Mov dl,CPIntCountError	     Mov ax,0	     Mov al,[bx].CPMIntCount	     Mov [bx].CPObservedData,ax	     Mov al,[bx].CPExpectedIntCount	     jmp  CPCompareReg	    GetCPAddress:CALL ExtStopCp	     CALL ExtReadShift	     Mov bx,[si].TCBPointer ;Get Index to TC             Ret	     SetCPAddress:Mov [bx].CPExpectedCS,0             CALL Read200TestN	     Mov ax,9EH	     SetCPAddressRet:CALL CpCountOut             RETIncCPAddress:CALL Read200TestN	     Mov ax,[di].InCSData2	     add ax,2	     and ax,1FFEH	     jmp SetCPAddressRet	    CpCountOut: or ax,dx	    MOV [di].OutCSData2,ax	    mov dl,0	    MOV cx, 13CpCountOutLoop:SHR ax,1	    jnc CpCountOutOk	    inc dlCpCountOutOk: LOOP CpCountOutLoop	    Mov ax,[di].InCSData2	    MOV cx, 13CpCountInLoop:SHR ax,1	    jnc CpCountInOk	    dec dlCpCountInOk: LOOP CpCountInLoop	    TEST dl,1	    jz CpCountOutRet	    xor [di].OutCSData2,0001HCpCountOutRet:Call ExtWriteCSWord ;will write loc at OutCSAddress	    ret	    Read200TestN:Mov ax,200H	    or al,[si].TestN	    MOV  [di].OutCSAddress,ax	    CALL ExtReadCSWord ;will read loc at OutCSAddress	    Mov ax,[di].InCSData0	    Mov  [di].OutCSData0,ax	    Mov ax,[di].InCSData1	    Mov  [di].OutCSData1,ax	    Mov al,[di].InCSData3	    Mov  [di].OutCSData3,al	    Mov dx,[di].InCSData2	    and dx,0E001H	    ret		    WaitThisTime:   mov cx,[bx].CPWaitTime                TEST [bx].CPTestControl,CPStopStartTest                jnz SWaitThisTimeOWaitThisTimeO:  push cx                mov cx,1000WaitThisTimeI:  LOOP WaitThisTimeI		pop cx                LOOP WaitThisTimeO                Ret		SWaitThisTimeO:  push cx                mov cx,100SWaitThisTimeI: CALL ExtStopCp                CALL ExtStartCp                LOOP SWaitThisTimeI		pop cx                LOOP SWaitThisTimeO                Ret			        	    SetVectors: CLI ;this should temp disable interrupts.             MOV AX,0                MOV  DS,AX		            MOV  BX, ExtInterruptV1		    MOV  AX, OFFSET MemParityInt		    MOV  [bx].ParityV, AX	    MOV  BX, ExtInterruptV2		    MOV  AX, OFFSET MesaPInt		    MOV  [bx].MesaV, AX	    MOV  AX,CS	    MOV  DS,AX	    AND  [di].EnableIntC1C2,ParityIntEnAble             AND  [di].EnableIntC1C2,MesaIntEnAble 	    MOV ParityCount,0	    CALL  ExtResetMesaInt            CALL ExtReadMemStatus            CALL ExtReadMemStatus            CALL ExtReadMemStatus            CALL ExtEnableIntSetVectorRet:STI ;Re-Enable the Interrupts	    RetMemParityInt:ClI	;disable interrupts	    PUSHA	    MOV	DI, ExtMCBlock ;Index to Monitor Control Block	    MOV	SI, ExtMFCBlock ;Index to Monitor File Control Block	    Mov bx,[si].TCBPointer ;Get Index to TCB	    TEST [bx].CPErrorControl,CPNoMemParity	    jnz MemParityIntRet 	    or [di].IOPFault,MemoryParityErrorMemParityIntRet:MOV  AL, nonSpecificEOI			;Reset IS0	    OUT  i8259MasterAddr0, Al		;  OCW2_ 061h 	    cmp ParityCount,00FFH	    JE MemParityRet            CALL ExtReadMemStatus	    inc  ParityCount    MemParityRet:POPA            STI					;Reanable the interrupts	    IRet ParityCount Dw 0 MesaPInt:   ClI					;disable interrupts	    PUSHA	    MOV	SI, ExtMFCBlock ;Index to Monitor File Control Block	    Mov bx,[si].TCBPointer ;Get Index to TCB	    inc [bx].CPMIntCountMesaPIntRet:MOV  AL, nonSpecificEOI			;Reset IS5	    OUT  i8259SlaveAddr0, Al		;  OCW2_ 061h 	    MOV  AL, 00Bh			;Set up to read IS register	    OUT  i8259SlaveAddr0, Al		;OCW3_ 00Bh	    IN   AL, i8259SlaveAddr0		;Read Slave 8259 IS register	    CMP  AL, 0				;Check if another interrupt is	    JNZ  ClearMesaInt			;  in service	    MOV  AL, nonSpecificEOI		;Write an EOI command for the 		    OUT  i8259MasterAddr0, AL		;  Master 8259ClearMesaInt:CALL  ExtResetMesaInt            TEST [bx].CPIntControl,CPDoCountOnly	    jnz MesaPIntRt 	    CALL ExtInterruptCpMesaPIntRt: POPA	    STI					;Reanable the interrupts	    IRetCPPreProcess: Ret	CPFRUList: mov Bx,0 	   mov BL, [SI].TestN	   SHL Bx,1	   mov ax, WORD PTR CPList0 [bx]	   CALL ExtMessageCPFRUList1:CALL ExtDoRunTimeWork	   cmp [di].CurrentInputByte,KSP	   jne CPFRUList1	   Ret CPList0 DW  0102EHCPList1 DW  0120EHCPList2 DW  0120EHCPList3 DW  0120EHCPList4 DW  0102EHCPList5 DW  0120EHCPList6 DW  0120EHCPList7 DW  0123EH   MonitorCode	ENDS	END 