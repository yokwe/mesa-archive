$	DEBUG MOD186;MoonMemoryTest.asm	NAME	MoonMemoryAnalisis$	TITLE(Analisis)$	NOLIST		;Next line includes Daisy.def	$	INCLUDE(MoonSys.def)$	INCLUDE(MOONLINK.def);-----------------------------------------------------------------MTCBlock  STRUC  MMesaIntCount 		DB  0MInterFaceControl 	DB  0MPageParity 		DB  0MBankParity 		DB  0MIOPErrorControl 	DB  0MTimeOut		DB  0MMemoryControl 		DB  0MDisplayControl 	DB  0MCSAddress 		DW  0MEndIOPPage		DB  0MEndIOPBank 		DB  0MEndIOPWord		DB  0MEndIOPDataType		DB  0MIOPStartPassData	DW  0MIOPExpectedData	DW  0MIOPObservedData	DW  0MPassCount		DB  0MSpare0			DB  0MStartPage		DB  0MStartBank		DB  0MEndPage		DB  0MEndBank		DB  0MEndWord		DB  0MStartWord		DB  0MStartMapPage		DB  0MStartMapBank		DB  0MEndMapPage		DB  0MEndMapBank		DB  0MStartData		DW  0MTestControl		DB  0MStartDataType		DB  0MMesaErrorControl	DB  0MDataControl		DB  0MDelayTime		DW  0MTCBlock ENDS;Have to split struc because of assemblerMRMCTBLoc equ 40 ;OffSet to add to TCBPointer infoMTCBlock0  STRUC  MEndMesaPage		DB  0MEndMesaBank		DB  0MEndMesaWord		DB  0MEndMesaDataType	DB  0MMesaStartPassData	DW  0MMesaExpectedData	DW  0MMesaObservedData	DW  0MSpare1			DB  0MMesaFault		DB  0MTCBlock0 ENDS;InterFace ControlMRunMesaOnly	equ 0MRunMesaAndIOP	equ 1MRunIOPOnly	equ 2MRunPCOnly	equ 3MNoStopStartMesa	equ 40H;State CounterMNoInterrupts	equ 0;Error ControlMStopOnError		equ 0MStopOnPhaseDone	equ 1MReStartOnError		equ 2MReStartOnPhaseDone	equ 3MNoCSAddOnTimeOut	equ 8 ;(IOP Only)MNoMemoryParityErrors	equ 80h ;(IOP Only);Display ControlMDisplayOn		equ 1;Data Type ControlMBlockType		equ 0MAddressType		equ 1MRandomPlusType		equ 2MRandomXORType		equ 3MBankType		equ 4;Test ControlMStore			equ 0MCheck			equ 1MStoreAndCheck		equ 2MMapStore		equ 3MMapCheck		equ 4MMapStoreAndCheck	equ 5MSizeStore		equ 6MSizeCheck		equ 7MSizeStoreAndCheck	equ 8;Data ControlMIncData		equ 1MIncDataType		equ 2;Fault ControlMNoError		equ 0MDataError		equ 1MMapDataError		equ 2MMemSizeError		equ 8MemDataInc		equ 01hLastTCB 		equ 15H;-----------------------------------------------------------------$	LIST		;Previous line included Daisy.def;--------------------------------------------MonitorCode	SEGMENT COMMON	ASSUME	CS:MonitorCode, SS:MonitorCode, DS:MonitorCode, ES:MonitorCode	ORG MemAnalizeCodeLoc ;-----------------------------------------------------------------         jmp AnalisisStart	 jmp ClearLog	 jmp ParityDataLog	 jmp ParityAddressLog;-----------------------------------------------------------------	      AnalisisStart:  Test [DI].JumpControl,AnilizeIt		jz   AnalisisRetAnalisisSet:	Test [DI].JumpControl,Anilizeing		jz   CkForError 		jmp InnerLoopWakeCkForError:	mov   al,[DI].IOPFault		Test al,IOTimeOutError+IOPMemorySizeError+EarlyExpectedInterrupt+NoExpectedInterrupt+UnExpectedInterrupt		jnz   AnalisisRet		or    al,[DI].MesaFault		jnz   DataLoopAnalisisRet:	Ret ;Back to MonitorDataLoop:      Call ClearLog	       or [DI].JumpControl,Anilizeing	       Call LogError	       Call OldTCBToNewTCB	       mov BX,[SI].TCBPointer	       Call DataSeq	       Test al,IOTimeOutError+IOPMemorySizeError+EarlyExpectedInterrupt+NoExpectedInterrupt+UnExpectedInterrupt	       jnz   DataLoopRet	       mov  al,[BX].MStartBank	       mov  [BX].MEndBank,al	       Call BankLoopDataLoopRet:   mov [DI].JumpControl,NoAnilize	       mov al,OldTestNumber	       mov [SI].TestN,al	       mov al,OldIOPFault	       or  [DI].IOPFault,al	       mov al,OldMesaFault	       mov [DI].MesaFault,al	       mov ax,OldTCBPointer	       mov [SI].TCBPointer,ax	       Ret;Back to MonitorBankLoop:      Call DataSeq	       Call GetNextLegalBank	       jmp BankLoop	       		DataSeq:       Call OldDataToNewData	       mov [BX].MPageParity,0	       mov [BX].MBankParity,0	       Call InnerLoop	       Test al,IOTimeOutError+IOPMemorySizeError+EarlyExpectedInterrupt+NoExpectedInterrupt+UnExpectedInterrupt	       jnz   DataSeqRet	       Call OldDataToNewData	       mov [BX].MPageParity,0	       mov [BX].MBankParity,0	       xor [BX].MStartData,0FFFFH	       Call InnerLoopDataSeqRet:    RetInnerLoop:      mov cx,3InnerLoop1:     PUSHA                Mov [DI].IOPFault,0		Mov [DI].MesaFault,0		Mov ax,0CA15H		Call ExtMessage                jmp ExtTestCode		InnerLoopWake:  POPA                mov al,[DI].IOPFault		Test al,IOTimeOutError+IOPMemorySizeError+EarlyExpectedInterrupt+NoExpectedInterrupt+UnExpectedInterrupt		jnz   InnerLoopRet		or    al,[DI].MesaFault		jnz   InnerLoop2		cmp [BX].MBankParity,0		jz   InnerLoopRet		InnerLoop2:     PUSHA                Call LogError		POPA		cmp [BX].MInterFaceControl,MRunMesaOnly		jnz InnerLoopRet		loop InnerLoop1InnerLoopRet:	Ret		OldTCBToNewTCB:	mov bX,[SI].TCBPointer	        mov al,[SI].TestN	        mov OldTestNumber,al	        mov al,[DI].IOPFault	        mov OldIOPFault,al		mov al,[DI].MesaFault	        mov OldMesaFault,al		mov OldTCBPointer,bx	        mov al,[BX].MEndBank	        mov OldMEndBank,al                mov [SI].TestN,LastTCB		Call ExtSetTCBPointer		mov DX,[SI].TCBPointer		mov BX,OldTCBPointer		mov cX,0		mov cl, [SI].TestSizeConf                and cl,SizeMask ;This is in words		shl cl,1OldTCBLoop:     mov al,BYTE PTR [bx]		xchg bx,dx		mov BYTE PTR [bx],al		xchg bx,dx		inc dx		inc bx		loop OldTCBLoop				mov BX,[SI].TCBPointer		mov [BX].MPassCount,1		mov [BX].MDelayTime,1		mov ax,[BX].MIOPStartPassData	        mov OldMStartData,ax		mov al,[BX].MEndIOPDataType	        mov [BX].MStartDataType,al		cmp OldMesaFault,0		je OldTCBToNewTCBRet		add bx,40		mov ax,[BX].MMesaStartPassData	        mov OldMStartData,ax                mov al,[BX].MEndMesaDataType		mov BX,[SI].TCBPointer	        mov [BX].MStartDataType,al		mov ax,OldMStartData		mov [BX].MStartData,axOldTCBToNewTCBRet:RetOldDataToNewData:mov ax,OldMStartData		mov [BX].MStartData,ax		retGetNextLegalBank:mov ah,[bx].MStartBank	    cmp ah,OldMEndBank	    je AHighMatch	    inc ah	    inc [bx].MStartBank	    inc [bx].MEndBank 	    mov cx,0	    mov cl,[bx].MStartBank	    mov ax,1	    Test [bx].MStartBank,10H	    jnz AUpperBank	    Test cl,0FH	    jz AShiftBankBit1AShiftBankBit:shl ax,1	    loop AShiftBankBitAShiftBankBit1:and ax,WORD PTR [DI][ExtMemConf]AShiftBankBitRet:jz GetNextLegalBank	    retAUpperBank:  and cl,0FH	    jz AUpperBank1UAShiftBankBit:shl ax,1	    loop UAShiftBankBitAUpperBank1: and ax,WORD PTR [DI][ExtMemConf1]	    JMP AShiftBankBitRet	    	    AHighMatch:  Pop ax ;Pull one call If No More Legal Banks	    Ret	    LogError:   mov BX,[SI].TCBPointer	    cmp [DI].MesaFault,MNoError	    jz CKIOP	    Call MesaLogCKIOP:	    Test [DI].IOPFault,IOPDataError	    jz CKParity	    Call IOPLog CKParity:   Test [DI].IOPFault,MemoryParityError	    jz LogErrorRet	    Call ParityLogLogErrorRet:RetMesaLog:    add bx,MRMCTBLoc	    mov ax,[BX].MMesaExpectedData	    xor ax,[BX].MMesaObservedData	    mov dh,[bx].MEndMesaPage	    mov dl,[bx].MEndMesaWord	    mov cl,[bx].MEndMesaBankMesaLogRet: Call LogIt	    Mov bx,[si].TCBPointer ;Get Index to TCB	    RetIOPLog:     mov ax,[BX].MIOPExpectedData	    xor ax,[BX].MIOPObservedData	    mov dh,[bx].MEndIOPPage	    mov dl,[bx].MEndIOPWord	    mov cl,[bx].MEndIOPBank	    jmp MesaLogRet	    	    ParityLog:  mov dh,[bx].MBankParity	    mov dl,[bx].MPageParity	    XOR DX,1FFH	    mov aX,dx	    shl aX,1	    shl dX,1	    AND AH,1FH	    mov cl,ah	    mov ax,0	    jmp MesaLogRet	     LogIt:     MOV ch,0	   Mov bx,MemLogCodeLoc	   cmp cl,0	   jz GotLogItLocLogItLoc:  add bx,5	   loop LogItLocGotLogItLoc:mov WORD PTR [BX],dx	   add bx,2	   or WORD PTR [BX],ax	   jnz LogItRet	   add bx,2	   or BYTE PTR [BX],1LogItRet:  RETClearLog:  MOV cx,MemLogCodeSize	   Mov bx,MemLogCodeLocClearLogLoop: mov BYTE PTR [BX],0	   inc bx	   Loop ClearLogLoop	   Ret	   	   ParityDataLog: MOV cl,0	   Mov bx,MemLogCodeLocDNextBank: add bx,2	   Call ShowDataBits           cmp [di].CurrentInputByte,KSP	   je DNextBankRet	   add bx,2	   Call ShowParity           cmp [di].CurrentInputByte,KSP	   je DNextBankRet	   cmp cl,32	   je  DNextBankRet	   add bx,1	   inc cl	   jmp DNextBankDNextBankRet:Ret	   	   ParityAddressLog: MOV cl,0	   Mov bx,MemLogCodeLocANextBank: Call ShowAddress           cmp [di].CurrentInputByte,KSP	   je ANextBankRet	   cmp cl,32	   je  ANextBankRet	   add bx,5	   inc cl	   jmp ANextBankANextBankRet:RetShowDataBits:mov dx, WORD PTR [BX]	   mov ah,cl	   mov al,0ShowDataBits1: shr dx,1	   jnc  ShowDataBits2	   CALL ShowWord	   cmp [di].CurrentInputByte,KSP	   je ShowDataBitsRetShowDataBits2: inc al	   cmp al,16	   je ShowDataBitsRet	   jmp ShowDataBits1	   ShowDataBitsRet:Ret 	      	   ShowWord:  CALL ExtMessageShowWord1: PUSHA	   CALL ExtGetNextKey ;Pop Next Byte from Input Buffer	   POPA	   cmp [di].CurrentInputByte,KCR	   je ShowWordRet	   cmp [di].CurrentInputByte,KSP	   je SpExitRet	   jmp ShowWord1ShowWordRet:Ret SpExitRet:  pop ax ;Pop one Near Call From Stack	    RetShowAddress:mov ax, WORD PTR [BX]	   add bx,2	   mov dx, WORD PTR [BX]	   add bx,2	   or dl,BYTE PTR [BX]	   sub bx,4	   cmp dx,0	   jnz   ShowWord	   Ret	     ShowParity: mov ah,cl	    mov al,16	    mov dl, BYTE PTR [BX]	    cmp dl,0	    jnz  ShowWord	    ret	    	    OldTestNumber DB ?OldIOPFault   DB ?OldMesaFault  DB ?OldMEndBank   DB ?OldTCBPointer DW ?OldMStartData DW ?	                     MonitorCode	ENDS	END 