-- NSNameExtrasImpl.mesa-- Last edited by Alfvin:  5-Jan-84 11:54:32-- last edited by Hankins   5-Apr-84 16:47:05DIRECTORY  XFormat USING [Char, Handle, NSString],  NSName USING [FreeName, Name],  NSNameExtras,  NSString USING [String],  NSStringExtras,  XString USING [Equivalent, FromNSString, ReaderBody];   NSNameExtrasImpl: PROGRAM   IMPORTS NSName, XFormat, XString EXPORTS NSNameExtras, NSStringExtras  =  BEGIN  EquivalentStrings: PUBLIC PROC[s1, s2: NSString.String] RETURNS [BOOLEAN] =    --  TRUE if the two strings are equal, disregarding case.    BEGIN    x1: XString.ReaderBody _ XString.FromNSString[s1];    x2: XString.ReaderBody _ XString.FromNSString[s2];    RETURN LOOPHOLE[XString.Equivalent[@x1, @x2]];      -- Equivalent does decasing.    END;    EquivalentNames: PUBLIC PROCEDURE [n1, n2: NSName.Name,    ignoreLocal, ignoreDomain, ignoreOrg: BOOLEAN _ FALSE]    RETURNS [same: BOOLEAN] =     -- Returns TRUE if the two names are equivalent, ignoring case.    BEGIN    IF NOT ignoreLocal THEN       IF NOT EquivalentStrings[n1.local, n2.local] THEN RETURN[FALSE];    IF NOT ignoreDomain THEN      IF NOT EquivalentStrings[n1.domain, n2.domain] THEN RETURN[FALSE];    IF NOT ignoreOrg THEN       IF NOT EquivalentStrings[s1: n1.org, s2: n2.org] THEN RETURN[FALSE];    RETURN[TRUE];    END;      Format: PUBLIC PROC [    h: XFormat.Handle, name: NSName.Name, defaults: NSName.Name] =  BEGIN    sameDomain, sameOrg: BOOLEAN _ FALSE;    IF defaults # NIL THEN {      sameDomain _ EquivalentStrings[name.domain, defaults.domain];      sameOrg _ EquivalentStrings[name.org, defaults.org]};    h.NSString[name.local];    IF ~sameOrg OR ~sameDomain THEN {h.Char[':.ORD]; h.NSString[name.domain]};    IF ~sameDomain THEN {h.Char[':.ORD]; h.NSString[name.org]};  END;  FreeName: PUBLIC PROC [z: UNCOUNTED ZONE, name: LONG POINTER TO NSName.Name] =    {NSName.FreeName[z, name^]; name^ _ NIL};END.