DIRECTORY NSString;NSStringConvertInternal: DEFINITIONS =BEGINunknownChar: NSString.Character = [255, 0];LeftHalf: TYPE = CharIndex[c41B..c177B];RightHalf: TYPE = CharIndex[c241B..c377B];LeftHalfTable: TYPE = ARRAY LeftHalf OF CharDefaultUnknown;RightHalfTable: TYPE = ARRAY RightHalf OF CharDefaultUnknown;CharDefaultUnknown: TYPE = NSString.Character _ unknownChar;ChineseKanjiChset: TYPE = [241B..337B];  ConvertProc: TYPE = PROC [c: NSString.Character] RETURNS [NSString.Character];<< Must interpret all legal chsets     Interim => legal is any chset except 377B     Standard => legal is any chset in 0, [41B..176B], and [241B..376B]   Must interpret all codes in [41B..176B] and [241B..376B]   Should signal NSStringConvert.Error[unknownChar, c] for unknown chars.  All illegal   chsets will be detected by the mainline software. >>-- The following procedures are intended to be exported by independent modulesConvertInterimToXC82: ConvertProc;ConvertXC82ToInterim: ConvertProc;ConvertStandardToXC82: ConvertProc;ConvertXC82ToStandard: ConvertProc;CharIndex: TYPE = MACHINE DEPENDENT {  c41B(41B), c42B(42B), c43B(43B), c44B(44B), c45B(45B), c46B(46B), c47B(47B), c50B(50B), c51B(51B), c52B(52B), c53B(53B), c54B(54B), c55B(55B), c56B(56B), c57B(57B), c60B(60B), c61B(61B), c62B(62B), c63B(63B), c64B(64B), c65B(65B), c66B(66B), c67B(67B), c70B(70B), c71B(71B), c72B(72B), c73B(73B), c74B(74B), c75B(75B), c76B(76B), c77B(77B), c100B(100B), c101B(101B), c102B(102B), c103B(103B), c104B(104B), c105B(105B), c106B(106B), c107B(107B), c110B(110B), c111B(111B), c112B(112B), c113B(113B), c114B(114B), c115B(115B), c116B(116B), c117B(117B), c120B(120B), c121B(121B), c122B(122B), c123B(123B), c124B(124B), c125B(125B), c126B(126B), c127B(127B), c130B(130B), c131B(131B), c132B(132B), c133B(133B), c134B(134B), c135B(135B), c136B(136B), c137B(137B), c140B(140B), c141B(141B), c142B(142B), c143B(143B), c144B(144B), c145B(145B), c146B(146B), c147B(147B), c150B(150B), c151B(151B), c152B(152B), c153B(153B), c154B(154B), c155B(155B), c156B(156B), c157B(157B), c160B(160B), c161B(161B), c162B(162B), c163B(163B), c164B(164B), c165B(165B), c166B(166B), c167B(167B), c170B(170B), c171B(171B), c172B(172B), c173B(173B), c174B(174B), c175B(175B), c176B(176B), c177B(177B), c241B(241B), c242B(242B), c243B(243B), c244B(244B), c245B(245B), c246B(246B), c247B(247B), c250B(250B), c251B(251B), c252B(252B), c253B(253B), c254B(254B), c255B(255B), c256B(256B), c257B(257B), c260B(260B), c261B(261B), c262B(262B), c263B(263B), c264B(264B), c265B(265B), c266B(266B), c267B(267B), c270B(270B), c271B(271B), c272B(272B), c273B(273B), c274B(274B), c275B(275B), c276B(276B), c277B(277B), c300B(300B), c301B(301B), c302B(302B), c303B(303B), c304B(304B), c305B(305B), c306B(306B), c307B(307B), c310B(310B), c311B(311B), c312B(312B), c313B(313B), c314B(314B), c315B(315B), c316B(316B), c317B(317B), c320B(320B), c321B(321B), c322B(322B), c323B(323B), c324B(324B), c325B(325B), c326B(326B), c327B(327B), c330B(330B), c331B(331B), c332B(332B), c333B(333B), c334B(334B), c335B(335B), c336B(336B), c337B(337B), c340B(340B), c341B(341B), c342B(342B), c343B(343B), c344B(344B), c345B(345B), c346B(346B), c347B(347B), c350B(350B), c351B(351B), c352B(352B), c353B(353B), c354B(354B), c355B(355B), c356B(356B), c357B(357B), c360B(360B), c361B(361B), c362B(362B), c363B(363B), c364B(364B), c365B(365B), c366B(366B), c367B(367B), c370B(370B), c371B(371B), c372B(372B), c373B(373B), c374B(374B), c375B(375B), c376B(376B), c377B(377B)};END.