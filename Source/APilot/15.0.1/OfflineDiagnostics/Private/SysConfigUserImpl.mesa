-- File SysConfigUserImpl.mesa-- Last edited by: STC	on 14-Oct-88  8:41:52 <<	Copyright (C) 1985, 1986, 1987, 1988 by Xerox Corporation. All rights reserved.		The following program was created in 1985 but has not been published within the meaning of the	copyright law, is furnished under license, and may not be used, copied and/or disclosed except	in accordance with the terms of said license.	>>DIRECTORY  EEpromDefs	        USING [ EEpromConfig, VersionNumberROM, VersionNumberRAM,  					VersionNumberBadPages ],  DiskUtilityMiscDove USING [ InitStarted, ManufDskCkOut, StartInit],  OfflineDiagInterface  USING [ GetYesNo, HitAnyKeyToContinue,				OfflineDiagnosticProc, PutMessage,				PutTestParameters, ResultType],--  ProcessorFaceExtras	USING [Version, VersionResult],  ProcessorFaceExtras2	USING [DoveMachineType, DoveMachineTypeInfo],  SysConfigSubDefs USING [GetFloppySize, GetKeyboardType,				GetMemorySize, GetRigidDiskType, 				GetUniversalOption, GetVMSize, 				UserShowAllEEprom],  SysConfigControlDefs  USING [ msgKey1, statusPtr, showConfig],  SysConfigChannelDefs  USING [ eePromImage, eePromPointer],  SysConfigEEPromDefs	USING [ ReadEEProm, WriteEEProm];    SysConfigUserImpl: PROGRAM	IMPORTS OfflineDiagInterface, DiskUtilityMiscDove, --	ProcessorFaceExtras,	ProcessorFaceExtras2,	SysConfigSubDefs, SysConfigControlDefs, SysConfigChannelDefs,	SysConfigEEPromDefs			EXPORTS SysConfigSubDefs =	BEGIN OPEN Misc: DiskUtilityMiscDove, Odi: OfflineDiagInterface,	SysConfigControlDefs, SysConfigChannelDefs;--******************************************************************************-- ConfigureUserStuff:  --******************************************************************************ConfigureUser: PUBLIC  Odi.OfflineDiagnosticProc =  BEGIN--  version: ProcessorFaceExtras.VersionResult ¬ ProcessorFaceExtras.Version[];  machineType: ProcessorFaceExtras2.DoveMachineType ¬ ProcessorFaceExtras2.DoveMachineTypeInfo[];  result ¬ none;	    SysConfigControlDefs.showConfig ¬ FALSE;      SysConfigControlDefs.statusPtr­ ¬ SysConfigEEPromDefs.ReadEEProm [];   IF SysConfigControlDefs.statusPtr­ # success THEN    BEGIN    FOR i: CARDINAL IN [0..64)      DO      eePromPointer[i] ¬ 0;      ENDLOOP;    eePromImage.VersionEProm ¬ EEpromDefs.VersionNumberROM;    eePromImage.VersionRAM ¬ EEpromDefs.VersionNumberRAM;    eePromImage.VersionBadPages ¬ EEpromDefs.VersionNumberBadPages;     eePromImage.BootDevice ¬ rigidDisk;    eePromImage.RigidBooting ¬ allowed;    eePromImage.FloppyBooting ¬ allowed;    eePromImage.EthrenetBooting ¬ allowed;    eePromImage.DisplayPresent ¬ present;    eePromImage.Keyboard ¬ english;    eePromImage.VMMSizeInPages ¬vm16mega;    eePromImage.ControlStoreSize ¬ cs4k;    eePromImage.HardwareVersion ¬ B2;    eePromImage.DefaultBootDiag ¬ runDiags;    eePromImage.DefaultDiagnostics ¬ fast;    eePromImage.FloppyDiskTypeDrive0 ¬ kb360;    eePromImage.FloppyDiskTypeDrive1 ¬ none;    eePromImage.MainMemory0 ¬ present;    eePromImage.MainMemory1 ¬ present;    IF machineType = daisy THEN {      eePromImage.MainMemory2 ¬ present;      eePromImage.MainMemory3 ¬ present;      eePromImage.MainMemory4 ¬ present;      eePromImage.MainMemory5 ¬ present;      eePromImage.MainMemory6 ¬ present;      eePromImage.MainMemory7 ¬ present;      eePromImage.MainMemory8 ¬ notPresent;      eePromImage.MainMemory9 ¬ notPresent;      eePromImage.MainMemory10 ¬ notPresent;      eePromImage.MainMemory11 ¬ notPresent;      eePromImage.MainMemory12 ¬ notPresent;      eePromImage.MainMemory13 ¬ notPresent;      eePromImage.MainMemory14 ¬ notPresent;      eePromImage.MainMemory15 ¬ notPresent;      eePromImage.MainMemoryExpansion ¬ mega1}    ELSE {      IF machineType = duke OR machineType = diana THEN {	eePromImage.MainMemory2 _ present;	eePromImage.MainMemory3 _ present;	eePromImage.MainMemory4 _ present;	eePromImage.MainMemory5 _ present;	eePromImage.MainMemory6 _ present;	eePromImage.MainMemory7 _ present}      ELSE {      eePromImage.MainMemory2 ¬ notPresent;      eePromImage.MainMemory3 ¬ notPresent;      eePromImage.MainMemory4 ¬ notPresent;      eePromImage.MainMemory5 ¬ notPresent;      eePromImage.MainMemory6 ¬ notPresent;      eePromImage.MainMemory7 ¬ notPresent};      eePromImage.MainMemory8 ¬ present;      eePromImage.MainMemory9 ¬ present;      eePromImage.MainMemory10 ¬ present;      eePromImage.MainMemory11 ¬ present;      eePromImage.MainMemory12 ¬ present;      eePromImage.MainMemory13 ¬ present;      eePromImage.MainMemory14 ¬ present;      eePromImage.MainMemory15 ¬ present;      eePromImage.MainMemoryExpansion ¬ k512};    END;   [] ¬ SysConfigSubDefs.GetKeyboardType[];  [] ¬ SysConfigSubDefs.GetRigidDiskType[];  [] ¬ SysConfigSubDefs.GetMemorySize[];  [] ¬ SysConfigSubDefs.GetFloppySize[];    [] ¬  Odi.PutTestParameters [      parameters: NIL,      upDateOnly:FALSE];   Odi.PutMessage [message:msgKey1[enterYesOrNoOrReturn],    clearMessageAreaFirst:TRUE];	  IF [] ¬ Odi.GetYesNo [prompt: msgKey1[cartridgeUser], defaultSpecified:TRUE,  			default:SELECT eePromImage.FloppyDiskTypeDrive1 FROM					fad5000 => TRUE					ENDCASE => FALSE ]   		THEN {eePromImage.FloppyDiskTypeDrive1 ¬ fad5000; }  		ELSE {eePromImage.FloppyDiskTypeDrive1 ¬ none; };	   Odi.PutMessage [message:msgKey1[enterYesOrNoOrReturn],    clearMessageAreaFirst:TRUE];  IF [] ¬ Odi.GetYesNo [prompt: msgKey1[etherUser], defaultSpecified:TRUE,  			default:SELECT eePromImage.EthrenetBooting FROM					allowed => TRUE					ENDCASE => FALSE ]   		THEN {eePromImage.EthrenetBooting ¬ allowed; }  		ELSE {eePromImage.EthrenetBooting ¬ notAllowed; };	   Odi.PutMessage [message:msgKey1[enterYesOrNoOrReturn],    clearMessageAreaFirst:TRUE];  IF [] ¬ Odi.GetYesNo [prompt: msgKey1[PCOUser], defaultSpecified:TRUE,  			default:SELECT eePromImage.PCOptionBoard FROM					1 => TRUE					ENDCASE => FALSE ]   		THEN {eePromImage.PCOptionBoard ¬ 1;  		     eePromImage.PCOptionHardware1 ¬ 1; }		ELSE {eePromImage.PCOptionBoard ¬ 0;  		       eePromImage.PCOptionHardware1 ¬ 0; };  [] ¬ SysConfigSubDefs.GetUniversalOption[];  [] ¬ SysConfigSubDefs.GetVMSize[];  [] ¬  Odi.PutTestParameters [      parameters: NIL,      upDateOnly:FALSE];  Odi.PutMessage [message: msgKey1[enterYesOrNoOrReturn],    clearMessageAreaFirst:TRUE];  IF [] ¬ Odi.GetYesNo [prompt: msgKey1[diagAtTimeout], defaultSpecified:TRUE,  			default:SELECT eePromImage.DefaultBootDiag FROM					runDiags => TRUE					ENDCASE => FALSE ]   		THEN eePromImage.DefaultBootDiag ¬ runDiags		ELSE eePromImage.DefaultBootDiag ¬ noDiags;  [] ¬ SysConfigSubDefs.UserShowAllEEprom[];    Odi.PutMessage [message:msgKey1[confirmUser1], clearMessageAreaFirst:TRUE];  Odi.PutMessage [message:msgKey1[enterYesOrNo], clearMessageAreaFirst:FALSE];     IF Odi.GetYesNo [prompt: msgKey1[questionUser1], defaultSpecified:FALSE]     THEN {Odi.PutMessage [message:msgKey1[confirmUser2], clearMessageAreaFirst:TRUE];      	   Odi.PutMessage [message:msgKey1[enterYesOrNo], clearMessageAreaFirst:FALSE];           IF Odi.GetYesNo [prompt: msgKey1[questionUser2], defaultSpecified:FALSE]	   THEN { 	      eePromImage.VersionEProm ¬ EEpromDefs.VersionNumberROM;	      eePromImage.VersionRAM ¬ EEpromDefs.VersionNumberRAM;	      eePromImage.VersionBadPages ¬ EEpromDefs.VersionNumberBadPages;	      	  <<  eePromImage.BootingSpare ¬ 0;	--THIS CODE IS ALSO IN SysConfigEEPromImpl.mesa	      eePromImage.unused4 ¬ 0;	--and must be changed in **BOTH** places	      eePromImage.SpareRomRam1 ¬ 0;	--if there is to be a change.	      eePromImage.DefaultSpares ¬ 0;	      eePromImage.SpareRomRam2 ¬ 0;	      eePromImage.SpareRomRam3 ¬ 0;	      eePromImage.SpareRomRam4 ¬ 0;	      eePromImage.SpareRomRam5 ¬ 0;	      eePromImage.SpareRomRam6 ¬ 0;	      eePromImage.SpareRomRam7 ¬ 0;	      eePromImage.SpareRomRam8 ¬ 0;	      eePromImage.SpareRomRam9 ¬ 0;	      eePromImage.SpareRomRam10 ¬ 0;	      eePromImage.SpareRomRam11 ¬ 0;	      eePromImage.SpareRomRam12 ¬ 0;	      eePromImage.SpareRomRam13 ¬ 0; >>	      	      Misc.ManufDskCkOut ¬ FALSE; -- STC, 13-Oct-88 13:41:08	      IF ~Misc.InitStarted THEN Misc.StartInit []; -- STC, 13-Oct-88	      IF SysConfigEEPromDefs.WriteEEProm [] = success		  THEN {result ¬ passed; 		    Odi.PutMessage[message:msgKey1[userEEPromUpdated]]}		  ELSE {result ¬ failed;}		 }	   ELSE Odi.PutMessage [message:msgKey1[userEEPromAborted], clearMessageAreaFirst:TRUE]}        ELSE      	Odi.PutMessage [message:msgKey1[userEEPromAborted], 	clearMessageAreaFirst:TRUE];       SysConfigControlDefs.showConfig ¬ TRUE;  Odi.HitAnyKeyToContinue[];    -- USER     END; -- ConfigureUser  END...LOG.Created on 4-Sep-85 16:31:36 by Allen Roberts11-Oct-85 11:09:47	By: AMR23-Jan-86 13:12:22	By: RRP	changes for 12.22-Dec-86 16:24:40	By: RDM	Explicitly set ResultType.8-Jan-87 14:14:43	By: RDM	Add GetUniversalOption.13-Jan-87 14:12:45	By: RDM	Set VMMSizeInPages to vm16mega instead of vm8mega.29-Jan-87 17:44:05	By: RDM	Check for daisy memory configuration.3-Feb-87 12:20:40	By: RDM	Change VERSION to Version in ProcessorFaceExtras.31-Mar-87 15:05:41	By: KXW	Modified ConfigureUser not to preset VMMSizeInPages(AR10412).13-May-87 13:21:29	By: JPM Use higher-level EEProm read/write (to incorporate self-describing disk shape)16-Oct-87 20:05:56, STC, convert to 14.029-Jan-88 14:24:27, STC, add cartridge tape option 2-Oct-88 18:53:46, STC, add memory option, Labelless14-Oct-88  8:41:44, STC, roll over bug fix in normal user Set Config