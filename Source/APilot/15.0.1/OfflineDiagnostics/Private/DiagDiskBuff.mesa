-- Copyright (C) 1984, 1985  by Xerox Corporation. All rights reserved. -- File: DiagDiskBuff.mesa---- DIRECTORY PhysicalVolume		USING	[PageNumber]; DiagDiskBuff: DEFINITIONS= BEGIN -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -- clears a buffer to all 0's (uses DiagDiskBuffImpl.mesa) -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -- clears a buffer to zeros of size (in words) @ ptr ZeroBuffer:		PUBLIC PROCEDURE [			   ptr: LONG POINTER TO ARRAY OF WORD¬ NIL,			   size: CARDINAL¬ 0]; -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -- generate buffers (uses DiagDiskBuffImpl.mesa) -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  -- generates a label buffer @ ptr GenLabelBuffer:	PUBLIC PROCEDURE [			   data: CARDINAL¬ 0,			   ptr: LONG POINTER TO ARRAY OF WORD¬ NIL,			   size: CARDINAL¬ 0,			   plusSectorCount: CARDINAL¬ 0]; -- generates a diagnostic label buffer @ ptr GenDiagLabelBuffer:	PUBLIC PROCEDURE [			   ptr: LONG POINTER TO ARRAY OF WORD¬ NIL,			   size: CARDINAL¬ 10,			   plusSectorCount: CARDINAL¬ 0];  -- generates a data buffer with the given data of size (in words) @ ptr GenDataBuffer:	PUBLIC PROCEDURE [			   data: CARDINAL¬ 0,			   ptr: LONG POINTER TO ARRAY OF WORD¬ NIL,			   size: CARDINAL¬ 0];   -- generates a special data buffer for the Tri rigid disks (1 page) @ ptr GenDiagDataBuffer:	PUBLIC PROCEDURE [			   ptr:	LONG POINTER TO ARRAY OF WORD¬ NIL,			   size: CARDINAL¬ 256]; -- generates a special data buffer for the Tri rigid disks (1 page) @ ptr GenFormatDataBuffer:	PUBLIC PROCEDURE [			   ptr:	LONG POINTER TO ARRAY OF WORD¬ NIL,			   size: CARDINAL¬ 256];  -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -- compare buffers (uses DiagDiskBuffImpl.mesa) -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~			    -- compares Disk header CompareHeader:	PUBLIC PROCEDURE RETURNS [			multiBitError:	BOOLEAN¬ FALSE,			cylinderError:	BOOLEAN¬ FALSE,			headError:	BOOLEAN¬ FALSE,			sectorError:	BOOLEAN¬ FALSE,			failsLow:	BOOLEAN¬ FALSE,			bit:		CARDINAL¬ 0];  -- compare buffers of given size CompareLabel:	PUBLIC PROCEDURE [			data:		CARDINAL,			goodDataPtr:	LONG POINTER TO ARRAY OF WORD¬ NIL,			compareDataPtr:	LONG POINTER TO ARRAY OF WORD¬ NIL,			size:		CARDINAL¬ 0]		RETURNS[labelError:	BOOLEAN¬ FALSE,			index:		CARDINAL,			expected:	CARDINAL,			observed:	CARDINAL]; -- compare buffers of given size CompareData:	PUBLIC PROCEDURE [			goodDataPtr:	LONG POINTER TO ARRAY OF WORD¬ NIL,			compareDataPtr:	LONG POINTER TO ARRAY OF WORD¬ NIL,			size:		CARDINAL¬ 0]		RETURNS[dataError:	BOOLEAN¬ FALSE,			index:		CARDINAL,			expected:	CARDINAL,			observed:	CARDINAL];			   		 -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -- convert a rigid disk address to a page number -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ AddrToPage:  PROCEDURE[cylinder: CARDINAL, head: CARDINAL, sector: CARDINAL]		RETURNS[pageNumber: PhysicalVolume.PageNumber]; -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -- convert  a page number to a rigid disk address -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ PageToAddr:  PROCEDURE [pageNumber: PhysicalVolume.PageNumber] 		RETURNS[cylinder: CARDINAL, head: CARDINAL, sector: CARDINAL];				 END...						 Edited: 				