-- File: CMDiagMsgKeysImplDove.mesa   -- Lasted edited on 17-Apr-89 10:49:27 by TXM---- Copyright (C) 1985, 1986, 1987, 1988, 1989 by Xerox Corporation. All rights reserved.-- -- This file implements the English version of CMDiagMsgKeysDove. The messages-- are used by various kernel modules.---- To implement non-English messages, perform the following:----    1) Replace "English" with <LanguageOfConcern>.--    2) Replace English messages with message in the language of concern.--DIRECTORY  CMDiagMsgKeysDove	USING	[DiagMessages, EnglishMessages],  Heap			USING	[Create],  String		USING	[CopyToNewString];				 CMDiagMsgKeysImplDove: PROGRAM  IMPORTS Heap, String  EXPORTS CMDiagMsgKeysDove =BEGIN  OPEN S: String;    cmMsgKeys: PUBLIC LONG DESCRIPTOR FOR CMDiagMsgKeysDove.EnglishMessages;    z: UNCOUNTED ZONE;    InitializeCMDiagMsgKeys: PUBLIC PROC = {        -- cmMsgKeys points to the array of English messages used by the Control Module  -- initialization  z ¬ Heap.Create[initial: 10];  cmMsgKeys ¬ DESCRIPTOR[z.NEW[CMDiagMsgKeysDove.EnglishMessages], 107];    -- Title prompts:  cmMsgKeys[copyRight] ¬    S.CopyToNewString["Copyright (C) Fuji Xerox & Xerox Corporations 1985, 1986, 1987, 1988, 1989. All rights reserved."L, z];  cmMsgKeys[OfflineDiagTitle] ¬    S.CopyToNewString["Offline Diagnostics Version"L, z];  cmMsgKeys[running] ¬    S.CopyToNewString["Running:"L, z];      -- Logon and password prompts:  cmMsgKeys[passWordPrompt] ¬    S.CopyToNewString["Please enter password: "L, z];  cmMsgKeys[inCorrectPassword] ¬    S.CopyToNewString["Incorrect password"L, z];  -- Passwords are defined here  cmMsgKeys[administratorPWD] ¬    S.CopyToNewString["rgmsn"L, z];  cmMsgKeys[techRepPWD] ¬    S.CopyToNewString["rexifsn"L, z];   -- For services engineers.  cmMsgKeys[manufacturePWD] ¬    S.CopyToNewString["foo"L, z];  cmMsgKeys[diagProgrammerPWD] ¬    S.CopyToNewString["bar"L, z];    cmMsgKeys[userSelectionPrompt] ¬    S.CopyToNewString["What class of user do you belong to?"L, z];  cmMsgKeys[normalUser] ¬    S.CopyToNewString["1 - Normal User"L, z];  cmMsgKeys[administrator] ¬    S.CopyToNewString["2 - System Administrator"L, z];  cmMsgKeys[techRep] ¬    S.CopyToNewString["3 - Technical Support"L, z];  -- Help info for log in.  cmMsgKeys[loginHelpTitle] ¬    S.CopyToNewString["Log In Help"L, z];  cmMsgKeys[normalUserExplanation] ¬    S.CopyToNewString["Normal users can only run harmless tests that give qualitative indications. No login is needed"L, z];  cmMsgKeys[otherUserClassExplanation] ¬    S.CopyToNewString["Other users can run tests that may damage the system. They must login with a valid password"L, z];  --  Menu for selecting subsystems  cmMsgKeys[runEthernet] ¬    S.CopyToNewString["Ethernet Tests"L, z];  cmMsgKeys[runFloppy] ¬    S.CopyToNewString["Floppy Disk Tests"L, z];  cmMsgKeys[runFloppyUtility] ¬    S.CopyToNewString["Floppy Disk Utility"L, z];  cmMsgKeys[runHardDisc] ¬    S.CopyToNewString["Rigid Disk Tests"L, z];  cmMsgKeys[runRS232] ¬    S.CopyToNewString["RS232C Tests"L, z];  cmMsgKeys[runKbdDsplMouse] ¬    S.CopyToNewString["Keyboard/Display/Mouse/Beeper Tests"L, z];  cmMsgKeys[runPrinter] ¬    S.CopyToNewString["Printer Tests"L, z];  cmMsgKeys[runTapeDrive] ¬    S.CopyToNewString["Cartridge Tape Tests"L, z];  cmMsgKeys[runFSBPU] ¬    S.CopyToNewString["Formatter, Scavenger and Bad Page Utility"L, z];  cmMsgKeys[runLaserDisc] ¬    S.CopyToNewString["Laser DisK Tests"L, z];  cmMsgKeys[runManufacture] ¬    S.CopyToNewString["Manufacturing Tests"L, z];  cmMsgKeys[runMisc] ¬    S.CopyToNewString["Miscellaneous Tests"L, z];  cmMsgKeys[runSecureDeviceTests] ¬    S.CopyToNewString["Secure Information Device Tests"L, z];  cmMsgKeys[sysConfigUtility] ¬    S.CopyToNewString["System Configuration Utility"L, z];  cmMsgKeys[runScannerTests] ¬    S.CopyToNewString["Scanner Diagnostics"L, z];  cmMsgKeys[runCartridgeTapeTests] ¬    S.CopyToNewString["Cartridge Tape Tests"L, z];  cmMsgKeys[selfTests] ¬    S.CopyToNewString["Control Module Self-Tests"L, z];  cmMsgKeys[noClients] ¬    S.CopyToNewString["Boot file is empty"L, z];  -- Interactive prompts.  cmMsgKeys[availableSelections] ¬    S.CopyToNewString["Available Selections"L, z];  cmMsgKeys[enterSelectionPrompt] ¬    S.CopyToNewString["Please enter selection:"L, z];  cmMsgKeys[helpForSelection] ¬    S.CopyToNewString["Please enter, inclusively, a number between 1 and "L, z];  cmMsgKeys[enterYesNoPrompt] ¬    S.CopyToNewString["Please enter Y(es) or N(o):"L, z];  cmMsgKeys[enterNamePrompt] ¬    S.CopyToNewString["Please enter a name:"L, z];  cmMsgKeys[PassedMark] ¬    S.CopyToNewString["P"L, z]; -- Test ran successfully  cmMsgKeys[FailedMark] ¬    S.CopyToNewString["F"L, z]; -- Test failed. At least one error exist.  cmMsgKeys[blankIt] ¬    S.CopyToNewString["   "L, z];  cmMsgKeys[ambiguousMark] ¬    S.CopyToNewString["?"L, z]; -- Test ran is not sure whether the test passed of failed  cmMsgKeys[lastSelection] ¬    S.CopyToNewString["Last selection from this menu was:"L, z];  cmMsgKeys[noTestAllowed] ¬    S.CopyToNewString["No selections assigned. Please enter any key to continue:"L, z];  cmMsgKeys[goToHigherMenu] ¬    S.CopyToNewString["Go To Previous Menu"L, z]; -- Exit selection.  cmMsgKeys[exitCurrentMenu] ¬    S.CopyToNewString["Exits this menu and returns to parent menu"L, z];  cmMsgKeys[noTests] ¬    S.CopyToNewString["No Test To Run"L, z];  cmMsgKeys[moreText] ¬    S.CopyToNewString["More to go. Display the rest? [Y/N]:"L, z];  cmMsgKeys[yes] ¬    S.CopyToNewString["y"L, z]; -- This is yes.  cmMsgKeys[Yes] ¬    S.CopyToNewString["Y"L, z]; -- This is Yes.  cmMsgKeys[no] ¬    S.CopyToNewString["n"L, z]; -- This is no.  cmMsgKeys[No] ¬    S.CopyToNewString["N"L, z]; -- This is No.  cmMsgKeys[legalDigits] ¬    S.CopyToNewString["Legal decimal digits: 0 to 9, Legal hex digits: A/a to F/f, Directional inputs: +, -"L, z];  cmMsgKeys[moreData] ¬    S.CopyToNewString["More data... Any key will clear current data and continue"L, z];  cmMsgKeys[dash] ¬    S.CopyToNewString["-"L, z];  cmMsgKeys[decimalDigitsOnly] ¬    S.CopyToNewString["Decimal digits only"L, z];  cmMsgKeys[illegalInput] ¬    S.CopyToNewString["Illegal input"L, z];  cmMsgKeys[isOutOfRange] ¬    S.CopyToNewString["is out of range."L, z];  cmMsgKeys[enterHexNumber] ¬    S.CopyToNewString["Please enter a hexadecimal number"L, z];  cmMsgKeys[enterDecimalNumber] ¬    S.CopyToNewString["Please enter a decimal number"L, z];  cmMsgKeys[testSelected] ¬    S.CopyToNewString["Selection:"L, z];  cmMsgKeys[noSuchOption] ¬    S.CopyToNewString["No such option"L, z];   cmMsgKeys[noHelpForThisOption] ¬    S.CopyToNewString["No help for this option"L, z];    cmMsgKeys[catSelectionHelpTitle] ¬    S.CopyToNewString["Useful information"L, z];  cmMsgKeys[catSelectionHelp0] ¬    S.CopyToNewString["The blinking cursor points to the applicable prompt. Do as prompted"L, z];  cmMsgKeys[catSelectionHelp1] ¬    S.CopyToNewString["SPACE and CR are input terminators. BACKSPACE erases the last input character"L, z];  cmMsgKeys[catSelectionHelp2] ¬    S.CopyToNewString["A question mark alone (?) gives help to the entire menu"L, z];  cmMsgKeys[catSelectionHelp3] ¬    S.CopyToNewString["<n> followed by ? gives help to the item identified by n"L, z];  cmMsgKeys[catSelectionHelp4] ¬    S.CopyToNewString["UNDO inverts the screen"L, z];  cmMsgKeys[catSelectionHelp5] ¬    S.CopyToNewString["STOP aborts the current test, if allowed; or exits the current menu"L, z];  cmMsgKeys[catSelectionHelp6] ¬    S.CopyToNewString["The current selection is displayed at the top of the screen"L, z];  cmMsgKeys[exitWarning] ¬    S.CopyToNewString["Test data will be deleted upon exit. Is this OK?"L, z];  cmMsgKeys[testDataNotCleared] ¬    S.CopyToNewString["Test data not deleted"L, z];  cmMsgKeys[nameTooBig] ¬    S.CopyToNewString["Input is too long"L, z];  cmMsgKeys[anyKeyToContinue] ¬    S.CopyToNewString["Enter any key to continue:"L, z];  cmMsgKeys[veriosnMismatch] ¬    S.CopyToNewString["Version mismatch!!!"L, z];  cmMsgKeys[kernelVersion] ¬    S.CopyToNewString["First floppy version:"L, z];  cmMsgKeys[clientVersion] ¬    S.CopyToNewString["Second floppy version:"L, z];  cmMsgKeys[mismatchOption] ¬    S.CopyToNewString["Should I ignore version mismatch and continue? [Y/N]"L, z];  -- For Floppy Exec  cmMsgKeys[floppyExec] ¬    S.CopyToNewString["Floppy Executive"L, z];  cmMsgKeys[menuName] ¬    S.CopyToNewString["Load Offline Diagnostics Package"L, z];  cmMsgKeys[insertDiskLabeled] ¬    S.CopyToNewString["Insert Floppy Disk Labeled:"L, z];  cmMsgKeys[diskForWSDiag] ¬    S.CopyToNewString["6085 Offline Diagnostics Disk for Workstation Diagnostics."L, z];  cmMsgKeys[diskForScannerDiag] ¬    S.CopyToNewString["6085 Offline Diagnostics Disk for Pro Imager Diagnostics."L, z];  cmMsgKeys[diskForCartTapeDiag] ¬    S.CopyToNewString["6085 Offline Diagnostics Disk for VP Cartridge Tape Diagnostics."L, z];  cmMsgKeys[isDiskReady] ¬    S.CopyToNewString["Is the Required  Disk now loaded?"L, z];  cmMsgKeys[fileNotFound] ¬    S.CopyToNewString["File not found on floppy"L, z];  cmMsgKeys[hardwareError] ¬    S.CopyToNewString["Floppy disk drive hardware problem"L, z];  cmMsgKeys[notReady] ¬    S.CopyToNewString["Floppy not in drive or drive not Ready"L, z];  cmMsgKeys[noSuchDrive] ¬    S.CopyToNewString["No such drive"L, z];  cmMsgKeys[invalidFormat] ¬    S.CopyToNewString["Floppy needs formatting"L, z];  cmMsgKeys[needsScavenging] ¬    S.CopyToNewString["Floppy needs scavenging"L, z];  cmMsgKeys[loading] ¬    S.CopyToNewString["Loading diagnostics from the second floppy disk..."L, z];  cmMsgKeys[noDiagPkg] ¬    S.CopyToNewString["No diagnostic file was found on the floppy disk"L, z];  cmMsgKeys[checkDisk] ¬    S.CopyToNewString["Please check the floppy disk"L, z];  cmMsgKeys[instanceExists] ¬    S.CopyToNewString["Offline Diagnostics Package already exists"L, z];  cmMsgKeys[tryAgain] ¬    S.CopyToNewString["Let's try this one more time..."L, z];  cmMsgKeys[insertDisk] ¬    S.CopyToNewString["Insert auxiliary diagnostic disk, press RETURN to continue."L, z];  cmMsgKeys[cantErase] ¬    S.CopyToNewString["Can't erase the loaded file"L, z];  cmMsgKeys[finishLoading] ¬    S.CopyToNewString["Diagnostics loaded successfully."L, z];  cmMsgKeys[quit] ¬    S.CopyToNewString["The load state is invalid. Please reboot and try again."L, z];  cmMsgKeys[aborted] ¬    S.CopyToNewString["Okay, I've aborted... Reboot is needed."L, z];  cmMsgKeys[unloading] ¬    S.CopyToNewString["Unloading loaded programs..."L, z];  cmMsgKeys[finished] ¬    S.CopyToNewString["Finished"L, z];  cmMsgKeys[cantFindConfig] ¬    S.CopyToNewString["Can't find config link"L, z];  cmMsgKeys[plainOf] ¬    S.CopyToNewString[" of "L, z];  cmMsgKeys[spare1] ¬    S.CopyToNewString["For future use - 1"L, z];  cmMsgKeys[spare2] ¬    S.CopyToNewString["For future use - 2"L, z];};         END... of CMDiagMsgKeysImplDove.mesa    LOGCreated on 19-Mar-85 by KLAdded Floppy exec items on 17-Dec-85 15:25:57 by MXTChanged wording of runTapeDrive on 24-Jul-86 16:24:56 by RKUsed Heap than Global Frame for string, on 12-Feb-87 20:32:58 by KXWFixed AR10296 on 27-Feb-87 13:37:07 by KXWAdded some items to include scanner disgnostics on 5-Mar-87 14:07:18 by KXWAdded runScannerTests entry for scanner diagn on 12-Mar-87 13:57:05 by JMAFixed the number of message array elements on 18-Mar-87 11:45:41 by KXWChanged isDiskReady on 28-Apr-87 11:37:33 by KXWChanged Manuf and Program passwords on 27-Aug-87 16:08:24 by STCRemove # from diskForWSDiag and diskForScannerDiag on  8-Sep-87 14:24:20 by STCchange scanner to Pro Imager on  17-Sep-87 11:06:58 by STCAdded entries for cartridge tape diagnostics on 26-Oct-87 15:42:36 by JMAAdded 1988 in copyRight, add cartridge tape on 21-Jan-88  9:28:15 by STCAdded Fuji Xerox in copyRight, add plainOf on 16-Oct-88 18:45:50 by STCAdded 1989 in copyRight on 17-Apr-89 10:49:27 by TXM