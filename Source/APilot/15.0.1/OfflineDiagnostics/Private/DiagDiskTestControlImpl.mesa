-- File: DiagDiskTestControlImpl.mesa-- Copyright (C) 1985, 1986 by Xerox Corporation. All rights reserved.-- Last edited by STC, 28-Aug-87 16:32:14DIRECTORY  DiagDiskTestControl USING [TestControlRecord];DiagDiskTestControlImpl: PROGRAM EXPORTS DiagDiskTestControl =  BEGIN OPEN DiagDiskTestControl;  -- Following constant is used to multiply max soft error count.  -- This will become 1 in future.  factor: CARDINAL = 1;     -- SPL, set to 1  CheckBadPageTable: PUBLIC BOOLEAN ¬ FALSE;  CheckForError: PUBLIC BOOLEAN ¬ FALSE;  CheckSoftErrorCount: PUBLIC BOOLEAN ¬ FALSE;  ContinueOnHardError: PUBLIC BOOLEAN ¬ FALSE;  ContinueOnSoftError: PUBLIC BOOLEAN ¬ FALSE;  --ControllerStatusTrace:	PUBLIC BOOLEAN ¬ FALSE;  ControlCylinder: PUBLIC BOOLEAN ¬ FALSE;  ControlHead: PUBLIC BOOLEAN ¬ FALSE;  ControlLoopCount: PUBLIC BOOLEAN ¬ FALSE;  ControlSector: PUBLIC BOOLEAN ¬ FALSE;  ControlSectorCount: PUBLIC BOOLEAN ¬ FALSE;  ControlTrackCount: PUBLIC BOOLEAN ¬ FALSE;  ControlUnit: PUBLIC BOOLEAN ¬ FALSE;  CountSubtestSoftErrors: PUBLIC BOOLEAN ¬ FALSE;  --DeviceStatusTrace:		PUBLIC BOOLEAN ¬ FALSE;  DisplaySoftErrors: PUBLIC BOOLEAN ¬ FALSE;  EndlessLoop: PUBLIC BOOLEAN ¬ FALSE;  IgnoreSoftErrors: PUBLIC BOOLEAN ¬ FALSE;  LoopOnError: PUBLIC BOOLEAN ¬ FALSE;  MaxErrorsPerHead: PUBLIC CARDINAL;  MaxSubtestSoftErrors: PUBLIC CARDINAL;  MaxSoftErrorsTotal: PUBLIC CARDINAL;  --NotReadyDelay:		PUBLIC LONG CARDINAL;  --NoWaitForReady:		PUBLIC BOOLEAN ¬ FALSE;  RepeatCommand: PUBLIC BOOLEAN ¬ FALSE;  ReturnAfterCommand: PUBLIC BOOLEAN ¬ FALSE;  ReturningAfterCommand: PUBLIC SIGNAL = CODE;  ReturnOnHardError: PUBLIC BOOLEAN ¬ FALSE;  ReturningOnHardError: PUBLIC SIGNAL = CODE;  ReturnOnSoftError: PUBLIC BOOLEAN ¬ FALSE;  ReturningOnSoftError: PUBLIC SIGNAL = CODE;  ReturnOnSoftErrorInTable: PUBLIC BOOLEAN ¬ FALSE;  ReturningOnSoftErrorInTable: PUBLIC SIGNAL = CODE;  RetryOnSameSector: PUBLIC BOOLEAN ¬ FALSE;  SectorPlus1OnSoftError: PUBLIC BOOLEAN ¬ FALSE;  UseDiagData: PUBLIC BOOLEAN ¬ FALSE;  UseFormatData: PUBLIC BOOLEAN ¬ FALSE;  VerifyData: PUBLIC BOOLEAN ¬ FALSE;  VerifyHeader: PUBLIC BOOLEAN ¬ FALSE;  VerifyLabel: PUBLIC BOOLEAN ¬ FALSE;  --the following booleans are used for loop count control  UseSectorsPerHead: PUBLIC BOOLEAN ¬ FALSE;  UseHalfSectorsPerCylinder: PUBLIC BOOLEAN ¬ FALSE;  UseSectorsPerCylinder: PUBLIC BOOLEAN ¬ FALSE;  UseHalfSectorsPerDrive: PUBLIC BOOLEAN ¬ FALSE;  UseSectorsPerDrive: PUBLIC BOOLEAN ¬ FALSE;  UseHeadsPerDrive: PUBLIC BOOLEAN ¬ FALSE;  UseTracksPerDrive: PUBLIC BOOLEAN ¬ FALSE;  UseCylindersPerDrive: PUBLIC BOOLEAN ¬ FALSE;  --the following booleans are used for sector count control  UseSectorCountPerHead: PUBLIC BOOLEAN ¬ FALSE;  UseSectorCountPerCylinder: PUBLIC BOOLEAN ¬ FALSE;  --the following booleans are used for cylinder/head/sector control  UseFirstCylinder: PUBLIC BOOLEAN ¬ FALSE;  UseLastCylinder: PUBLIC BOOLEAN ¬ FALSE;  UseFirstHead: PUBLIC BOOLEAN ¬ FALSE;  UseLastHead: PUBLIC BOOLEAN ¬ FALSE;  UseFirstSector: PUBLIC BOOLEAN ¬ FALSE;  UseLastSector: PUBLIC BOOLEAN ¬ FALSE;  --TCWrWrWrDisk2:			PUBLIC TestControlRecord;  TCWrWrWrDisk: PUBLIC TestControlRecord;  TCWrWrWrLstCyl: PUBLIC TestControlRecord;  TCVrWrWrDiagDtDisk: PUBLIC TestControlRecord;  TCVrWrWrDiagDtCyl0: PUBLIC TestControlRecord;  TCVrRdRdCyl0: PUBLIC TestControlRecord;  TCVrRdRdCyl0VlVdFmtDt: PUBLIC TestControlRecord;  TCVrWrWrDiagDtCylLst: PUBLIC TestControlRecord;  TCVrRdRdCylLstVlVd: PUBLIC TestControlRecord;  TCVrRdRdAllCyls: PUBLIC TestControlRecord;  TCVrRdRdAllCylsFmtDt: PUBLIC TestControlRecord;  --TCStandardCyl0:		PUBLIC TestControlRecord;  TCPassedLstCyl: PUBLIC TestControlRecord;  TCStndLstScTrk0: PUBLIC TestControlRecord;  TCVrRdRdCmpLbDtLstScTrk0: PUBLIC TestControlRecord;  TCRecalCn: PUBLIC TestControlRecord;  TCRecal: PUBLIC TestControlRecord;  TCVrWrWrCylLstEx: PUBLIC TestControlRecord;  TCWrOrRd2CylLstCn: PUBLIC TestControlRecord;  TCRndRd: PUBLIC TestControlRecord;  TCWrOrRd1CylLstCn: PUBLIC TestControlRecord;  TCVrRdRdCmpLbDtCylLstEx: PUBLIC TestControlRecord;  --TCWrRdCyl0:			PUBLIC TestControlRecord;  TCRndWrRdVrCnt: PUBLIC TestControlRecord;  TCRunCmdFile1: PUBLIC TestControlRecord;  TCRunCmdFile2: PUBLIC TestControlRecord;  TCRunCmdFile3: PUBLIC TestControlRecord;  TCSurfVer1: PUBLIC TestControlRecord;  TCSurfVer2: PUBLIC TestControlRecord;  TCSurfVer3: PUBLIC TestControlRecord;-- added for TestCyl by STC  TCWrWrWrCyl: PUBLIC TestControlRecord;  TCVrWrWrsCyl: PUBLIC TestControlRecord;  TCVrVrWrsCyl: PUBLIC TestControlRecord;  TCVrVrVrCyl: PUBLIC TestControlRecord;  TCZipControl: PUBLIC TestControlRecord;  --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  -- to set up the given test control Records  -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  SetUpTestControl: PUBLIC PROCEDURE [controlData: TestControlRecord] =    BEGIN    CheckBadPageTable ¬ controlData.checkBadPageTable;    CheckForError ¬ controlData.checkForError;    CheckSoftErrorCount ¬ controlData.checkSoftErrorCount;    ContinueOnHardError ¬ controlData.continueOnHardError;    ContinueOnSoftError ¬ controlData.continueOnSoftError;    --ControllerStatusTrace ¬ controlData.controllerStatusTrace;    ControlCylinder ¬ controlData.controlCylinder;    ControlHead ¬ controlData.controlHead;    ControlLoopCount ¬ controlData.controlLoopCount;    ControlSector ¬ controlData.controlSector;    ControlSectorCount ¬ controlData.controlSectorCount;    ControlTrackCount ¬ controlData.controlTrackCount;    ControlUnit ¬ controlData.controlUnit;    CountSubtestSoftErrors ¬ controlData.countSubtestSoftErrors;    --DeviceStatusTrace ¬ controlData.deviceStatusTrace;    DisplaySoftErrors ¬ controlData.displaySoftErrors;    EndlessLoop ¬ controlData.endlessLoop;    IgnoreSoftErrors ¬ controlData.ignoreSoftErrors;    LoopOnError ¬ controlData.loopOnError;    MaxErrorsPerHead ¬ controlData.maxErrorsPerHead;    MaxSubtestSoftErrors ¬ controlData.maxSubtestSoftErrors;    MaxSoftErrorsTotal ¬ controlData.maxSoftErrorsTotal;    --NotReadyDelay ¬ controlData.notReadyDelay;    --NoWaitForReady ¬ controlData.noWaitForReady;    RepeatCommand ¬ controlData.repeatCommand;    ReturnAfterCommand ¬ controlData.returnAfterCommand;    ReturnOnHardError ¬ controlData.returnOnHardError;    ReturnOnSoftError ¬ controlData.returnOnSoftError;    ReturnOnSoftErrorInTable ¬ controlData.returnOnSoftErrorInTable;    RetryOnSameSector ¬ controlData.retryOnSameSector;    SectorPlus1OnSoftError ¬ controlData.sectorPlus1OnSoftError;    UseDiagData ¬ controlData.useDiagData;    UseFormatData ¬ controlData.useFormatData;    VerifyData ¬ controlData.verifyData;    VerifyHeader ¬ controlData.verifyHeader;    VerifyLabel ¬ controlData.verifyLabel;    --the following booleans are used for loop count control    UseSectorsPerHead ¬ controlData.useSectorsPerHead;    UseHalfSectorsPerCylinder ¬ controlData.useHalfSectorsPerCylinder;    UseSectorsPerCylinder ¬ controlData.useSectorsPerCylinder;    UseHalfSectorsPerDrive ¬ controlData.useHalfSectorsPerDrive;    UseSectorsPerDrive ¬ controlData.useSectorsPerDrive;    UseHeadsPerDrive ¬ controlData.useHeadsPerDrive;    UseTracksPerDrive ¬ controlData.useTracksPerDrive;    UseCylindersPerDrive ¬ controlData.useCylindersPerDrive;    --the following booleans are used for sector count control    UseSectorCountPerHead ¬ controlData.useSectorCountPerHead;    UseSectorCountPerCylinder ¬ controlData.useSectorCountPerCylinder;    --the following booleans are used for cylinder control    UseFirstCylinder ¬ controlData.useFirstCylinder;    UseLastCylinder ¬ controlData.useLastCylinder;    --the following booleans are used for head control    UseFirstHead ¬ controlData.useFirstHead;    UseLastHead ¬ controlData.useLastHead;    --the following booleans are used for sector control    UseFirstSector ¬ controlData.useFirstSector;    UseLastSector ¬ controlData.useLastSector;    END;  --SetUpTestControl  -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  -- Main line code: to initialize the test control Records  -- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Initialize: PROCEDURE = BEGIN Init1[]; Init2[]; END;  Init1: PROCEDURE =    BEGIN    --format the disk		(exerciser/hardware test)    TCWrWrWrDisk.controlUnit ¬ TRUE;    TCWrWrWrDisk.controlLoopCount ¬ TRUE;    TCWrWrWrDisk.useCylindersPerDrive ¬ TRUE;    TCWrWrWrDisk.controlSectorCount ¬ TRUE;    TCWrWrWrDisk.useSectorCountPerCylinder ¬ TRUE;    TCWrWrWrDisk.checkForError ¬ TRUE;    TCWrWrWrDisk.useDiagData ¬ TRUE;    --format the disk		(exerciser/hardware test)    --TCWrWrWrDisk2.controlUnit			¬ TRUE;     --TCWrWrWrDisk2.checkForError			¬ TRUE;     --TCWrWrWrDisk2.continueOnSoftError		¬ TRUE;    --TCWrWrWrDisk2.useDiagData			¬ TRUE;    --format the the last cylinder		(confidence test)    TCWrWrWrLstCyl.controlUnit ¬ TRUE;    TCWrWrWrLstCyl.controlCylinder ¬ TRUE;    TCWrWrWrLstCyl.useLastCylinder ¬ TRUE;    TCWrWrWrLstCyl.controlSectorCount ¬ TRUE;    TCWrWrWrLstCyl.useSectorCountPerCylinder ¬ TRUE;    TCWrWrWrLstCyl.checkForError ¬ TRUE;    TCWrWrWrLstCyl.useDiagData ¬ TRUE;    --tag the entire disk			(hardware test)    TCVrWrWrDiagDtDisk.controlUnit ¬ TRUE;    TCVrWrWrDiagDtDisk.controlLoopCount ¬ TRUE;    TCVrWrWrDiagDtDisk.useHalfSectorsPerDrive ¬ TRUE;    TCVrWrWrDiagDtDisk.checkForError ¬ TRUE;    TCVrWrWrDiagDtDisk.useDiagData ¬ TRUE;    --tag cylinder 0			(exerciser)    TCVrWrWrDiagDtCyl0.controlUnit ¬ TRUE;    TCVrWrWrDiagDtCyl0.controlLoopCount ¬ TRUE;    TCVrWrWrDiagDtCyl0.useSectorsPerCylinder ¬ TRUE;    TCVrWrWrDiagDtCyl0.checkForError ¬ TRUE;    TCVrWrWrDiagDtCyl0.useDiagData ¬ TRUE;    --verify cylinder 0 			(confidence test)    TCVrRdRdCyl0.controlUnit ¬ TRUE;    TCVrRdRdCyl0.controlLoopCount ¬ TRUE;    TCVrRdRdCyl0.useSectorsPerCylinder ¬ TRUE;    TCVrRdRdCyl0.checkForError ¬ TRUE;    TCVrRdRdCyl0.retryOnSameSector ¬ TRUE;    TCVrRdRdCyl0.checkSoftErrorCount ¬ TRUE;    TCVrRdRdCyl0.checkBadPageTable ¬ TRUE;    TCVrRdRdCyl0.maxSoftErrorsTotal ¬ 10; -- STC, 7 ¬ 10    TCVrRdRdCyl0.maxErrorsPerHead ¬ 3; -- STC, 2 ¬ 3    TCVrRdRdCyl0.continueOnSoftError ¬ TRUE;    --verify cylinder 0 with format data	(exerciser)    TCVrRdRdCyl0VlVdFmtDt.controlUnit ¬ TRUE;    TCVrRdRdCyl0VlVdFmtDt.controlLoopCount ¬ TRUE;    TCVrRdRdCyl0VlVdFmtDt.useSectorsPerCylinder ¬ TRUE;    TCVrRdRdCyl0VlVdFmtDt.checkForError ¬ TRUE;    TCVrRdRdCyl0VlVdFmtDt.useFormatData ¬ TRUE;    TCVrRdRdCyl0VlVdFmtDt.verifyLabel ¬ TRUE;    TCVrRdRdCyl0VlVdFmtDt.verifyData ¬ TRUE;    TCVrRdRdCyl0VlVdFmtDt.retryOnSameSector ¬ TRUE;    TCVrRdRdCyl0VlVdFmtDt.checkSoftErrorCount ¬ TRUE;    TCVrRdRdCyl0VlVdFmtDt.maxSoftErrorsTotal ¬ 10; -- STC, 7 ¬ 10    TCVrRdRdCyl0VlVdFmtDt.maxErrorsPerHead ¬ 3; -- STC, 2 ¬ 3    TCVrRdRdCyl0VlVdFmtDt.continueOnSoftError ¬ TRUE;    --tag last cylinder			(exerciser/confidence test)    TCVrWrWrDiagDtCylLst.controlUnit ¬ TRUE;    TCVrWrWrDiagDtCylLst.controlCylinder ¬ TRUE;    TCVrWrWrDiagDtCylLst.useLastCylinder ¬ TRUE;    TCVrWrWrDiagDtCylLst.controlLoopCount ¬ TRUE;    TCVrWrWrDiagDtCylLst.useSectorsPerCylinder ¬ TRUE;    TCVrWrWrDiagDtCylLst.checkForError ¬ TRUE;    TCVrWrWrDiagDtCylLst.useDiagData ¬ TRUE;    --verify last cylinder			(exerciser/confidence test)    TCVrRdRdCylLstVlVd.controlUnit ¬ TRUE;    TCVrRdRdCylLstVlVd.controlLoopCount ¬ TRUE;    TCVrRdRdCylLstVlVd.useSectorsPerCylinder ¬ TRUE;    TCVrRdRdCylLstVlVd.checkForError ¬ TRUE;    TCVrRdRdCylLstVlVd.continueOnSoftError ¬ TRUE;    TCVrRdRdCylLstVlVd.countSubtestSoftErrors ¬ TRUE;    TCVrRdRdCylLstVlVd.maxSubtestSoftErrors ¬ 1 * factor;    TCVrRdRdCylLstVlVd.displaySoftErrors ¬ TRUE;    TCVrRdRdCylLstVlVd.useDiagData ¬ TRUE;    TCVrRdRdCylLstVlVd.verifyLabel ¬ TRUE;    TCVrRdRdCylLstVlVd.verifyData ¬ TRUE;    --verify cylinder addr			(confidence test)    TCVrRdRdAllCyls.controlUnit ¬ TRUE;    TCVrRdRdAllCyls.controlLoopCount ¬ TRUE;    TCVrRdRdAllCyls.useCylindersPerDrive ¬ TRUE;    TCVrRdRdAllCyls.checkForError ¬ TRUE;    TCVrRdRdAllCyls.checkBadPageTable ¬ TRUE;    TCVrRdRdAllCyls.sectorPlus1OnSoftError ¬ TRUE;    TCVrRdRdAllCyls.continueOnSoftError ¬ TRUE;    --verify cylinder addr using format data (exerciser)    TCVrRdRdAllCylsFmtDt.controlUnit ¬ TRUE;    TCVrRdRdAllCylsFmtDt.controlLoopCount ¬ TRUE;    TCVrRdRdAllCylsFmtDt.useCylindersPerDrive ¬ TRUE;    TCVrRdRdAllCylsFmtDt.checkForError ¬ TRUE;    TCVrRdRdAllCylsFmtDt.sectorPlus1OnSoftError ¬ TRUE;    TCVrRdRdAllCylsFmtDt.continueOnSoftError ¬ TRUE;    TCVrRdRdAllCylsFmtDt.useFormatData ¬ TRUE;    TCVrRdRdAllCylsFmtDt.verifyLabel ¬ TRUE;    TCVrRdRdAllCylsFmtDt.verifyData ¬ TRUE;    --write cylinder 0 to test data	(exerciser)    --check verify error logic		(exerciser)    --TCStandardCyl0.controlUnit			¬ TRUE;     --TCStandardCyl0.checkForError			¬ TRUE;    --check passed cylinder error logic (exerciser/confidence test)    TCPassedLstCyl.controlUnit ¬ TRUE;    TCPassedLstCyl.controlCylinder ¬ TRUE;    TCPassedLstCyl.useLastCylinder ¬ TRUE;    TCPassedLstCyl.controlHead ¬ TRUE;    TCPassedLstCyl.useLastHead ¬ TRUE;    TCPassedLstCyl.controlSector ¬ TRUE;    TCPassedLstCyl.useLastSector ¬ TRUE;    TCPassedLstCyl.checkForError ¬ TRUE;    --write last sector cylinder 0 to test data (exerciser/confidence test)    TCStndLstScTrk0.controlUnit ¬ TRUE;    TCStndLstScTrk0.controlHead ¬ TRUE;    TCStndLstScTrk0.useFirstHead ¬ TRUE;    TCStndLstScTrk0.controlSector ¬ TRUE;    TCStndLstScTrk0.useLastSector ¬ TRUE;    TCStndLstScTrk0.checkForError ¬ TRUE;    TCStndLstScTrk0.retryOnSameSector ¬ TRUE;    TCStndLstScTrk0.checkSoftErrorCount ¬ TRUE;    TCStndLstScTrk0.maxSoftErrorsTotal ¬ 10; -- STC, 7 ¬ 10    TCStndLstScTrk0.maxErrorsPerHead ¬ 3; -- STC, 2 ¬ 3    TCStndLstScTrk0.continueOnSoftError ¬ TRUE;    END;  -- of Init1  Init2: PROCEDURE =    BEGIN    --read last sector of cylinder 0 to test data	(exerciser/confidence test)    TCVrRdRdCmpLbDtLstScTrk0.controlUnit ¬ TRUE;    TCVrRdRdCmpLbDtLstScTrk0.controlHead ¬ TRUE;    TCVrRdRdCmpLbDtLstScTrk0.useFirstHead ¬ TRUE;    TCVrRdRdCmpLbDtLstScTrk0.controlSector ¬ TRUE;    TCVrRdRdCmpLbDtLstScTrk0.useLastSector ¬ TRUE;    TCVrRdRdCmpLbDtLstScTrk0.checkForError ¬ TRUE;    TCVrRdRdCmpLbDtLstScTrk0.verifyLabel ¬ TRUE;    TCVrRdRdCmpLbDtLstScTrk0.verifyData ¬ TRUE;    TCVrRdRdCmpLbDtLstScTrk0.retryOnSameSector ¬ TRUE;    TCVrRdRdCmpLbDtLstScTrk0.checkSoftErrorCount ¬ TRUE;    TCVrRdRdCmpLbDtLstScTrk0.maxSoftErrorsTotal ¬ 10; -- STC, 7 ¬ 10    TCVrRdRdCmpLbDtLstScTrk0.maxErrorsPerHead ¬ 3; -- STC, 2 ¬ 3    TCVrRdRdCmpLbDtLstScTrk0.continueOnSoftError ¬ TRUE;    --recalibrate test			(confidence test)    TCRecalCn.controlUnit ¬ TRUE;    TCRecalCn.controlCylinder ¬ TRUE;    TCRecalCn.useLastCylinder ¬ TRUE;    TCRecalCn.checkForError ¬ TRUE;    TCRecalCn.checkBadPageTable ¬ TRUE;    TCRecalCn.continueOnSoftError ¬ TRUE;    --recalibrate test			(exerciser)    TCRecal.controlUnit ¬ TRUE;    TCRecal.controlCylinder ¬ TRUE;    TCRecal.useLastCylinder ¬ TRUE;    TCRecal.checkForError ¬ TRUE;    TCRecal.continueOnSoftError ¬ TRUE;    TCRecal.displaySoftErrors ¬ TRUE;    --write last cylinder to test data	(exerciser)    TCVrWrWrCylLstEx.controlUnit ¬ TRUE;    TCVrWrWrCylLstEx.controlCylinder ¬ TRUE;    TCVrWrWrCylLstEx.useLastCylinder ¬ TRUE;    TCVrWrWrCylLstEx.checkForError ¬ TRUE;    TCVrWrWrCylLstEx.continueOnSoftError ¬ TRUE;    TCVrWrWrCylLstEx.countSubtestSoftErrors ¬ TRUE;    TCVrWrWrCylLstEx.maxSubtestSoftErrors ¬ 7 * factor; --** STC, 4 ¬ 0 ¬ 7    TCVrWrWrCylLstEx.displaySoftErrors ¬ TRUE;    --data test: write last cylinder 2 sectors	(confidence test)    TCWrOrRd2CylLstCn.controlUnit ¬ TRUE;    TCWrOrRd2CylLstCn.controlLoopCount ¬ TRUE;    TCWrOrRd2CylLstCn.useHalfSectorsPerCylinder ¬ TRUE;    TCWrOrRd2CylLstCn.controlCylinder ¬ TRUE;    TCWrOrRd2CylLstCn.useLastCylinder ¬ TRUE;    TCWrOrRd2CylLstCn.checkForError ¬ TRUE;    TCWrOrRd2CylLstCn.checkBadPageTable ¬ TRUE;    TCWrOrRd2CylLstCn.continueOnSoftError ¬ TRUE;    TCWrOrRd2CylLstCn.retryOnSameSector ¬ TRUE; --** STC, added    TCWrOrRd2CylLstCn.maxSoftErrorsTotal ¬ 10; --** STC, added    TCWrOrRd2CylLstCn.verifyLabel ¬ TRUE;    TCWrOrRd2CylLstCn.verifyData ¬ TRUE;    --random verify/read/read			(confidence test)    TCRndRd.controlUnit ¬ TRUE;    TCRndRd.checkForError ¬ TRUE;    TCRndRd.checkBadPageTable ¬ TRUE;    TCRndRd.continueOnSoftError ¬ TRUE;    TCRndRd.displaySoftErrors ¬ FALSE;    TCRndRd.checkSoftErrorCount ¬ TRUE;    TCRndRd.retryOnSameSector ¬ TRUE; --** STC, added    TCRndRd.maxSoftErrorsTotal ¬ 8 * factor;     -- STC, was 50 ¬ 5 ¬ 8    TCRndRd.maxErrorsPerHead ¬ 4 * factor;       -- STC, was 40 ¬ 5 ¬ 4    --write or read last cylinder			(confidence test)    TCWrOrRd1CylLstCn.controlUnit ¬ TRUE;    TCWrOrRd1CylLstCn.controlLoopCount ¬ TRUE;    TCWrOrRd1CylLstCn.useSectorsPerCylinder ¬ TRUE;    TCWrOrRd1CylLstCn.controlCylinder ¬ TRUE;    TCWrOrRd1CylLstCn.useLastCylinder ¬ TRUE;    TCWrOrRd1CylLstCn.checkForError ¬ TRUE;    TCWrOrRd1CylLstCn.checkBadPageTable ¬ TRUE;    TCWrOrRd1CylLstCn.retryOnSameSector ¬ TRUE; --** STC, added    TCWrOrRd1CylLstCn.continueOnSoftError ¬ TRUE;    TCWrOrRd1CylLstCn.verifyLabel ¬ TRUE;    TCWrOrRd1CylLstCn.verifyData ¬ TRUE;    --read last cylinder to test data		(exerciser)    TCVrRdRdCmpLbDtCylLstEx.controlUnit ¬ TRUE;    TCVrRdRdCmpLbDtCylLstEx.controlCylinder ¬ TRUE;    TCVrRdRdCmpLbDtCylLstEx.useLastCylinder ¬ TRUE;    TCVrRdRdCmpLbDtCylLstEx.checkForError ¬ TRUE;    TCVrRdRdCmpLbDtCylLstEx.continueOnSoftError ¬ TRUE;    TCVrRdRdCmpLbDtCylLstEx.countSubtestSoftErrors ¬ TRUE;    TCVrRdRdCmpLbDtCylLstEx.maxSubtestSoftErrors ¬ 1 * factor;    TCVrRdRdCmpLbDtCylLstEx.displaySoftErrors ¬ TRUE;    TCVrRdRdCmpLbDtCylLstEx.verifyLabel ¬ TRUE;    TCVrRdRdCmpLbDtCylLstEx.verifyData ¬ TRUE;    --command test					(exerciser)    --TCWrRdCyl0.controlLoopCount ¬ TRUE;    --TCWrRdCyl0.controlUnit ¬ TRUE;    --TCWrRdCyl0.checkForError ¬ TRUE;    --random seek test check soft error count	(exerciser)    TCRndWrRdVrCnt.controlUnit ¬ TRUE;    TCRndWrRdVrCnt.checkForError ¬ TRUE;    TCRndWrRdVrCnt.continueOnSoftError ¬ TRUE;    TCRndWrRdVrCnt.displaySoftErrors ¬ TRUE;    TCRndWrRdVrCnt.checkSoftErrorCount ¬ TRUE;    TCRndWrRdVrCnt.maxSoftErrorsTotal ¬ 5 * factor;  -- STC, was 50    TCRndWrRdVrCnt.maxErrorsPerHead ¬ 5 * factor;    -- STC, was 40    TCRndWrRdVrCnt.verifyLabel ¬ TRUE;    TCRndWrRdVrCnt.verifyData ¬ TRUE;    --command file control    TCRunCmdFile1.checkForError ¬ TRUE;    TCRunCmdFile1.continueOnHardError ¬ TRUE;    TCRunCmdFile1.continueOnSoftError ¬ TRUE;    TCRunCmdFile2.checkForError ¬ TRUE;    TCRunCmdFile2.returnOnHardError ¬ TRUE;    TCRunCmdFile2.returnOnSoftError ¬ TRUE;    TCRunCmdFile3.checkForError ¬ TRUE;    TCRunCmdFile3.returnAfterCommand ¬ TRUE;    TCRunCmdFile3.returnOnHardError ¬ TRUE;    TCRunCmdFile3.returnOnSoftError ¬ TRUE;    --surface verification control    -- for Surface Verify command.    TCSurfVer1.controlUnit ¬ TRUE;    TCSurfVer1.checkForError ¬ TRUE;    TCSurfVer1.checkBadPageTable ¬ TRUE;    TCSurfVer1.returnOnSoftError ¬ TRUE;    TCSurfVer1.returnOnSoftErrorInTable ¬ TRUE;    -- for confidence test.    TCSurfVer2.controlUnit ¬ TRUE;    TCSurfVer2.checkForError ¬ TRUE;    TCSurfVer2.checkBadPageTable ¬ TRUE;    TCSurfVer2.checkSoftErrorCount ¬ TRUE;    TCSurfVer2.returnOnSoftError ¬ TRUE;    TCSurfVer2.returnOnSoftErrorInTable ¬ TRUE;    TCSurfVer2.maxSoftErrorsTotal ¬ 5 * factor;  -- STC, was 80    TCSurfVer2.maxErrorsPerHead ¬ 5 * factor;    -- STC, was 60    --surface verification fo exerciser control    -- See DiagRDExerciserImpl    TCSurfVer3.controlUnit ¬ TRUE;    TCSurfVer3.checkForError ¬ TRUE;    TCSurfVer3.checkSoftErrorCount ¬ TRUE;    TCSurfVer3.returnOnSoftError ¬ TRUE;    TCSurfVer3.maxSoftErrorsTotal ¬ 80 * factor;    TCSurfVer3.maxErrorsPerHead ¬ 60 * factor;    -- format a cylinder    TCWrWrWrCyl.controlUnit ¬ TRUE;    TCWrWrWrCyl.useSectorCountPerCylinder ¬ TRUE;    TCWrWrWrCyl.checkForError ¬ TRUE;    TCWrWrWrCyl.continueOnSoftError ¬ TRUE;--    TCWrWrWrCyl.useDiagData ¬ TRUE;    -- write labels and data on a cylinder    TCVrWrWrsCyl.controlUnit ¬ TRUE;    TCVrWrWrsCyl.useSectorCountPerCylinder ¬ TRUE;    TCVrWrWrsCyl.checkForError ¬ TRUE;    TCVrWrWrsCyl.continueOnSoftError ¬ TRUE;    TCVrWrWrsCyl.displaySoftErrors ¬ TRUE;    TCVrWrWrsCyl.retryOnSameSector ¬ TRUE;    TCVrWrWrsCyl.maxSoftErrorsTotal ¬ 1;    TCVrWrWrsCyl.maxErrorsPerHead ¬ 1;--    TCVrWrWrsCyl.useDiagData ¬ TRUE;    -- write data on a cylinder    TCVrVrWrsCyl.controlUnit ¬ TRUE;    TCVrVrWrsCyl.useSectorCountPerCylinder ¬ TRUE;    TCVrVrWrsCyl.checkForError ¬ TRUE;    TCVrVrWrsCyl.continueOnSoftError ¬ TRUE;    TCVrVrWrsCyl.displaySoftErrors ¬ TRUE;    TCVrVrWrsCyl.retryOnSameSector ¬ TRUE;    TCVrVrWrsCyl.maxSoftErrorsTotal ¬ 1;    TCVrVrWrsCyl.maxErrorsPerHead ¬ 1;    TCVrVrWrsCyl.verifyLabel ¬ TRUE;--    TCVrVrWrsCyl.useDiagData ¬ TRUE;    -- verify labels and data on a cylinder    TCVrVrVrCyl.controlUnit ¬ TRUE;    TCVrVrVrCyl.useSectorsPerCylinder ¬ TRUE;    TCVrVrVrCyl.checkForError ¬ TRUE;    TCVrVrVrCyl.continueOnSoftError ¬ TRUE;    TCVrVrVrCyl.countSubtestSoftErrors ¬ TRUE;    TCVrVrVrCyl.maxSubtestSoftErrors ¬ 1;    TCVrVrVrCyl.maxErrorsPerHead ¬ 1;    TCVrVrVrCyl.displaySoftErrors ¬ TRUE;    TCVrVrVrCyl.retryOnSameSector ¬ TRUE;    TCVrVrVrCyl.displaySoftErrors ¬ TRUE;    TCVrVrVrCyl.verifyLabel ¬ TRUE;    TCVrVrVrCyl.verifyData ¬ TRUE;    END;  -- of Init2.  Initialize[];  END....--of DiagDiskTestControlImpl.mesa    LOG27-Jan-86 14:17:10	MXT	Added RetryOnSameSector and related things into TCVrRdRdCyl0 and TCVrRdRdCyl0VlVdFmtDt. 9-Jan-87 10:03:06	STC	Modifed soft Error Thresholds       set factor to 1       set TCRndRd.maxSoftErrorsTotal, TCRndRd.maxErrorsPerHead           TCRndWrRdVrCnt.maxSoftErrorsTotal, TCRndWrRdVrCnt.maxErrorsPerHead	   TCSurfVer2.maxSoftErrorsTotal, TCSurfVer2.maxErrorsPerHead	   ALL to 5 * factor       set TCVrRdRdCylLstVlVd.maxSubtestSoftErrors,           TCVrWrWrCylLstEx.maxSubtestSoftErrors,	   TCVrRdRdCmpLbDtCylLstEx.maxSubtestSoftErrors	   ALL to 1 * factor       set TCVrWrWrCylLstEx.maxSubtestSoftErrors to 015-Mar-87 15:49:51 by STC, TCWrWrWrCyl,TCVrWrWrsCyl,TCVrVrWrsCyl,TCVrVrVrCyl20-May-87  4:28:59 by STC, add checkBadPageTable in TCVrRdRdCyl0, allow 50 in TCRndRd30-May-87 10:09:29 by STC, change some thresolds16-Jul-87 10:50:01 by STC, Undo the last changes on thresolds28-Aug-87 16:32:08 by STC, changes marked by -**