-- Copyright (C) 1982, 1983  by Xerox Corporation. All rights reserved. -- Volume.mesa    23-Jun-83 16:54:00 by JXG    DIRECTORY  File USING [File, Type],  PhysicalVolume USING [PageNumber],  System USING [nullID, PhysicalVolumeID, VolumeID];Volume: DEFINITIONS =  BEGIN  -- Volume identifiers  ID: TYPE = System.VolumeID;  -- = RECORD[System.UniversalID]  nullID: ID = ID[System.nullID];  systemID: READONLY ID;  -- ID of system volume  SystemID: PROCEDURE RETURNS [ID] = INLINE {RETURN[systemID]};  debuggerVolumeID: READONLY ID;  -- if ~= nullID, the ID of this system's debugger volume  -- Volume addressing  maxPagesPerVolume: LONG CARDINAL = 8388608;  -- = 2­23  minPagesPerVolume: READONLY PageCount;  PageCount: TYPE = LONG CARDINAL;  -- simulates TYPE = [0..maxPagesPerVolume]  firstPageCount: PageCount = 0;  lastPageCount: PageCount = maxPagesPerVolume;  PageNumber: TYPE = LONG CARDINAL;  -- simulates TYPE = [0..maxPagesPerVolume)  firstPageNumber: PageNumber = 0;  lastPageNumber: PageNumber = maxPagesPerVolume - 1;  -- Attributes  Type: TYPE = MACHINE DEPENDENT{    normal(0), debugger(1), debuggerDebugger(2), nonPilot(3)};  maxNameLength: CARDINAL = 40;  -- maximun name length of a volume's labelString.  GetAttributes: PROCEDURE [volume: ID]    RETURNS [volumeSize, freePageCount: PageCount, readOnly: BOOLEAN];  GetLabelString: PROCEDURE [volume: ID, s: LONG STRING];  GetType: PROCEDURE [volume: ID] RETURNS [type: Type];  ChangeLabelString: PROCEDURE [volume: ID, newLabel: LONG STRING];  -- Mounting and unmounting volumes  Status: TYPE = {    unknown, partiallyOnLine, closedAndInconsistent, closedAndConsistent,    openRead, openReadWrite};  BooleanDefaultFalse: TYPE = BOOLEAN ¬ FALSE;  TypeSet: TYPE = PACKED ARRAY Type OF BooleanDefaultFalse;  onlyEnumerateCurrentType: TypeSet = [];  -- all FALSE  Close, Open: PROCEDURE [volume: ID];  GetNext: PROCEDURE [    volume: ID, includeWhichVolumes: TypeSet ¬ onlyEnumerateCurrentType]    RETURNS [nextVolume: ID];  -- returns ID's of all completely online (but not necessarily open) volumes.  -- If all elements of includeWhichVolumes are FALSE, returns only volumes  -- satisfying GetType[nextVolume]=GetType[systemID]; if any elements of  -- includeWhichVolumes are TRUE, returns only volumes satisfying  -- includeWhichVolumes[GetType[nextVolume]]=TRUE.  GetStatus: PROCEDURE [volume: ID] RETURNS [Status];  -- Root directories  InsertRootFile: PROCEDURE [type: File.Type, file: File.File];  RemoveRootFile: PROCEDURE [type: File.Type, volume: Volume.ID ¬ systemID];  LookUpRootFile: PROCEDURE [type: File.Type, volume: Volume.ID ¬ systemID]    RETURNS [file: File.File];  GetNextRootFile: PROCEDURE [lastType: File.Type, volume: Volume.ID ¬ systemID]    RETURNS [file: File.File, type: File.Type];  RootDirectoryError: ERROR [type: RootDirectoryErrorType];  RootDirectoryErrorType: TYPE = {    directoryFull, duplicateRootFile, invalidRootFileType, rootFileUnknown};  maxEntriesInRootDirectory: READONLY CARDINAL;  -- Volume creation/erasing  Create: PROCEDURE [    pvID: System.PhysicalVolumeID, size: PageCount, name: LONG STRING, type: Type,    minPVPageNumber: PhysicalVolume.PageNumber ¬ 1] RETURNS [volume: ID];  Erase: PROCEDURE [volume: ID];  -- Signals and errors  InsufficientSpace: ERROR [currentFreeSpace: PageCount, volume: ID];  NeedsScavenging: ERROR [volume: ID];  NotOpen: ERROR [volume: ID];  ReadOnly: ERROR [volume: ID];  Unknown: ERROR [volume: ID];  NotOnline: ERROR [volume: ID];  Error: ERROR [error: ErrorType];  ErrorType: TYPE = {    nameRequired, pageCountTooSmallForVolume, subvolumeHasTooManyBadPages,    tooManySubvolumes};  END.--LOG   (for earlier entries, please see Mesa 8.0 archive version.)21-Nov-82 16:15:02	AWL         Added type PageNumber for completeness.  Removed IsOnServer.  Modified the root directory stuff to deal with File.ID's; changed the the keyword cap in InsertRootFile from cap to file.  Added ChangeLabel procedure.22-Nov-82 16:55:16	AWL         Added volume arguments to InsufficientSpace and NeedsScavenging 6-Dec-82 15:11:00	LXD         Changed InsertRootFile to take File.File,  LookUpRootFile and GetNextRootFile to return File.File.10-Dec-82 18:47:48	LXD         Added Error, ErrorType, minVolumeSize.   21-Mar-83 10:45:44	WDK         New compiler wouldn't digest. 23-Jun-83 16:53:56	JXG         maxPagesPerVolume ¬ 2­23  (not 2­23-1)  ChangeLabel => ChangeLabelString; minVolumeSize => minPagesPerVolume