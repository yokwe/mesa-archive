-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- PilotSwitches.mesa      25-May-83 16:20:14 by WDK     -- DIRECTORY--   System USING [SwitchName];-- This module defines those booting switches used by Pilot.  Clients may not use switches in these ranges.PilotSwitches: DEFINITIONS =  BEGIN    SwitchName: TYPE = --System.SwitchName-- CHARACTER;    	-- Switch domains:  THESE SHOULD BE IN SYSTEM!  PilotDomainA: TYPE =    SwitchName[FIRST[CHARACTER]..'A);  -- reserved for Pilot.    DevelopmentEnvironmentDomain: TYPE =    SwitchName['A..'Z];  -- reserved for Tajo/CoPilot/Cascade.    PilotDomainB: TYPE = SwitchName('Z..'a);  -- reserved for Pilot.  ProductDomain: TYPE = SwitchName['a..'z];  -- reserved for Star/Servers.    PilotDomainC: TYPE =    SwitchName('z..LAST[CHARACTER]];  -- reserved for Pilot.    	-- Switch values:  (in collating sequence)    reservedA: PilotDomainA = ' ;  -- Reserved for user-interface switch interpreters.   -- (available): PilotDomainA = '!;  reservedB: PilotDomainA = '";  -- Reserved for user-interface switch interpreters.  -- (available): PilotDomainA = '$;  -- (available): PilotDomainA = '%;    hang: PilotDomainA = '&;  -- Hang in loop with MP code 936 rather then go to debugger.  reservedC: PilotDomainA = '';  -- Reserved for user-interface switch interpreters.  -- (available): PilotDomainA = '(;  -- (available): PilotDomainA = ');  -- (available): PilotDomainA = '*;  reservedD: PilotDomainA = '+;  -- Reserved for user-interface switch interpreters.  -- (available): PilotDomainA = ',;  reservedE: PilotDomainA = '-;  -- Reserved for user-interface switch interpreters.  -- (available): PilotDomainA = '.;  reservedF: PilotDomainA = '/;  -- Reserved for user-interface switch interpreters.  break0: PilotDomainA = '0;  -- Go to debugger as early as possible.  break1: PilotDomainA = '1;  -- Go to debugger as soon as all code is map-logged.  break2: PilotDomainA = '2;  -- Go to debugger just before calling PilotClient.Run.  tinyDandelionMemorySize: PilotDomainA = '3;  -- Simulate 192K Dandelion memory.  zeroScratchMem: PilotDomainA = '4;  -- Initilize scratch mem pages to zero.  remoteDebug: PilotDomainA = '5;  -- Go to Ethernet for debugger.  heapOwnerChecking: PilotDomainA = '6;  -- Turn on owner checking on Heap.systemZone and Heap.systemMDSZone.  -- See also heapChecking.  disableMapLog: PilotDomainA = '7;  -- Disable the logging of space mappings (automatically disabled if  -- no debugger available). In any event we will map log until keystop 2.  interruptWatcher: PilotDomainA = '8;  -- Create a process to call debugger if interrupt key depressed.  stdDandelionMemorySize: PilotDomainA = '9;  -- Simulate 256K Dandelion memory.  breakFileMgr: PilotDomainA = ':;  -- Go to debugger in FileMgr as early as possible.  breakVMMgr: PilotDomainA = ';;  -- Go to debugger in VMMgr as early as possible.  noEthernetOne: PilotDomainA = '<;  -- Make EthernetOneDriver act as if there were no Ethernet1 attached.  noStartCommunication: PilotDomainA = '=;  -- Don't initialize communication at system startup.  noEthernet: PilotDomainA = '>;  -- Make EthernetDriver act as if there were no Ethernet(2) attached.  debuggingOnUtilityPilot: PilotDomainA = '?;  -- (must give as \077 to Othello)  -- For debugging UtilityPilot-based clients: Pilot will keep loadState, etc.  -- (available): PilotDomainA = '@;  -- (available): PilotDomainB = '[;  reservedG: PilotDomainB = '\\;  -- Reserved for user-interface switch interpreters.  -- (available): PilotDomainB = '];  heapChecking: PilotDomainB = '­;  -- Turn on checking on Heap.systemZone and Heap.systemMDSZone.  -- See also heapOwnerChecking.  -- (available): PilotDomainB = '¬;  -- (available): PilotDomainB = '\140;  ++ (accent grave)  AnonymousBackingFileSize: TYPE =    PilotDomainC['{ .. '}];  -- includes {, |, and }.  smallAnonymousBackingFile: AnonymousBackingFileSize =    FIRST[AnonymousBackingFileSize];  mediumAnonymousBackingFile: AnonymousBackingFileSize =    FIRST[AnonymousBackingFileSize]+1;  largeAnonymousBackingFile: AnonymousBackingFileSize =    FIRST[AnonymousBackingFileSize]+2;  reservedH: PilotDomainC = '~;  -- Reserved for user-interface switch interpreters.  reservedI: PilotDomainC = '\177;    -- (DEL) Reserved for user-interface switch interpreters.  germExtendedErrorReports: PilotDomainC = '\360;  -- In additiona to displaying the basic error code, the boot loader  -- will also display global frame and pc of contexts causing error.  -- Once this switch has been used on ANY boot, the switch remains  -- effective until the next boot-button boot.  heapParamsFromClient: PilotDomainC = '\374;  -- Lets special clients initialize Heap.systemZone and Heap.systemMDSZone.  fillMapLog: PilotDomainC = '\375;  -- Map log until the map log is full and then stop map logging.  -- Note that this switch is preempted by disableMapLog.    eatGerm: PilotDomainC = '\376;  -- Causes the boot loader memory to be reclaimed, saving real memory  -- and preventing going to the debugger.  -- (If set, forces the "hang" switch to be set).  END.--LOG30-Aug-81 16:08:17   Kntusen	Created file. 9-Dec-81 13:11:31   WDK       PilotDomainB was wrong.  Added anonymous bcaking size switches.27-Jan-82 12:05:54   AWL      	Added eatGerm switch. 8-Feb-82 19:01:47   AWL      	Added fillMapLog switch.29-Sep-82 12:58:44   WDK     	Added zeroScratchMem.31-Mar-83 17:21:06   WDK        Deleted systemLogicalVolumeOnly, breakTransactions, and allPhysicalVolumes. Added tinyDandelionMemorySize, debuggingOnUtilityPilot, heapChecking.25-May-83 16:20:05   WDK     	Added xxx.