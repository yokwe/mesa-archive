-- Copyright (C) 1987  by Xerox Corporation. All rights reserved. -- HeapExtras.mesa     28-Jun-87 17:19:27 by RSVDIRECTORY  Environment USING [PageCount, wordsPerPage],  Heap USING [Attributes, minimumNodeSize, NWords, unlimitedSize],  Space USING [defaultSwapUnitSize, SwapUnitSize],  System USING [VolumeID],  Volume USING [systemID];HeapExtras: DEFINITIONS  IMPORTS Heap, Volume =  BEGIN  -- this interface allows the flexibility of specifying the volume on which the  -- space for the heap will be allocated.  -- Creating and deleting heaps with volume specification  NewCreate: PROC [    initial: Environment.PageCount,    maxSize: Environment.PageCount ¬ Heap.unlimitedSize,    increment: Environment.PageCount ¬ 4,    swapUnitSize: Space.SwapUnitSize ¬ Space.defaultSwapUnitSize,    threshold: Heap.NWords ¬ Heap.minimumNodeSize,      -- smaller allocation request round up to this size    largeNodeThreshold: Heap.NWords ¬ Environment.wordsPerPage/2,      -- larger nodes in separate spaces    ownerChecking: BOOLEAN ¬ FALSE, checking: BOOLEAN ¬ FALSE,    volumeID: System.VolumeID ¬ Volume.systemID]      -- volume on which space is to be allocated    RETURNS [UNCOUNTED ZONE];      NewCreateUniform: PROC [    initial: Environment.PageCount,    maxSize: Environment.PageCount ¬ Heap.unlimitedSize,    increment: Environment.PageCount ¬ 4,    swapUnitSize: Space.SwapUnitSize ¬ Space.defaultSwapUnitSize,    objectSize: Heap.NWords,     ownerChecking: BOOLEAN ¬ FALSE, checking: BOOLEAN ¬ FALSE,    volumeID: System.VolumeID ¬ Volume.systemID]      -- volume on which space is to be allocated    RETURNS [UNCOUNTED ZONE];      NewCreateMDS: PROC [    initial: Environment.PageCount,    maxSize: Environment.PageCount ¬ Heap.unlimitedSize,    increment: Environment.PageCount ¬ 4,    swapUnitSize: Space.SwapUnitSize ¬ Space.defaultSwapUnitSize,    threshold: Heap.NWords ¬ Heap.minimumNodeSize,      -- smaller allocation request round up to this size    largeNodeThreshold: Heap.NWords ¬ Environment.wordsPerPage/2,      -- larger nodes in separate spaces    ownerChecking: BOOLEAN ¬ FALSE, checking: BOOLEAN ¬ FALSE,    volumeID: System.VolumeID ¬ Volume.systemID]      -- volume on which space is to be allocated    RETURNS [MDSZone];      NewGetAttributes: PROC [z: UNCOUNTED ZONE] RETURNS [    heapPages, maxSize, increment: Environment.PageCount,    swapUnitSize: Space.SwapUnitSize, ownerChecking, checking: BOOLEAN,    volumeID: System.VolumeID, attributes: Heap.Attributes];        NewGetAttributesMDS: PROC [z: MDSZone] RETURNS [    heapPages, largeNodePages, maxSize, increment: Environment.PageCount,    swapUnitSize: Space.SwapUnitSize, threshold, largeNodeThreshold: Heap.NWords,    ownerChecking, checking: BOOLEAN, volumeID: System.VolumeID]; END.   28-Jun-87 17:19:44	RSV  Created file from that given to us by BLT.