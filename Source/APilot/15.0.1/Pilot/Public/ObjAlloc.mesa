-- Copyright (C) 1982  by Xerox Corporation. All rights reserved. -- ObjAlloc.mesa (last edited by: AWL       on: 23-Jul-82 17:52:40ObjAlloc: DEFINITIONS =-- The ObjAlloc facility provides an allocator for objects.-- This is a Public interface and is documented in the PilotProgrammer's Manual.  BEGIN    AllocFree: TYPE = MACHINE DEPENDENT {free(0), alloc(1)};  AllocationPool: TYPE = PACKED ARRAY [0..0) OF AllocFree;  -- Note that the client can only reference an AllocationPool entry with a  -- CARDINAL index due to restrictions in the Mesa compiler.  In particular, an  -- ItemIndex can not be used as an index into the array.  AllocPoolDesc: TYPE = RECORD [     allocPool: LONG POINTER TO AllocationPool,     poolSize: ItemCount];  -- An AllocPoolDesc describes a pool that contains the allocated/free state  -- of a collection of objects with ordered names    Interval: TYPE = RECORD [first: ItemIndex, count: ItemCount];    -- An Interval describes a range of objects    ItemIndex: TYPE = LONG CARDINAL -- [0..LAST[ItemCount]) --;    -- used to "name" an object    ItemCount: TYPE = LONG CARDINAL;    -- used to count a number of objects  Allocate: PROCEDURE [     pool: AllocPoolDesc, count: ItemCount, willTakeSmaller: BOOLEAN ¬ FALSE]     RETURNS [interval: Interval];     -- Allocates a range of objects from pool based upon the values of     -- count and willTakeSmaller.  ExpandAllocation: PROCEDURE [     pool: AllocPoolDesc, where: ItemIndex, count: ItemCount,     willTakeSmaller: BOOLEAN ¬ FALSE]     RETURNS [extendedBy: ItemCount];     -- Expands an existing allocation at its end.  Free: PROCEDURE [     pool: AllocPoolDesc, interval: Interval, validate: BOOLEAN ¬ TRUE];     -- Frees a range of already allocated objects.     -- Error checking is controlled through "validate"  InitializePool: PROCEDURE [pool: AllocPoolDesc, initialState: AllocFree];    -- Initialize "pool" to a specified state.  Error:ERROR [error: ErrorType];  ErrorType: TYPE = {insufficientSpace, invalidParameters};    -- Error[insufficientSpace] is raised if there is no space in the    --   AllocationPool to allocate objects.    -- Error[invalidParameters] is raised if the arguments to a procedure    --  are not valid in some way (see the Pilot Programmer's Manual for details)    AlreadyFreed: ERROR [item: ItemIndex];    -- Raised when an attempt is made to free an already free object.  END.      --LOG  23-Jul-82 17:52:37	AWL      	Created file.