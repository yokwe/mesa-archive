-- Copyright (C) 1989 by Fuji Xerox Co., Ltd. All rights reserved. -- <>ResMemMgr>MStoreExtras.mesa   22-Jan-89 17:25:01 by TxHDIRECTORY PageMap USING [RealPageNumber], VM USING [Interval];MStoreExtras: DEFINITIONS = {-- The argment "interval" should be resident and must not be nullInterval . This proc deallocates the current real pages and then allocates only free corresponding real pages in consecutie pool. Return status meanings are,<<    cannot = no consecutive real resources to be allocated. Retry or Abort.    partially = allocated some pages(not all).          all  = allocated all pages                                  >> GetConsecutiveRealMemory: PROC [interval: VM.Interval]                           RETURNS [status: StatusGet]; StatusGet: TYPE = {cannot, partially, all};<< Notes:   1. The argment "interval" must not be nullInterval. 2. The case that the "interval" already backed by consecutive memories makes things confused.>>     -- This proc is used by a vm layer consecutive real get proc. It has 2 functions, one is check, another is sweap. In case of check, it returns TRUE if all pages of the given interval is backed by the expected consecutive real pages. The sweap function is used when consecutive allocation has failed in spite of enough tries, in order to clean and end up this allocation.  CheckOrSweapConsecutiveInterval: PROC [interval: VM.Interval, sweap: BOOLEAN]                                  RETURNS [BOOLEAN]; -- It deallocate real using "DeallocateInternal" and check global variables for "consecutive real pages".  FreeConsecutiveRealMemory: PROC [interval: VM.Interval]; << Notes:   1. The argment "interval" must not be nullInterval. 2. The "interval" must have consecutive real pages. >>-- Returns TRUE if the given real page is within the consecutive interval which is being allocated.  IsActiveConsecutiveReal: PROC[realPage: PageMap.RealPageNumber]                           RETURNS [BOOLEAN];    }...LOG22-Jan-89 17:24:59   TxH    created.