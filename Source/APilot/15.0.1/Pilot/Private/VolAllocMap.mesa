-- Copyright (C) 1983, 1986  by Xerox Corporation. All rights reserved. -- VolAllocMap.mesa        2-Jun-86 16:14:14 by RSV     -- This Private interface provides the operations which allocate and free -- page groups. Both AllocPageGroup[] and FreePageGroup[] update an allocation-- map as well as writing labels on the appropriate file pages.DIRECTORY  KernelFile USING [FilePtr, PageGroup],  LogicalVolumeFormat USING [Handle],  VM USING [Interval],  VolTable USING [LVToken],  Volume USING [ID, PageCount, PageNumber];VolAllocMap: DEFINITIONS =  BEGIN  FilePtr: TYPE = KernelFile.FilePtr;  GroupPtr: TYPE = POINTER TO KernelFile.PageGroup;  ReadOnlyGroupPtr: TYPE = POINTER TO READONLY KernelFile.PageGroup;  Handle: TYPE = LogicalVolumeFormat.Handle;  BusyFree: TYPE = {busy, free};  BufferDispostion: TYPE = {forceOut, unmap};  Close: PROCEDURE [    vol: Volume.ID, disposition: BufferDispostion, tok: VolTable.LVToken] = INLINE    {RealClose[vol, disposition]};  -- Stop dealing with volume.  AllocPageGroup: PROCEDURE [    vol: Handle, filePtr: FilePtr, groupPtr: GroupPtr, data: VM.Interval,    tok: VolTable.LVToken];  << Allocates a group of pages and writes labels. groupPtr is both an argument  describing the page group to allocate, and a result describing the page  group which was actually allocated. Similarly, filePtr.size is updated  to the size of the file after allocation. Volume.InsufficientSpace  wil be raised if there are no free pages left on the volume. If data.count  ~=0, the newly allocated pages are filled from the specified VM. In this  case The VM described by data MUST BE RESIDENT and data.count must be >=  (groupPtr.nextFilePage - groupPtr.filePage), or the debugger will  be called. If data.count = 0, the zeroes are supplied for the pages.>>  FreePageGroup: PROCEDURE [    vol: Handle, filePtr: FilePtr, groupPtr: ReadOnlyGroupPtr,    tok: VolTable.LVToken];  -- Free a page group and write the labels  -- The following operations are provided for use by the scavenger.  -- Normal clients should not need them.   SetPageGroup: PROCEDURE [    vol: Handle, volumePage: Volume.PageNumber, count: Volume.PageCount,    state: BusyFree, prevState: PrevState, tok: VolTable.LVToken] = INLINE {    RealSetPageGroup[vol, volumePage, count, state, prevState]};  << Sets the entries for pages [volumePage..volumePage + count) as free or busy.  according to the value of state. NO LABELS ARE WRITTEN.  prevState MAY be used to enable extra debugging checks.>>  PrevState: TYPE = {mightBeSetAlready, ignorePrevSetting};  PagesForVam: PROCEDURE [volSize: Volume.PageCount]    RETURNS [vamSize: Volume.PageCount];  -- Given the size of a volume, the procedure returns the number of pages  -- necessary to hold the VAM. No LV need be locked for this operation.  -- PRIVATE Procedures:  RealClose: PRIVATE PROCEDURE [vol: Volume.ID, disposition: BufferDispostion];  RealSetPageGroup: PRIVATE PROCEDURE [    vol: Handle, volumePage: Volume.PageNumber, count: Volume.PageCount,    state: BusyFree, prevState: PrevState];  END.LOG   (For earlier entries, see Mesa 10.0 archive version.)11-Oct-82 11:09:02   JXP      Updated for Klamath. Added the BusyFree type. Replaced AccessVAM with   SetPageGroup[] to make VAM manipulation simpler. 5-Nov-82 10:45:22   JXP      Added PagesForVam[]. Add vol param. to Close. Change all references of   FileInternal to KernelFile. Document Error conditions. Add data Parm to   AllocPageGroup[].24-Nov-82 15:31:58   JXP      Change parm. in Close[] from final to dispostion. Add BufferDisposition.   Add token parm. to Close, AllocPageGroup, FreePageGroup, SetPageGroup.   Both Close and SetPageGroup do an INLINE call to its PRIVATE counterpart.13-Dec-82 16:00:14   JXP      Update comments. Add ReadOnlyGroupPtr TYPE, use that type in FreePageGroup.30-Nov-83 20:48:58   WDK     	Added PrevState.15-Apr-86 17:41:14   RSV        Added slop parameter to AllocPageGroup 2-May-86 16:13:53   RSV        Changed slop parameter from a File.PageNumber to a Volume.PageCount. 2-Jun-86 16:14:14   RSV   Back out of 15-Apr fix (get rid of slop parameter in AllocPageGroup)