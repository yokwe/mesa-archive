-- Copyright (C) 1986, 1987  by Xerox Corporation. All rights reserved. -- ETableInternal.mesa      29-Sep-87 12:01:14 by RSV  DIRECTORY  ETable USING [    ETableHandle, LVBucketInfo, PageGroup, PageGroupHandle],  File USING [ID, PageCount, PageNumber, Type],   KernelFile USING [PageGroup],   PilotFileTypes USING [PilotFileType],  VolTable USING [LVToken],  Volume USING [PageNumber];ETableInternal: DEFINITIONS =  BEGIN    -- Constants    fileHeaderSize: CARDINAL = 1; -- number of pages needed for etable file header  maxPageGroupSize: CARDINAL = 20; -- per etable in bucket   normalBucketSize: CARDINAL = 1; -- only one page buffers   nullETableFilePage: File.PageNumber = 0;   overflowBufferSize: CARDINAL = 4; -- must be same size as overflow blocks  minBuckets: CARDINAL = 3;  -- arbitrary minimum number of buckets per ETableFile    -- Types    Operation: TYPE = {read, write};    -- Locking operations    AcquireLVBucketInfo: PROCEDURE [token: VolTable.LVToken]    RETURNS [ETable.LVBucketInfo];      ReleaseLVBucketInfo: PROCEDURE [lvBI: ETable.LVBucketInfo]    RETURNS [ETable.LVBucketInfo];              -- ETable operations         CreateETableInternal: PROCEDURE [    lvBucketInfo: ETable.LVBucketInfo, fileID: File.ID,    pageGroups: ETable.PageGroupHandle, type: File.Type];  ConvertTypeToID: PROCEDURE [type: PilotFileTypes.PilotFileType]     RETURNS [File.ID];       DeleteETableInternal: PROCEDURE [    lvBucketInfo: ETable.LVBucketInfo, fileID: File.ID];  FindETable: PROCEDURE [lvBucketInfo: ETable.LVBucketInfo, fileID: File.ID];  GetPageGroupInternal: PROCEDURE [     lvBucketInfo: ETable.LVBucketInfo, token: VolTable.LVToken,    fileID: File.ID, filePage: File.PageNumber]    RETURNS [found: BOOLEAN ¬ FALSE, group: KernelFile.PageGroup];      ReplaceOldETableInternal: PROCEDURE [    lvBucketInfo: ETable.LVBucketInfo, newETable: ETable.ETableHandle];      ReplaceOldETable: PROCEDURE [     token: VolTable.LVToken, newETable: ETable.ETableHandle];      WhereIsFilePageOnVolume: PROCEDURE [    page: File.PageNumber, eTable: ETable.ETableHandle]    RETURNS [    volumePage: Volume.PageNumber, containingPageGroup: ETable.PageGroup,    index: CARDINAL];      -- ETable file operations    GetCurrentETFileSize: PROCEDURE [    lvBucketInfo: ETable.LVBucketInfo] RETURNS [File.PageCount];      SetTemporaryInternal: PUBLIC PROCEDURE [    lvBucketInfo: ETable.LVBucketInfo,     token: VolTable.LVToken, fileID: File.ID, temporary: BOOLEAN];      -- and more    DoBucketIO: PROCEDURE [lvBucketInfo: ETable.LVBucketInfo, op: Operation];    DoOverflowIO: PROCEDURE [lvBucketInfo: ETable.LVBucketInfo, op: Operation];    GetSize: PROCEDURE [etable: ETable.ETableHandle]    RETURNS [fileSize: File.PageCount];      Hash: PROCEDURE [lvBucketInfo: ETable.LVBucketInfo, fileID: File.ID]    RETURNS [bucket: CARDINAL];      ReplacePageInternal: PROCEDURE [    lvBucketInfo: ETable.LVBucketInfo, fileID: File.ID,    oldFilePage: File.PageNumber, newVolumePage: Volume.PageNumber];        END.    LOG   11-Jun-86 13:26:00	ET  		Created file.10-Jul-86 16:54:27      ET		Added ReplacePageInternal for Verifier.11-Jul-86 15:29:17      RSV             Added Hash.26-Aug-86 11:45:34      RSV             Added Operation, DoBucketIO, and DoOverflowIO. 6-Oct-86 18:29:13	ET		Added CreateETableInternal for Verifier.20-Oct-86 14:29:24	ET		Took out whichFile parameter from GetCurrentETFileSize. 4-Nov-86 17:01:47      RRR             Added GetPageGroupInternal. 5-Nov-86 17:01:47      RRR             Added SetTemporaryInternal. 8-Jan-87 23:02:03      RSV             Added minBuckets.29-Sep-87 12:01:14      RSV             Added DeleteETableInternal and FindETable.