-- Copyright (C) 1983, 1987  by Xerox Corporation. All rights reserved. -- HeapInternal.mesa (last edited by: RSV   on: 28-Jun-87 17:35:12)DIRECTORY  Heap USING [NWords, Type],  Space USING [PageCount],  System USING [VolumeID],  Zone USING [Handle],  ZoneInternal USING [NodeHeader];HeapInternal: DEFINITIONS =  BEGIN  UncountedZoneRep: TYPE = LONG POINTER TO UncountedZoneObject;  UncountedZoneObject: TYPE = MACHINE DEPENDENT RECORD [    procs(0:0..31): LONG POINTER TO Procs, data(2:0..31): Handle];  Procs: TYPE = MACHINE DEPENDENT RECORD [    Make(0): PROC [UNCOUNTED ZONE, Heap.NWords] RETURNS [LONG POINTER],    Free(2): PROC [UNCOUNTED ZONE, LONG ORDERED POINTER]];  MDSZoneRep: TYPE = POINTER TO MDSZoneObject;  MDSZoneObject: TYPE = MACHINE DEPENDENT RECORD [    procs(0:0..15): POINTER TO MDSProcs, data(1:0..15): MdsHandle];  MDSProcs: TYPE = MACHINE DEPENDENT RECORD [    Make(0): PROC [MDSZone, Heap.NWords] RETURNS [POINTER],    Free(2): PROC [MDSZone, POINTER]];  Handle: TYPE = LONG POINTER TO Data;  NormalHandle: TYPE = LONG POINTER TO normal Data;  UniformHandle: TYPE = LONG POINTER TO uniform Data;  MdsHandle: TYPE = POINTER TO mds Data;  Data: TYPE = RECORD [    seal: INTEGER ¬ currentSeal,    lock: MONITORLOCK,    resident: BOOLEAN ¬ FALSE,    ownerChecking, checking: BOOLEAN,    maxSize, currentSize, increment, swapUnit: Space.PageCount,    volumeID: System.VolumeID,    vp: SELECT tag: Heap.Type FROM      normal => [	threshold, largeNodeThreshold: Heap.NWords,	largeNodes: LargeNode ¬ NIL,	zones: ZoneHandle,	uzo: UncountedZoneObject],      mds => [	threshold, largeNodeThreshold: Heap.NWords,	largeNodes: LargeNode ¬ NIL,        base: LONG ORDERED BASE POINTER,	zH: Zone.Handle,	mzo: MDSZoneObject],      uniform => [        blocks: Block,	free: Node,	objectSize: Heap.NWords,	uzo: UncountedZoneObject],      ENDCASE];  EnumeratedInitial: TYPE = {initialHeap, initialExtended, extension};  ZoneHandle: TYPE = LONG ORDERED BASE POINTER TO ZoneObject;  ZoneObject: TYPE = RECORD [    next: ZoneHandle,    base: LONG ORDERED BASE POINTER,    length: NAT,    initial: EnumeratedInitial,    zH: Zone.Handle];  LargeNode: TYPE = LONG POINTER TO LargeNodeHeader;  LargeNodeHeader: TYPE = MACHINE DEPENDENT RECORD [    next(0): LargeNode,    nodeHeader(2): inuse ZoneInternal.NodeHeader,    node(3): ARRAY [0..0) OF RECORD [UNSPECIFIED]];  Node: TYPE = LONG ORDERED POINTER TO NodeObject;  NodeObject: TYPE = RECORD [next: Node];  Block: TYPE = LONG ORDERED POINTER TO BlockObject;  BlockObject: TYPE = RECORD [next: Block, length: NAT, initial: BOOLEAN];  --  -- Constants  currentSeal: INTEGER = 23451;  END.....27-Dec-83 14:33:14  EKN  ??28-Jun-87 17:35:12  RSV  Added volumeID to Data record. 