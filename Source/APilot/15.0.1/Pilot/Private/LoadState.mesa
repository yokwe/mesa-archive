-- Copyright (C) 1983, 1986  by Xerox Corporation. All rights reserved. -- Pilot>Private>LoadState.mesa    1-Jul-86  9:20:55 by MEW     <<This Private interface provides access to the load state.The load state comprises the Module Info Table, which contains informationabout currently existing PROGRAMS (module instances), and the Bcd Info Table,which contains information about currently loaded bcds.>>DIRECTORY  LoadStateFormat USING [BcdInfo, Handle, Index, ModuleInfo],  PrincOps USING [GlobalCodebase],  PrincOpsExtras2 USING [ControlLink, GFTHandle, LongGlobalFrameHandle];LoadState: DEFINITIONS =  BEGIN    --========== Items that SHOULD BE IN LoadStateFormat:  -- The load state comprises the Module Info Table, which contains information  -- about currently existing PROGRAMS (module instances), and the Bcd Info Table,  -- which contains information about currently loaded bcds.  -- The Module Info Table is kept compacted and   -- sorted by increasing gFrame address.  ModuleInfoIndex: TYPE = LoadStateFormat.Index;  -- index into module info table  nullModuleInfoIndex: ModuleInfoIndex = ModuleInfoIndex.LAST;  ModuleInfoTable: TYPE = ARRAY --ModuleInfoIndex--[0..0) OF LoadStateFormat.ModuleInfo;  LPModuleInfoTable: TYPE = LONG POINTER TO ModuleInfoTable;  BcdInfoIndex: TYPE = LoadStateFormat.Index;  -- index into bcd info table  nullBcdInfoIndex: BcdInfoIndex = BcdInfoIndex.LAST;  BcdInfoTable: TYPE = ARRAY --BcdInfoIndex--[0..0) OF LoadStateFormat.BcdInfo;  LPBcdInfoTable: TYPE = LONG POINTER TO BcdInfoTable;  --========== Begin LoadState proper:    -- TYPEs:  RuntimeGlobalOverhead: TYPE = MACHINE DEPENDENT RECORD [    storage: LONG POINTER,  -- for deallocating this gFrame    frameLinks: ARRAY [0..0) OF PrincOpsExtras2.ControlLink];    <<globalOverhead: PrincOpsExtras2.GlobalOverhead;  -- follows links >>    <<globalVariables: ARRAY [0..0) OF WORD];  -- must be quad aligned >>    RuntimeOverheadHandle: TYPE = LONG ORDERED POINTER TO RuntimeGlobalOverhead;  ModuleInfoRange: TYPE =    CARDINAL[0..(LAST[CARDINAL])/SIZE[LoadStateFormat.ModuleInfo]);  ModuleInfoSequence: TYPE = RECORD [    length: ModuleInfoRange,    seq: SEQUENCE maxLength: ModuleInfoRange OF LoadStateFormat.ModuleInfo];  ModuleInfoSequenceHandle: TYPE = LONG POINTER TO ModuleInfoSequence;  --========== Load State operations:      LockBcdInfo: PROCEDURE []    RETURNS [loadState: LoadStateFormat.Handle, bcdInfo: LPBcdInfoTable];    <<Acquires exclusive access to:       o  the Bcd Info Table       o  the load state ID       o  the right to change the address of the load state and its components.    NOTE that the addresses RETURNED is only      valid until Unlock is called. DO NOT retain the addresses!    Client must call Unlock when done.    NOTE that exclusive access to the Module Info Table is NOT obtained.    client must call other procedures below to obtain module info.>>  UnlockBcdInfo: PROCEDURE [];    -- Relinquishes exclusive access to the Bcd Info Table, etc.    -- Caller must have done a LockBcdInfo[].    --========== GFT operations:      EnterGlobalFrame: PROCEDURE     [frame: PrincOpsExtras2.LongGlobalFrameHandle, codebase: PrincOps.GlobalCodebase]     RETURNS [gfi: PrincOpsExtras2.GFTHandle];      RemoveGlobalFrame: PROCEDURE [frame: PrincOpsExtras2.LongGlobalFrameHandle];    NoGlobalFrameSlots: ERROR;  --========== Bcd Info Table operations:  -- Note that Bcd Info Table operations may also be directly  -- performed by the holder of the BcdInfo lock.  ExpandTablesInternal: PROCEDURE [totalBcdsNeeded, totalModulesNeeded: CARDINAL]    RETURNS [loadState: LoadStateFormat.Handle, bcdInfo: LPBcdInfoTable];    -- Expands the Bcd Info Table and Module Info Table to be able to hold at    -- least the number of items specified, and returns pointers to the new table.    -- Caller MUST have bcd info lock.  --========== Module Info Table operations:    -- The caller of any of the Module Info Table operations  -- should have the Bcd Info Table lock.   EnterModuleInfos: PROCEDURE [moduleInfoSeq: ModuleInfoSequenceHandle];    -- Inserts module infos into the Module Info Table.    -- Caution: Be sure that moduleInfoSeq.length is    --   correct (moduleInfoSeq.maxLength is the sequence length).    -- May raise TablesFull.  GetModuleInfo: PROCEDURE [gfi: PrincOpsExtras2.GFTHandle]    RETURNS [info: LoadStateFormat.ModuleInfo];    -- Returns information about module instance.  GFFromBcdInfo: PROCEDURE [    cgfi: NATURAL, bcdIndex: BcdInfoIndex] RETURNS [gfi: PrincOpsExtras2.GFTHandle];    -- Returns info about original module instance of    -- module gfi within bcd "bcdIndex".  MarkModuleResolved: PROCEDURE [gfi: PrincOpsExtras2.GFTHandle, value: BOOLEAN];    -- Sets moduleInfoSeq.resolved = value.  OriginalModule: PROCEDURE [gfi: PrincOpsExtras2.GFTHandle]    RETURNS [originalGFI: PrincOpsExtras2.GFTHandle];    -- Returns the original instance of a module.    -- (If frame is an original itself, returns frame itself.)    -- Note: Does not check that frame is valid. Client can do if desired.   RemoveModuleInfos: PROCEDURE [bcdIndex: BcdInfoIndex];    -- Deletes all entries for bcdIndex from the Module Info Table.    -- Removes bcdIndex entry from Bcd Info Table    -- compacts both tables  UnresolvedModuleInfosOfBcd: PROCEDURE [bcdIndex: BcdInfoIndex, zone: UNCOUNTED ZONE]    RETURNS [moduleInfoSeq: ModuleInfoSequenceHandle];    -- Returns a list of module info of all modules that belong to a bcd    -- and which are marked as having some unresolved imports.    -- moduleInfoSeq.length is the number of significant entries.    -- Returns NIL if no such modules.  ModuleInfosOfBcd: PROCEDURE [bcdIndex: BcdInfoIndex, zone: UNCOUNTED ZONE]    RETURNS [moduleInfoSeq: ModuleInfoSequenceHandle];    -- Returns a list of module info of all modules that belong to a bcd    -- used by the unloader.  -- Module Info Table Errors:  TablesFull: ERROR [totalBcdsNeeded, totalModulesNeeded: CARDINAL];  END.LOG20-Oct-81 19:20:14   JGS    	?  7-Jul-83 12:01:53   JXP   	Adapt to having no GFT.19-Jul-83 14:36:36   JXP   	Add RemoveModule procedure.10-Aug-83 10:03:46   WDK        Documented. Redesign: Acquire is replaced by Access, Release disappears. Deleted procedures for manipulating bcd table. Renamed MapConfigToReal=>GFFromBcdInfo, MapRealToConfig=>BcdInfoFromGF, GetModule=>GetModuleInfo.  Deleted Error.30-Aug-83 21:35:40   WDK        More redesign: Renamed Acquire replaced by LockBcdInfo, UnlockBcdInfo. Deleted AcquireBcd, ReleaseBcd. Deleted ReleaseMap. GetMap gets a zone arg. Map moves to LoaderCoreUtils. GetMap replaced by ModuleInfosOfBcd. BcdInfoFromGF replaced by GetModuleInfo. RemoveModule replaced by RemoveModuleInfos. Added MarkModuleResolved, UnresolvedModuleInfosOfBcd.22-Sep-83 17:34:43   RES  	?27-Sep-83 18:25:43   WDK     	Added OriginalGlobalFrame. 9-Nov-83 14:38:19   WDK     	ExpandTablesInternal now returns new pointers.21-Feb-86 16:27:36   ET	        Convert to new princops: Change RuntimeOverheadHandle to be a LONG ORDERED POINTER. Add procedures EnterGlobalFrame, RemoveGlobalFrame, and error NoGlobalFrameSlots.30-Jun-86 19:16:35   MEW	Converted to newer princops: only some of the frames in the MDS.