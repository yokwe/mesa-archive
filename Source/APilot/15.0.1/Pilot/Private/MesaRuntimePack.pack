-- Copyright (C) 1982, 1983, 1984, 1987  by Xerox Corporation. All rights reserved. -- 27-Sep-87 20:46:37	KEK	add BootFromFloppy-- 16-Jan-87 16:14:29	ET	MDS Relief: Added LoadStateImpl$EnterGlobalFrame, LoadStateImpl$RemoveGlobalFrame, and Traps$BytePointerTrap.-- 11-Dec-84 10:45:30   Pinned SnapshotImpl procs InLoadFromBootLocation, OutLoad, OutLoadInLoad. -- 12-Jan-84 13:43:14	  Split up MesaRuntimeSwappableFrames to MesaRuntimeSwappableTrapsFrames and MesaRuntimeSwappableFrames. --  20-Oct-83 10:20:18   New proc LoadStateImpl.OriginalModuleInternal.--  7-Oct-83 11:09:27--    Make InterruptErrorTrap, RescheduleErrorTrap, StackErrorTrap, Bug resident.-- 28-Sep-83  9:48:00--    Add LoadStateImpl[GrowCopyTable, OriginalModule]. Procs vanished.--    New code pack ModulePerfAndLinkInfo.-- 26-Sep-83 11:37:44     Add ModuleInfosOfBcd from LoadStateImpl-- 11-Sep-83  0:44:44      Loader changes--  6-Sep-83 22:07:45   LoadStatePack procs appearing and disappearing.-- 10-Aug-83 15:11:04   New module LoadStatePack.--  2-Aug-83 11:18:29   Added Processes.ValidProcess.-- 28-Jul-83 11:33:07   Traps: new procs, name changes.-- 25-Jul-83 11:48:55     Add SnapShotImpl. BootFromEthernet(One).-- 21-Jul-83 10:33:06     Procs. changed in Processes and Traps.-- 11-Apr-83 18:09:37   Added NarrowFaultTrap.--  1-Apr-83 13:35:02--   Added AbortPending to MesaRuntimeSpecialResident.--  2-Mar-83 15:23:51--     ProcessesHot merged into SpecialResident. ProcessesCold renamed to SwappableProcess.-- 24-Dec-82 11:16:31   Twiddles for Klamath.-- 24-Nov-82 17:37:49--     Added GetPVLocation, GetFileLocation, GetVolumeLocation, OutLoadInLoad to InLoadOutLoad Code Pack-- 21-Sep-82 14:10:48--     PilotNub and FrameImpl moving to ResMemMgr. Added frame pack. -- (For earlier entries, please see Pilot 8.0 archives.)MesaRuntime: SEGMENT =BEGINMesaRuntimeResidentBooting: CODE PACK = {  -- Cleanup and booting code must go in ordinary memory. Must be first.  SnapshotImpl [InitializeInLoadFromBootLoc, ENTRY VECTOR] };MesaRuntimeSpecialResident: CODE PACK = {  -- Resident code not involved in booting may go  -- in special memory. Should be second.  LoadStateImpl [    -- resident since Star uses it often. Also used for heap owner checking.    ENTRY VECTOR, GetCaller];  Processes [    ENTRY VECTOR,        -- Resident since they disable interrupts:    Abort, CancelAbort,         -- Resident since important to state vector management:    GetPriority, SetPriority,    -- Resident to allow predictable short-term timing control:    EnableAborts, MsecToTicks, Pause, SetTimeout, TicksToMsec,        -- Resident since used often by clients:    AbortPending, DisableAborts, DisableTimeout, GetCurrent, InitializeCondition,    InitializeMonitor, SecondsToTicks, ValidateProcess, ValidProcess, Yield];  SnapshotImpl [      -- resident so it is always available.    BootButton,        -- Resident since they disable interrupts:    InLoadFromBootLocation, OutLoad, OutLoadInLoad];  Traps [  -- resident because can't swap them in if interrupts screwed up.    ENTRY VECTOR, Bug, InterruptErrorTrap, RescheduleErrorTrap,    StackErrorTrap] };  -- resident because stack error can occur in sensitive places.NewUnnewModule: CODE PACK = {  LoadStateImpl [    -- Everything normally required to do a  NEW <module>:    -- NOTE: At present there is no suitable logical group of other code    -- that will fit in the unused space of this code pack.    -- When the perf tools run they pin the pack containing OriginalModule;    --   Thus OriginalModule and OriginalModuleInternal should be together.    EnterGlobalFrame, RemoveGlobalFrame,    FindModule, InsertNewModule, New, NewInternal, OriginalModule,    OriginalModuleInternal, RemoveOldModule, SelfDestruct, UnNew]};ModulePerfAndLinkInfo: CODE PACK = {  -- This is a separate code pack for the following reasons:  --   o There is no room in NewUnnewModule for the StuffFromLink group.  LoadStateImpl [    -- The procs below form a logical unit, and are all dependent    -- on StuffFromLink and/or ValGlobalFrame. They are presumed to be cold.    Code, EntryVector, GlobalFrame, StuffFromLink, ValGlobalFrame,    ValidateFrame, ValidateGlobalFrame, GetTableBase,    -- The following are in this pack because are presumed to be cold    -- and they fit:    Catch, IsBound, GetBuildTime, GrowCopyTable]};BcdInfoOps: CODE PACK = {  LoadStateImpl [    -- Stuff used by the Loader (only):    CATCH CODE,    EnterModuleInfos, ExpandTables, ExpandTablesInternal, GetBcdTime,    GetModuleInfo, GFFromBcdInfo, LockBcdInfo, MarkModuleResolved,    ModuleInfosOfBcd, NewLoadState, RemoveModuleInfos,    UnresolvedModuleInfosOfBcd, UnlockBcdInfo]}; SwappableProcess: CODE PACK = {  Processes [    AllocateNakedCondition, DeallocateNakedCondition, Detach, End, Fork, Join,    ProcessTrap]};  InLoadOutLoad: CODE PACK = {  SnapshotImpl [    BootFromEthernet, BootFromEthernetOne,BootFromFloppy, BootFromFile,    BootFromVolume, BootFromPhysicalVolume, GetBootFileSize, GetDevice,    GetFileLocation, GetPVLocation, GetVolumeLocation, InLoad]};  Signals: CODE PACK = {  Processes [CATCH CODE];  -- catch code is for aborting process waiting in Pause.  Signals EXCEPT MesaRuntimeInitialization };  SnapshotMisc: CODE PACK = {  SnapshotImpl [    InstallPhysicalVolumeBootFile, InstallVolumeBootFile,    MakeBootable, MakeUnbootable, CATCH CODE]};  Traps: CODE PACK = {  Traps [    BoundsFaultTrap, BumpPCOfTrapee, BytePointerTrap, CodeTrap,    ControlTrap, DivideCheckTrap,    HardwareErrorTrap, NarrowFaultCall, PointerFaultTrap,    Restart, Start,    StartMainBody, StartNonNilControlList, StringInit, UnboundProcedureTrap,    ZeroDivisorTrap, CATCH CODE] };  MesaRuntimeInitialization: CODE PACK = {  LoadStateImpl [InitializeLoadStateA, InitializeLoadStateB, MAIN];  Processes     [InitializeProcessesA, InitializeProcessesB, MAIN];  Signals       [InitializeSignals, MAIN];  SnapshotImpl  [Bug, InitializeSnapshot, MAIN];  Traps         [MAIN] };END; --SEGMENT--MesaRuntimeResidentFrames: FRAME PACK = {  SnapshotImpl};  -- resident since it does booting.MesaRuntimeSwappableFrames: FRAME PACK = {  LoadStateImpl;  Processes;  Signals };MesaRuntimeSwappableTrapsFrames: FRAME PACK = {  Traps };-- End of MesaRuntimePack.pack--