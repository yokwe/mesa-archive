-- Copyright (C) 1982  by Xerox Corporation. All rights reserved. -- VMDriver>SwapBuffer.mesa      29-Sep-82 12:52:30 by WDK    -- This interface provides facilities for allocating and deallocating PrincOps-unmapped virtual memory buffers.-- This is a private interface for use only within the VMDriver configuration.DIRECTORY  Environment USING [PageCount],  VM USING [Interval],  VMPerf USING [BatchCount];SwapBuffer: DEFINITIONS =  BEGIN  maxBufferSize: Environment.PageCount = LAST[VMPerf.BatchCount];  -- The size of the largest buffer that can be allocated.  Allocate: PROCEDURE [    count: Environment.PageCount, sizeRequirement: SizeRequirement]    RETURNS [interval: VM.Interval];  -- If sizeRequirement = exactSizeRequired, allocates an unmapped virtual memory buffer of size "count". If none is available, the operations waits until it is. If count > maxBufferSize, the debugger is called.  -- If sizeRequirement = willTakeLess, allocates an unmapped virtual memory buffer of size "count" if one is available, otherwise allocates less. The buffer allocated will always contain at least one page. The operation will always be able to allocate a buffer without waiting for any buffers to be deallocated. The caller need not remember interval.count for Deallocate.  -- The buffer allocated will have no real memory backing it.  SizeRequirement: TYPE = {exactSizeRequired, willTakeLess};  Deallocate: PROCEDURE [interval: VM.Interval];  -- Frees the buffer "interval" which was previously obtained from Allocate.  -- The buffer deallocated must have no real memory backing it.  END.LOGMarch 1, 1979  12:13 PM   PXM       Created file. 9-Jun-82 10:28:23   WDK        Deallocate arg changed from Interval to PageNumber. Added sizeRequirement, maxBufferSize.19-Aug-82 10:47:31   WDK       maxBufferSize now a constant.29-Sep-82 12:53:08   WDK        Deallocate now takes an interval, not a page.