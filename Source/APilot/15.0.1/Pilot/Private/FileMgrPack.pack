-- Copyright (C) 1981, 1982, 1983, 1984, 1986, 1987, 1988  by Xerox Corporation. All rights reserved. -- NOTE: This pack file contains TWO SEGMENTs: FileMgr and Scavengers.-- For previous log entries, please see Mesa 8.0 archive version.--12-Jan-88  0:43:24  RSV/ET--     Split LVScavenger into LVErase, LVOtherScavengerOps, LVCompaction, LVScavengerCommon, and LVScavenger. Added MapMarkerPage, UnmapMarkerPage, FixETableFilePages to LVScavenger.--16-Dec-87 18:16:26  RSV--     PhysicalVolumeImpl is now PhysicalVolumeImplA and PhysicalVolumeImplB.--20-Nov-87 10:22:43  KEK per RSV--     Moved InterpretBackingStoreRun from FileOther to new pack--     HighLevelInterpretBackingStoreRun.-- 29-Jun-87  8:19:17--     Moved GetBootLocation from FileOther to FileMakeBootableOrUnbootable;--     added GetBootLocationInternal, GetDescriptor, GetVolumePage.-- 6-Feb-87 17:16:04--     Deleted FileImpl.MakeFileList.-- 3-Feb-87 22:10:59--     Added VerifierImplC procs.-- 2-Feb-87 15:09:11--     Added VolumeLockingImpl procs.--15-Oct-86 12:12:30--     Added GetDuplicatePVRootLocation, MarkDataLostPage, GetNextDataLostPage,--     and ClearDataLostPage all from PhysicalVolumeImpl.--28-Jul-86 11:23:14 --     Added WriteDuplicatePVRootPage to Othello and--     CompareDuplicateAndMainPVRootPages to PhysicalVolume.--     Deleted Scavenger things, added Verifier things.  Changed--     FileMakeBootableOrUnbootable code pack for labeless FileImpl.  Added--     DoBootfileOp to FileMakeBootableOrUnbootable.--12-Jun-86 10:51:35--     Deleted TempFileManipulation code pack.  Replaced GetNextFile with--     MakeFileList procedure. Deleted procedures CreateTempsList, DeleteTemps,--     and TempsListRemoveAll (all from FileImpl).  Added --     BugV and MakeBootableOrUnbootableInternal from FileImpl, GetLVHandle--     and GetLVID from VolTableImpl.  Deleted ReadLabel and HandleBSError from--     SimpleFileImpl--17-Jan-84 14:03:28--     Added ChangeName. ScavengerConversionImplA.CompleteVolumeConversion is --     always called by the LV scavenger --16-Jan-84 15:58:36--     ScavengerConversionImplA.ConvertVolume is always called by the LV scavenger--12-Jan-84 14:29:06 --     LVScavenger splits into LVScavenger and LVScavengerConversion.--     FileMgrFrames splits into FileMgrFrames and FileMgrScavengerFrames.--1-Nov-83  9:59:01--     FindDebuggerAndSystemLV splits into FindDebugger, FindSystemLV.--4-Sep-83 14:13:18 Shuffle things around to improve working set.--    Also add LastOpenedForWrite from module VolumeImpl.--28-Aug-83 13:51:53 Add new proc. GetType from module FileImpl.--22-Aug-83 11:23:46 Added ScavengerConversionImplA and B.--25-Jul-83 11:47:16 VolumeImpl.ChangeLabel => ChangeLabelString.--16-May-83 19:06:54 Refinements to may of the code packs.--24-Mar-83 14:00:02 Delete OpenInitialVolumes, IsCurrentVersion,--    both from VolumeImpl. Add new SEGMENT, Scavengers, to the Pack. It includes--    all of the procedures, etc., for both the Logical and Physical volume--    Scavengers.--16-Mar-83 19:37:03 Add GetNextFile From FileImpl.--16-Feb-83 10:46:34 Add PVScavenger Procedures.--16-Feb-83 10:46:34 Three fewer procedures in FileImpl.--30-Jan-83 13:57:20 Procedure name changes in VolumeImpl. --12-Jan-83 11:08:56 Procedure name changes in PhysicalVolumeImpl.--24-Dec-82 11:38:51 Twiddles for Klamath--20-Dec-82 15:34:54 Converted to Klamath--17-Oct-82 19:49:23 Deleted TransactionRelatedRunning pack. Procs--   disappearing. Added frame pack.--13-Feb-82 15:32:15 Added VolFileMapImpl.InvalidateCache--10-Feb-82 21:47:56 New buffer manager in VolFileMapImpl-- 2-Feb-82 10:23:25 New hole finding code for VolAllocMapImpl-- 6-Jan-82 10:57:06 Most or all catch code must be in cached--   descriptor code packs.   -- 3-Dec-81 11:18:07 Replaced ScavengeImpl with ScavengerImplA and--   ScavengerImplB; created new pack, ScavengerProcs, for ScavengerImplB; added--   PhysicalVolumeScavenger pack.--24-Nov-81  8:39:50 Added VolAllocMapImpl.AccessVAMPrivate.-- 6-Nov-81 13:40:18 Added SwappableEntryVectorsForResident, catch--   and entry vector items. Renamed FileMgrResident--   to ResidentButSwappableEntryVectors.FileMgr: SEGMENT =BEGINHighLevelGetBSData: CODE PACK =  BEGIN  FileImpl [ENTRY VECTOR, GetBackingStoreRun, GetBackingStoreRunWithCache];  END;HighLevelInterpretBackingStoreRun: CODE PACK =  BEGIN  FileImpl [InterpretBackingStoreRun];  END;FileCreate: CODE PACK =  BEGIN  FileImpl [Create, CreateFileID, CreateInternal, CreateWithContents];  END;FileMakePermanentOrTemporary: CODE PACK =  BEGIN  FileImpl [MakePermanent, MakePermanentOrTemporary, MakeTemporary];  END;FileDelete: CODE PACK =  BEGIN  FileImpl [Delete, DeleteInternal];  END;FileSetSize: CODE PACK =  BEGIN  --these logically belong with the SimpleFile operations of the same name,  -- since they are just facades into SimpleFile  FileImpl [SetSize, SetSizeWithContents];  END;FileAttributes: CODE PACK =  BEGIN  FileImpl [GetAttributes, GetFileAttributes, GetSize, GetType];  END;FileMakeBootableOrUnbootable: CODE PACK =  BEGIN  FileImpl [    DoBootfileOp, GetBootLocation, GetBootLocationInternal,    GetDescriptor, GetDiskAddress, GetVolumePage, MakeBootable,    MakeUnbootable, MakeUnbootableInternal];  END;FileOther: CODE PACK =  BEGIN  FileImpl [    GetRootFile, PutRootFile, SetDebuggerFiles];  END;VolumeCommon: CODE PACK =  --"frequent" operations on volumes  BEGIN  VolumeImpl [ENTRY VECTOR, GetAttributes, GetLabelString];  VolumeLockingImpl [ENTRY VECTOR];  END;VolumeRootDir: CODE PACK =  BEGIN  VolumeImpl [    FindRootFileEntry, GetNextRootFile, InsertRootFile, LookUpRootFile,    RemoveRootFile, RootDirectoryAccess];  END;VolumeConsistencyOps: CODE PACK =  BEGIN  ScavengerUtilitiesImpl [    ENTRY VECTOR, CheckLVConsistency, FreeLVMarkerPages, GatherLVMarkerPages,    GetRelativePointer, LVRootAndMarkersConsistent, ValidateLVMarkerPage,    ValidLVRootPage, ValidVolumeRootFiles];  VolumeImpl [IsConsistent, IsConsistentInternal];  END;VolumeOpen: CODE PACK =  BEGIN  VolumeImpl [Open, OpenInternal, OpenVolume];  VolumeLockingImpl [LockVolume, VolumeLockQuery, ReadLockVolume];  END; VolumeClose: CODE PACK =  BEGIN  VolumeImpl [Close];  VolumeLockingImpl [UnlockVolume];  END;VolumeMiscOps: CODE PACK =  BEGIN  VolumeImpl [    ChangeLabelString, ChangeVolumeType, GetLogicalVolumeBootFiles, GetNext,    GetStatus, GetType, LastOpenedForWrite];  VolumeLockingImpl [ForcefullyUnlock, ForcefullyUnlockInternal,    ForcefullyLockInternal];  END;PhysicalVolume: CODE PACK =  BEGIN   PhysicalVolumeImplA [    ENTRY VECTOR, AssertNotAPilotVolume, AssertPilotVolume, AwaitStateChange,    FinishWithNonPilotVolume, GetAttributes, GetDuplicatePVRootLocation,    GetHandle, GetHints, GetNext, GetNextDrive, GetSavedLocalTimeParameters,    InterpretHandle, IsReady, Offline, PhysicalVolumeOffLineInternal,    PhysicalVolumeOnLineInternal, SetSavedLocalTimeParameters, TempOnline];    PhysicalVolumeImplB [    ENTRY VECTOR, CompareDuplicateAndMainPVRootPages, DriveFromIndex,    GetDriveData, PhysicalRootPageCheck, PVIDFromDrive, ValidateDrive];  VolumeImpl [AllRightToTakePVAway, NewPVOnline];  --online, offline code  END;Othello: CODE PACK =  BEGIN  PhysicalVolumeImplA [    ChangeName, ClearDataLostPage, CreatePhysicalVolume,    GetContainingPhysicalVolume, GetNextBadPage, GetNextDataLostPage,    GetNextLogicalVolume, GetNextSubVolume, GetPhysicalVolumeBootFiles,    MarkDataLostPage, MarkPageBad, Scavenge, SetPhysicalVolumeBootFiles];  PhysicalVolumeImplB [WritePVRootPage, WriteDuplicatePVRootPage];  VolumeImpl [Create, Erase, IsBadPage, SetLogicalVolumeBootFiles];  END;ScavengerMiscUtilities: CODE PACK =  BEGIN  ScavengerUtilitiesImpl [    FreeLVBadPages, GatherLVBadPages, MovePages, ReadPages, ResidentMap,    TransferPageRun, WritePages];  END;  BugAndCatchCode: CODE PACK =  BEGIN  FileImpl [Bug, BugV, CATCH CODE];  VolumeImpl [Bug, BugWithValue, CATCH CODE];  PhysicalVolumeImplA [Bug, CATCH CODE];  PhysicalVolumeImplB [Bug, CATCH CODE];  ScavengerUtilitiesImpl [Bug, CATCH CODE];  VolumeLockingImpl [Bug, CATCH CODE];   END;Initialization: CODE PACK =  BEGIN  FileImpl [InitFile, MAIN];  PhysicalVolumeImplA [InitializeFileMgr, InitialOnline, MAIN];  PhysicalVolumeImplB [MAIN];  VolumeImpl [InitVolume, MAIN, FindDebugger, FindSystemLV];  ScavengerUtilitiesImpl [MAIN];  VolumeLockingImpl [MAIN];  END;	END; --FileMgr SEGMENT--Scavengers: SEGMENT =BEGINPhysicalVolumeScavenger: CODE PACK =  BEGIN  PhysicalVolumeScavengerImpl EXCEPT [MAIN];  END;    LVScavenger:  CODE PACK =  BEGIN  VerifierImplA [    ENTRY VECTOR, AddFileToFileList, CleanupVerifier,    InitializeVerifier, ModifyETFETable, FixETableFilePages, Verifier,     VerifierAccessProc, VerifierWithLock];  VerifierImplB [    ENTRY VECTOR, CreateBadDataPageList, CreateBadPageList, CrudeBucketValidation,    CrudeETFETValidation, CrudeFirstOverflowPageValidation,    CrudeHeaderValidation, CrudeOverflowPageValidation, ETableInit,    IsDataOnPageBad, IsPageBad, MarkItProcessed, MarkItUnProcessed,    MarkVAMPagesAsBusy, ReadPage, ReadParallelAndCorrect, ValidPage,    ValidateETable, VerifyAndCorrectLVRootAndMarkerPages, WritePage];  VerifierImplC [    ENTRY VECTOR, AddToErrorList, CleanOutETablesInBuckets, CompactOverflow,    DoIOForOneRun, FastVerify, GatherRunsAndDoIO, MapMarkerPage, UnmapMarkerPage,     MinimalReadAndCorrect, ProduceScavengerLog, ReadInPageRun,    ValidateAndRepairRootDirectory, WriteOutPageRun];  END;LVErase: CODE PACK =  BEGIN  VerifierImplB [EraseLV, WriteMultipleCopies];  END;LVOtherScavengerOps: CODE PACK =  BEGIN  VerifierImplB [ClearLog, GetLog, MakeFileList];  END;LVCompaction: CODE PACK =  BEGIN  VerifierImplA [CompactDisk];  VerifierImplC [CompactFilesInOverflow];  END;LVScavengerCommon: CODE PACK =  BEGIN  VerifierImplB [GetDiskIOInfo, ClearDataLostPageList, VamInit, VamFind];  END;  -- this code pack contains the stuff called by any two or more of the above LV  -- Verifier type code packs.ScavengerBugAndCatchCode: CODE PACK =  BEGIN  VerifierImplA [Bug, CATCH CODE];  VerifierImplB [Bug, CATCH CODE];  VerifierImplC [Bug, CATCH CODE];  END;ScavengerInitialization: CODE PACK =  BEGIN  PhysicalVolumeScavengerImpl [MAIN];  VerifierImplA [MAIN];  VerifierImplB [MAIN];  VerifierImplC [MAIN];  END;	END; --Scavengers SEGMENT--FileMgrFrames: FRAME PACK =  BEGIN  FileImpl;  VolumeImpl;  VolumeLockingImpl;  END;  FileMgrScavengerFrames: FRAME PACK =  BEGIN  PhysicalVolumeImplA;  PhysicalVolumeImplB;  PhysicalVolumeScavengerImpl;  VerifierImplA;  VerifierImplB;  VerifierImplC;  ScavengerUtilitiesImpl;  END;-- End of FileMgrPack.pack--