-- Copyright (C) 1982, 1983, 1984, 1985, 1989  by Xerox Corporation. All rights reserved. --12-Apr-89 12:15:46   changed VMImpl to VMImplA, and VMImplB. VMImplB includes consecutive real stuff: TxH --20-Jan-89 15:23:22   added consecutive real stuff: TxH **--26-Jun-85 16:16:17   Move Bug, Pin, Unpin, EV from Pinning to SpecialResident.-- 5-Dec-84 16:25:56   add VMDriverPinned, to make these procs pinnable instead of rez.--15-Nov-84 15:55:38   remove UnmapBatch (nested now), add RelocateEntry, UnmapEntry.--29-Aug-84 17:55:59   Add PeeCeeCode PACK--11-Jul-84 16:45:04   Removed ApproveReserved, CountResv'dTls--19-Sep-83 18:05:26   Kill no longer in VMImpl.--20-Jun-83 15:41:22   Added Pinning, GetSwapUnitsFor...--19-Apr-83 11:05:32   Added VMUtilities.Bug.--11-Apr-83 18:04:40   Added InstallTransferWatcher.--24-Feb-83 15:12:22   Added GetFlags.-- 5-Nov-82  9:14:44   Procedure disappeared.--28-Sep-82 17:31:31   Created file. Put in frame pack.VMDriver: SEGMENT =BEGINSpecialResident: CODE PACK = {  -- Resident code not involved in booting may go in special memory.  Should be first.  PageFaultImpl [    ENTRY VECTOR, AwaitAddressFault, AwaitWriteFault];  PinningImpl [ENTRY VECTOR];  PinningImpl [Bug, Pin, Unpin];  SwapBufferImpl [ENTRY VECTOR];  VMImplA [    ENTRY VECTOR,  Bug, CopyInSynchronous, CopyOutSynchronous,    DeactivateOrUnmapBatch, GetSwapUnitAttributes, HandleVMIOError,    SetBatchCount, SetSwappability, SetSwappabilitySynchronous, Wait,    CATCH CODE]; -- (HandleVMIOError catches ABORTED from debugger)  VMImplB [ENTRY VECTOR, CATCH CODE];  VMUtilities [    ENTRY VECTOR, AwaitNoOverlappingOperations, Bug,    EnqueueOperation, FinishQueuedOperation, GetFlags, GetNextQueuedOperation,    CATCH CODE]}; -- (ExecutorProcess catches ABORTED from debugger)ResidentRunFast: CODE PACK = {  -- This code is put in normal memory so it will run faster. Should be second.  PageFaultImpl [LookUpProcessType, RestartAndAwaitNext];  SwapBufferImpl [Allocate, Deallocate];  VMImplA [    EnterVM, ExitVM, IntervalRequiringInput, IntervalRequiringOutput,    IOTransfer, Map, PageFaultProcess, ProcessBatches, ReadUsingBuffer,    ResidentRunFastCodeHandle, SwapOutProcess, Unmap, UnmapEntry];  VMUtilities [    AllocateRealMemory, DeallocateMStoreIfClean, ReadDead] };VMDriverSwappable: CODE PACK = {  PageFaultImpl [    AbortFaultedProcess, ReportFaultedProcess,    RestartFaultedProcess,  -- (Make this resident if heavily used e.g. by a transaction system.)    CATCH CODE]; -- (ReportFaultedProcess catches ABORTED from debugger)  VMImplA [    Activate, AnotherPageFaultProcess, AnotherSwapOutProcess, CopyIn, CopyOut,    Deactivate, ForceOut, InstallTransferWatcher, GetSwapUnitsForCatchCode,    GetSwapUnitsForEntryVector, GetSwapUnitsForGlobalFrame,    GetSwapUnitsForProcedure, GetSwapUnitsInternal];  VMImplB [FreeConsecutiveVMResidentRealMemory];  VMUtilities [AnotherExecutorProcess, ExecutorProcess]};  VMDriverPinned: CODE PACK = { --is pinned when executing...--  PageFaultImpl [DeclareHelperProcess, DeleteHelperProcess, PageFaultProcessStarted];  VMImplA [    ActivateSynchronous, DeactivateSynchronous, ForceOutSynchronous, Relocate,    SetAccess, PartiallyUnmap];  VMImplB [GetConsecutiveVMResidentRealMemory]};    Pinning: CODE PACK =  -- temp - ought to be improved at some stage  BEGIN  PinningImpl [MakeUnusedProceduresSwappable];  PinningImpl [CreatePinHandle, DestroyPinHandle];  END;Initialization: CODE PACK = {  PageFaultImpl [MAIN, InitializePageFault];  PinningImpl [MAIN, InitializePinning];  SwapBufferImpl [MAIN, InitializeSwapBuffer];  VMImplA [MAIN, InitializeVMDriver];  VMImplB [MAIN, InitializeVMDriverB];  VMUtilities [MAIN, InitializeOperationQueue, InitializeVMUtilities]};  VMDriverPeeCeeCode: CODE PACK =  BEGIN  VMImplB [EmulatePC];  END;END; --SEGMENT--VMDriverResidentFrames: FRAME PACK = {  PageFaultImpl;  PinningImpl;  SwapBufferImpl;  VMImplA;  VMImplB;  VMUtilities};-- End of VMDriverPack.pack--