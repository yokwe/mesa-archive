-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- Pinning.mesa     last edited by JXG     14-Jun-83 10:35:23DIRECTORY  Process USING [Seconds],  Zone USING [Base]; Pinning:  DEFINITIONS =  BEGIN    << This interface provides facilities for reducing the overhead of     calls to MakeResident/MakeSwappable for code that is rarely used     but which must be resident when it is.     CreatePinHandle sets up a small (resident) data block describing     the swap unit containing the procedure p passed as parameter.     The implementation of p can then call Pin to ensure that this     swap unit is resident until at least the corresponding call of     Unpin.  A count is kept of outstanding calls to Pin for a given     swap unit. If the count remains at zero for the period specified     in the call to CreatePinHandle then the swap unit is made swappable.      Because many procedures may exist in one swap unit, different calls      to CreatePinHandle may return the same handle.  In this case, the     timeout held in the PinObject is the maximum of all the timeouts     of procedures in that swap unit.      All procedures must initially be swappable or in a swap unit already     in a PinObject.  >>    PinHandle: TYPE = Zone.Base RELATIVE POINTER TO PinObject;  PinObject: TYPE;    CreatePinHandle:     PROCEDURE [p:--GENERIC--PROCEDURE, timeout:Process.Seconds]     RETURNS [pH:PinHandle];  DestroyPinHandle: PROCEDURE [LONG POINTER TO PinHandle];    Pin: PROCEDURE [pH:PinHandle];  Unpin: PROCEDURE [pH:PinHandle];    END...  LOG14-Jun-83 10:35:34 JXG       created file  