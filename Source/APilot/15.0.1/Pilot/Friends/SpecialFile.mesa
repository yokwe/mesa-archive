-- Copyright (C) 1983, 1986, 1987  by Xerox Corporation. All rights reserved. -- SpecialFile.mesa    6-Feb-87 16:02:23 by RSV     DIRECTORY  BackingStore USING [Run, TransferProc],  File USING [File, ID, nullID, PageCount, PageNumber, Type],  Space USING [Interval],  System USING [VolumeID];SpecialFile: DEFINITIONS =  BEGIN        CreateWithContents: PROCEDURE [    volume: System.VolumeID, initialSize: File.PageCount, type: File.Type,    contents: Space.Interval, requestedID: File.ID ¬ File.nullID]    RETURNS [file: File.File];  -- This operation is the same to File.Create except for the following deviations:  -- If requestedID is not File.nullID, then the created file will have  --   that File.ID.  (This is intended to be used ONLY by utilities that  --   are restoring the state of a file system.) [If requestedID is File.nullID,  --   a new File.ID is created and returned (just like File.Create).]  -- The file is created containing the data in contents­, which MUST be resident.  -- If contents.count < initialSize, the remaining pages of initialSize  --   will be initialized to zeroes (just like File.Create).  -- If contents­ are not resident, the results are undefined.  -- Errors: as per File.Create. Also, if requestedID is currently in use,  --   InvalidParameters is raised.       GetBackingStoreRun: PROCEDURE [    file: File.File, page: File.PageNumber, type: File.Type]    RETURNS [run: BackingStore.Run, resultType: File.Type];  -- Returns the BackingStore.Run describing the run of contiguous disk  --   pages of file starting at page. If the type passed in by the caller is  --   not FileTypes.tUnassigned, then it will be used in constructing the  --   BackingStoreRun. Otherwise, the type will be determined for the caller.  -- In either case, the File Type is returned as a convenience. If the caller  --   passes in an incorrect type, the resulting run is undefined.  -- The run returned is only valid the current boot session; it should not be  --   saved in a permanent file. In the current version of Pilot, if page=0, run  --   also becomes invalid when the temporary/permanant attribute of the file is  --   changed.  -- It is the client's responsibility to assure that he does not  --   use this information to write on readOnly volumes.  -- Errors: File.Unknown, File.MissingPages, Volume.Unknown, Volume.NotOnline,  --   Volume.NeedsScavenging, Volume.NotOpen.  -- If page >= the size of the file, InvalidParameters is raised.  InterpretBackingStoreRun: PROCEDURE [run: BackingStore.Run]    RETURNS [      file: File.File, page: File.PageNumber, fileType: File.Type];  -- Inverts GetBackingStoreRun; returns the arguments to that procedure  -- that resulted in the given run.  Also returns the file type since it can  -- do so in an efficient manner.  -- Errors: Raises InvalidParameters if run does not appear to refer to a file  -- on the local disk system.  Raises InvalidParameters if run does not seem  -- to refer to a volume that is currently online.  Note that the tests for  -- both of these errors is not guaranteed to succeed; under some  -- circumstances, an error may not be reported when one should have been.    MakeTemporary: PROCEDURE [file: File.File];  -- Makes a permanent file temporary.  -- Errors: File.Unknown, Volume.Unknown, Volume.NotOpen.  SetDebuggerFiles: PROCEDURE [    debugger, debuggee: File.File,    debuggerFirstPage, debuggeeFirstPage: File.PageNumber];  -- Store pointers (i.e. Links) to the specified file pages into root of the  -- volume containing the files.  -- Note that the files must be entirely contained within (the first physical  -- volume of) the volume.  -- Errors: if both files not on the same volume then InvalidParameters; also  -- File.Unknown, Volume.Unknown, Volume.ReadOnly.  SetSizeWithContents: PROCEDURE [    file: File.File, size: File.PageCount, contents: Space.Interval];  -- Same semantics as File.SetSize except that the initial  --   contents of any new pages are initialized to  --   the data in contents­, which MUST be resident.  -- If contents.count < number of pages being added, the remaining pages  --   will be initialized to zeroes (just like File.SetSize).  -- If contents­ are not resident, the results are undefined.  -- Errors: Same as File.SetSize.  Transfer: BackingStore.TransferProc;  -- Pilot's TransferProc used to access the local disk.  It should be used when  -- doing I/O through VM's facilities to the local disk.  The BackingStore.Data  -- passed to this procedure must be acquired through this interface or the  -- results are undefined.   InvalidParameters: ERROR;    -- The following are retained for compatibility only    FileDesc: TYPE = File.File;  END.LOGJuly 31, 1979  4:46 PM	DXR      Create fileJanuary 24, 1980  6:40 PM	PXM       MakeUnBootable=>MakeUnbootable, add firstPage and count; add eofLink8-Aug-81 13:44:24	WDK       MakeTemporary moved here from KernelFile.  Documented error conditions.   Link changed to opaque type.8-Nov-81 19:01:40	AWL         Added debuggerFirstPage and debuggeeFirstPage as args to SetDebuggerFiles.3-Aug-82 11:33:34	AWL         Modified for volume relative IDs.  Added SetSizeWithContents,   CreateWithContents, GetBackingStoreRun, InterpretBackingStoreRun.15-Sep-82 10:23:14	AWL         Added Transfer. 5-Oct-82 13:43:09	AWL         Added argument requestedID to CreateWithContents.24-Nov-82  9:24:32	AWL         FileDesc = File.File.  Added volume parameter to SetDebuggerFiles.  Use File.File in place of (File.ID, Volume.ID) pairs of arguments.30-Nov-82 17:54:40	LXD         Deleted volume parameter from SetDebuggerFiles.22-Feb-83 11:40:34	WDK        Added restriction on GetBackingStoreRun. 4-Mar-83 16:44:44	JXP      Added type parameter and return argument to GetBackingStoreRun.23-Mar-83 10:18:41	WDK        Added nullLink and GetNextFile; Improved doc. 4-Apr-83 11:36:52	WDK        Relaxed restrictions on CreateWithContents and SetSizeWithContents.   MakeBootable, etc moved from SpecialFile to KernelFile. Improved doc.30-May-86 16:44:53      RSV   Deleted GetNextFile procedure.  Added MakeFileList procedure and its associated structure. 7-Nov-86 11:38:12      RSV   Changed comment for GetBackingStoreRun to talk about FileTypes.tUnassigned, not PilotFileTypes.tUnassigned.  6-Feb-87 16:02:48      RSV   Deleted MakeFileList stuff (now in Scavenger).