-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- DiskScheduler.mesa (last edited by: KAM      on: 11-Jan-83 13:36:25)-- This interface allows a client to change the disk driver scheduler-- to be a set of procedures. This is a friends interface.DIRECTORY  DiskChannel USING [DiskPageNumber, Drive, IORequestHandle],  PilotDiskFace USING [DiskAddress];DiskScheduler: DEFINITIONS =  BEGIN  DriveData: TYPE = LONG UNSPECIFIED;  -- for scheduling state info  --  The location of the DriveData may move, so the client must not keep  --  the address of any DriveData around.  Prefix: TYPE [1];  RequestHandle: TYPE = POINTER TO RequestObject;  RequestObject: TYPE = RECORD [    prefix: Prefix,    iorh: DiskChannel.IORequestHandle,    next: RequestHandle,    client: LONG UNSPECIFIED];  -- "client" is for the scheduler's use. Since a RequestObject is discarded after  --  the requestor's DoIO completes, this should not contain a pointer to any  --  data when the RequestObject is handed back through the GetNextRequestProc.  -- The client specifies a disk driver by supplying the following four procedures  -- via the procedure Change:  --	TransitionProc: This is called when the scheduler is added (with parameter  --		start) and when it is replaced with another scheduler (with  --		parameter stop). When called with parameter stop, the queues  --		should be empty - if they are not, it is a bug in the disk channel  --		implementation.  --	DriveProc: During initialization, this is called after the transition proc  --		once for each ready drive. Afterwards, it is called whenever a   --		drive's change count is incremented and when the scheduler is  --		being replaced (before the TransitionProc is called with  --		type = stop). The parameters are the diskchannel drive handle,  --		the reason the drive proc is being called, and a two word  --		quantity which can be used to store scheduling state for that  --		drive (such as a queue head).  --	ScheduleProc: Whenever a disk request is made through disk channel, and  --		that disk is deemed "busy" by DiskChannel, it passes the request  --		as a RequestHandle to this procedure.  --	GetNextRequestProc: Whenever a request on a Pilot disk is finished, it   --		calls this procedure for another request.  --  --	Calls to these procedures are serialized by the disk channel  --	implementation, so it is unnecessary (and a bad idea) to make them  --	ENTRY procedures.  --  -- If any of the elements in the parameter new to Change are NIL, the  -- disk channel will revert to its default scheduler (a FCFS scheduler).  Scheduler: TYPE = RECORD [    transitionProc: TransitionProc,    driveProc: DriveProc,    scheduleProc: ScheduleProc,    getNextRequestProc: GetNextRequestProc];    defaultScheduler: Scheduler = [NIL, NIL, NIL, NIL];  Change: PROCEDURE [new: Scheduler ¬ defaultScheduler] RETURNS [old: Scheduler];  Transition: TYPE = {start, stop};  -- the following procedure can swap  TransitionProc: TYPE = PROCEDURE [type: Transition];  CallReason: TYPE = {start, newCC, stop};  -- the following procedure can swap  DriveProc: TYPE = PROCEDURE [    drive: LONG POINTER TO DriveData, reason: CallReason,    channelDrive: DiskChannel.Drive];  -- The following procedure must be pinned  ScheduleProc: TYPE = PROCEDURE [    drive: LONG POINTER TO DriveData, req: RequestHandle];  -- The following procedure must be pinned  GetNextRequestProc: TYPE = PROCEDURE [drive: LONG POINTER TO DriveData]    RETURNS [req: RequestHandle];    -- The following is a procedure the clint might like to call in order  -- to make a scheduling decision.    CalculatePageAddress: PROCEDURE     [drive: DiskChannel.Drive, page: DiskChannel.DiskPageNumber]    RETURNS [PilotDiskFace.DiskAddress];  END.                LOG    Time:  17-Jun-82 14:48:53	By: KAM        Created file.Time:  11-Jan-83 13:30:32	By: KAM        Packaged the four procedures into a record. Added reason parameter to Drive procedure. Made Change return the old scheduler procedures.    