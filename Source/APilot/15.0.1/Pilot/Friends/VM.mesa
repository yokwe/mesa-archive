-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- VM.mesa             6-Jul-83 10:49:29 by JXP   -- Basic virtual memory management facilities.-- This is a Friends interface.DIRECTORY  BackingStore USING [Run, TransferProc],  Environment USING [PageCount, PageNumber, PageOffset, wordsPerPage],  ESCAlpha USING [aSPP],  Mopcodes USING [zESC],  Process USING [Priority],  ProcessOperations USING [ReadPSB],  PSB USING [PDA],  Space USING [    Access, Class, defaultSwapUnitOption, Life, Usage, SwapUnitOption,    unknownUsage];VM: DEFINITIONS IMPORTS ProcessOperations, PSB =  BEGIN  -- Basic parameters and types:  wordsPerPage: CARDINAL = Environment.wordsPerPage;  PageNumber: TYPE = Environment.PageNumber;  nullPage: LONG CARDINAL = LAST[LONG CARDINAL];  PageCount: TYPE = Environment.PageCount;  PageOffset: TYPE = Environment.PageOffset;  Interval: TYPE = RECORD [page: Environment.PageNumber, count: PageCount];  nullInterval: VM.Interval = [page: 0, count: 0];  ReturnWait: TYPE = {return, wait};  Swappability: TYPE = {resident, swappable};  -- Mapping spaces:  Map: PROCEDURE [    interval: VM.Interval, transferProc: BackingStore.TransferProc,    backingStoreRuns: BackingStoreRuns, usage: Space.Usage ¬ Space.unknownUsage,    class: Space.Class ¬ file, access: Space.Access ¬ readWrite,    swapUnits: Space.SwapUnitOption ¬ Space.defaultSwapUnitOption,    life: Space.Life ¬ alive, swappability: Swappability ¬ swappable];  ScratchMap: PROCEDURE [    interval: VM.Interval, usage: Space.Usage ¬ Space.unknownUsage] = INLINE {    -- Supplies resident scratch memory.    VM.Map[      interval: interval, transferProc: NIL,      backingStoreRuns: VM.nullBackingStoreRuns, usage: usage, class: data,      access: readWrite, swapUnits: [unitary[]], life: dead,      swappability: resident]};  BackingStoreRuns: TYPE = LONG DESCRIPTOR FOR ARRAY OF BackingStore.Run;  nullBackingStoreRuns: BackingStoreRuns = NIL;  Unmap: PROCEDURE [page: Environment.PageNumber];  -- Assigning backing storage for data map units:  SupplyBackingStore: PROCEDURE [    page: Environment.PageNumber, transferProc: BackingStore.TransferProc,    backingStoreRuns: BackingStoreRuns,    swapUnits: Space.SwapUnitOption ¬ Space.defaultSwapUnitOption];  -- Facilities for BackingStore helper processes:  AdjustReservedRealMemory: PROCEDURE [    count: Environment.PageCount, addSub: AddSub];  AddSub: TYPE = {add, subtract};  DeclareHelperProcess: PROCEDURE [process: --GENERIC-- PROCESS];  DeleteHelperProcess: PROCEDURE [process: --GENERIC-- PROCESS];  GuardStateVector: PROCEDURE [priorityReserved: Process.Priority]    RETURNS [priorityPrev: Process.Priority] = INLINE {    priorityPrev ¬ GetPriority[]; SetPriority[priorityReserved]};  DoneWithStateVector: PROCEDURE [priorityPrev: Process.Priority] = INLINE {    SetPriority[priorityPrev]};  -- Explicit Input and Output:  CopyIn: PROCEDURE [    interval: VM.Interval, transferProc: BackingStore.TransferProc,    run: BackingStore.Run, returnWait: ReturnWait];  CopyOut: PROCEDURE [    interval: VM.Interval, transferProc: BackingStore.TransferProc,    run: BackingStore.Run, returnWait: ReturnWait];  Wait: PROCEDURE [interval: VM.Interval];  -- Swapping commands:  Activate: PROCEDURE [interval: VM.Interval, returnWait: ReturnWait];  Deactivate: PROCEDURE [interval: VM.Interval, returnWait: ReturnWait];  ForceOut: PROCEDURE [interval: VM.Interval, returnWait: ReturnWait];  Kill: PROCEDURE [interval: VM.Interval];  -- Map unit and swap unit attributes:  SetAccess: PROCEDURE [interval: VM.Interval, access: Space.Access];  MakeReadOnly: PROCEDURE [interval: VM.Interval] = INLINE {    SetAccess[interval, readOnly]};  MakeWritable: PROCEDURE [interval: VM.Interval] = INLINE {    SetAccess[interval, readWrite]};  SetSwappability: PROCEDURE [    interval: VM.Interval, swappability: Swappability, returnWait: ReturnWait];  MakeResident: PROCEDURE [interval: VM.Interval, returnWait: ReturnWait] = INLINE    {SetSwappability[interval, resident, returnWait]};  MakeSwappable: PROCEDURE [interval: VM.Interval] = INLINE {    SetSwappability[interval, swappable, NULL]};  GetSwapUnitAttributes: PROCEDURE [page: Environment.PageNumber]    RETURNS [      swapUnit: VM.Interval, access: Space.Access, life: Space.Life,      swappability: Swappability];  FindMapUnit: PROCEDURE [page: Environment.PageNumber]     RETURNS [mapUnit: VM.Interval];  -- Returns first map unit that includes or starts after page,   -- VM.nullInterval if none.  GetMapUnitAttributes: PROCEDURE [    page: Environment.PageNumber, backingStoreRunsStorage: BackingStoreRuns]    RETURNS [      mapUnit: VM.Interval, transferProc: BackingStore.TransferProc,      backingStoreRuns: BackingStoreRuns, usage: Space.Usage, class: Space.Class,      swapUnits: Space.SwapUnitOption];  -- Fault handling:  AwaitAddressFault: PROCEDURE[]    RETURNS [process: --GENERIC-- PROCESS, address: LONG POINTER];  AwaitWriteFault: PROCEDURE[]    RETURNS [process: --GENERIC-- PROCESS, address: LONG POINTER];  FaultType: TYPE = {addressFault, writeFault};  RestartFaultedProcess: PROCEDURE [    process: --GENERIC-- PROCESS, faultType: FaultType];  AbortFaultedProcess: PROCEDURE [    process: --GENERIC-- PROCESS, faultType: FaultType, error: --GENERIC-- ERROR,    errorArgs: LONG DESCRIPTOR FOR ARRAY OF WORD];  ReportFaultedProcess: PROCEDURE [    process: --GENERIC-- PROCESS, faultType: FaultType];  -- Miscellaneous operations:  Relocate: PROCEDURE [from: Environment.PageNumber, to: Environment.PageNumber];  -- Private operations:  GetPriority: PRIVATE PROCEDURE[] RETURNS [priority: Process.Priority] = INLINE {    RETURN[PSB.PDA[ProcessOperations.ReadPSB[]].link.priority]};  SetPriority: PRIVATE PROCEDURE [priority: Process.Priority] = MACHINE CODE {    Mopcodes.zESC, ESCAlpha.aSPP};  END.LOG24-Jul-81 15:18:40   AWL         Created file.19-Jan-82 11:56:06   WDK        Use Access instead of File.Permissions.11-May-82 16:39:21   WDK        Major revision.26-Oct-82 11:45:58   WDK        Twiddles. 8-Nov-82 16:27:08   JXP        Convert from NewSpace to Space.15-Dec-82 16:30:03   WDK        SupplyBackingStore and GetMapUnitAttributes arg name was wrong.23-Jun-83 14:53:46   JXG        Merge in VMExtras - ScratchMap and FindMapUnit 6-Jul-83 10:50:01   JXP   	ESCAlpha.a17 => aSPP