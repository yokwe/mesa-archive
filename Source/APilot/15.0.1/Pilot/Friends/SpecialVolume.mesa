-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- SpecialVolume.mesa      2-Jul-83 18:18:31 by WDK     DIRECTORY  Boot USING [LVBootFiles, PVBootFiles],  PhysicalVolume USING [ID, PageNumber],  System USING [GreenwichMeanTime],  Volume USING [ID, nullID, PageCount, Type];SpecialVolume: DEFINITIONS =  BEGIN  LogicalVolumePageNumber: TYPE = LONG CARDINAL;    SubVolume: TYPE = RECORD [    lvID: Volume.ID,    subVolumeSize: Volume.PageCount,    firstLVPageNumber: LogicalVolumePageNumber,    firstPVPageNumber: PhysicalVolume.PageNumber];      nullSubVolume: SubVolume = [    Volume.nullID, LAST[Volume.PageCount], LAST[LogicalVolumePageNumber], LAST[    PhysicalVolume.PageNumber]];  GetNextSubVolume: PROCEDURE [pvID: PhysicalVolume.ID, this: SubVolume]    RETURNS [next: SubVolume];  -- Stateless enumeration of subVolumes.  -- Enumerations starts and ends with nullSubVolume.  SubVolumeUnknown: ERROR;      OpenVolume: PROCEDURE [volume: Volume.ID, access: Access];  -- Opens a volume while explicitly controlling its writability  -- (independent of its type).  Access: TYPE = {read, readWrite, default};        ChangeVolumeType: PROCEDURE [lvID: Volume.ID, newType: Volume.Type];   << Changes the type of a volume. Note that changing a volume's type affects  the selection of its debugger. The safest procedure is to change a volume's  type from UtilityPilot with no other logical volumes open  and then reinstall all debuggers on that physical volume.  If the volume is not open for read/Write, InvalidParameters is raised. >>      InvalidParameters: ERROR;    LastOpenedForWrite: PROCEDURE [lvID: Volume.ID] RETURNS [System.GreenwichMeanTime];  -- Get/set boot file pointers:    GetLogicalVolumeBootFiles: PROCEDURE [    lvID: Volume.ID, pBootFiles: LONG POINTER TO Boot.LVBootFiles];      GetPhysicalVolumeBootFiles: PROCEDURE [    pvID: PhysicalVolume.ID, pBootFiles: LONG POINTER TO Boot.PVBootFiles];      SetLogicalVolumeBootFiles: PROCEDURE [    lvID: Volume.ID, pBootFiles: LONG POINTER TO Boot.LVBootFiles];      SetPhysicalVolumeBootFiles: PROCEDURE [    pvID: PhysicalVolume.ID, pBootFiles: LONG POINTER TO Boot.PVBootFiles];  END.LOGMay 15, 80 4:40 PM   PXM       Equate PhysicalVolume.ID to same type in SystemJun 28, 80 5:23 PM   FXH       Eliminate procedures now defined in other interfaces, and ReGroup adding some comments about moving Procedures.  Move [Get|Set][Logical|Physiccal]VolumeBootFiles to KernelFile,   GetContaining PhysicalVolume to PhysicalVolume.Jul 13, 80 9:15 PM   FXH    	Move most procedures elsewhere.Jul 28, 80 2:33 PM   AWL      	Added nullSubVolume, SubVolumeUnknown.11-Aug-81 11:29:26   AWL      	Added OpenVolume from VolumeExtras. 2-Nov-81 11:28:26   AWL         Changed "readOnly: BOOLEAN" arg to OpenVolume to "access: Access". 5-Oct-82 16:15:15   AWL         Added ChangeVolumeType procedure and InvalidParameters error. 3-Feb-83 16:40:20   LXD         Redefined error conditions for ChangeVolumeType. 2-Jul-83 18:18:36   WDK     	Improved documentation. Added LastOpenedForWrite.