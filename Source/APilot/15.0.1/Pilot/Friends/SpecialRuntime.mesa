-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- SpecialRuntime.mesa      15-Jul-83 10:59:17 by JXP   DIRECTORY  Environment USING [Long],  Frame USING [ReadCodebaseLow, ReadCodebaseHigh],  Inline USING [BITAND, LowHalf],  Mopcodes USING [zKFCB],  PrincOps USING [ControlLink, GlobalFrameHandle, LocalFrameHandle],  Process USING [Priority],  SDDefs USING [sErrorList, sSignalList],  VM USING [Interval, Swappability];SpecialRuntime: DEFINITIONS IMPORTS Frame, Inline =  BEGIN	-- Code Segment Management:  Catch: PROCEDURE [frame: --GENERIC-- PROGRAM] RETURNS [catch: LONG POINTER];  -- Returns address of first word of catch segment of module.  Codebase: PROCEDURE [frame: --GENERIC-- PROGRAM]    RETURNS [codebase: LONG POINTER] = INLINE {    -- Returns address of first word of program's code segment.    OPEN cb: LOOPHOLE[codebase, Environment.Long];    cb.lowbits ¬ Inline.BITAND[      Frame.ReadCodebaseLow[Inline.LowHalf[LOOPHOLE[frame]]], 177776B];    cb.highbits ¬ Frame.ReadCodebaseHigh[Inline.LowHalf[LOOPHOLE[frame]]]};  Code: PROCEDURE [link: PrincOps.ControlLink] RETURNS [code: LONG POINTER];  -- Returns address of first word of code of procedure directly or indirectly pointed to by link.  EntryVector: PROCEDURE [link: PrincOps.ControlLink]    RETURNS [entryVector: LONG POINTER];  -- Returns address of first word of entry vector item for procedure directly or indirectly pointed to by link.  GetSwapUnitsForCatchCode,  GetSwapUnitsForEntryVector,  GetSwapUnitsForProcedure:    PROCEDURE [proc: --GENERIC-- PROCEDURE]    RETURNS [      interval: VM.Interval, swappability: VM.Swappability,      changeableSwappability: BOOLEAN];  -- Returns info about code pack containing item.      GetSwapUnitsForGlobalFrame: PROCEDURE [frame: --GENERIC-- PROGRAM]    RETURNS [      interval: VM.Interval, swappability: VM.Swappability,      changeableSwappability: BOOLEAN];  -- Returns info about frame pack containing frame.	-- Naked Condition Variable Management:  AllocateNakedCondition: PROCEDURE [] RETURNS [cv: LONG POINTER TO CONDITION, mask: WORD];  -- Allocates one of the sixteen naked condition variables, initializes it with the default  -- timeout, and returns a long pointer and wakeup mask with an appropriate bit set.  DeallocateNakedCondition: PROCEDURE [cv: LONG POINTER TO CONDITION];  -- Deallocates a naked condition variable previously allocated with AllocateNakedCondition.	-- Signal Management:	  GetCurrentSignal: SIGNAL RETURNS [signal: --GENERIC-- SIGNAL, signalArgs: PrincOps.LocalFrameHandle];  -- Raise this signal from a catch phrase; Pilot will catch it and return the SIGNAL or ERROR that the catch phrase has caught and a COPY of its arguments.  -- signalArgs is a local frame containing the arguments of "signal".  The caller of GetCurrentSignal becomes the owner of the local frame, and is responsible for freeing it.  The frame may be freed by using ReraiseSignal or ReraiseError, or by Frame.Free.  -- At present, the caller of GetCurrentSignal can not tell whether the signal is a SIGNAL, an ERROR, or a SIGNAL raised as an ERROR.  Also, the number of actual arguments of the signal is some number less than or equal to the capacity of the local frame.    ReraiseError: PROCEDURE [signalArgs: PrincOps.LocalFrameHandle, signal: --GENERIC-- SIGNAL] =    -- Raises an ERROR just as it was raised when reported by GetCurrentSignal.    -- Pilot becomes the owner of signalArgs­, and will be responsible for freeing it.    MACHINE CODE BEGIN Mopcodes.zKFCB, SDDefs.sErrorList END;  ReraiseSignal: PROCEDURE [signalArgs: PrincOps.LocalFrameHandle, signal: --GENERIC-- SIGNAL] =    -- Raises a SIGNAL just as it was raised when reported by GetCurrentSignal.    -- Pilot becomes the owner of signalArgs­, and will be responsible for freeing it.    MACHINE CODE BEGIN Mopcodes.zKFCB, SDDefs.sSignalList END;	-- Global Frames  GetNextGlobalFrame: PROCEDURE [frame: PrincOps.GlobalFrameHandle]    RETURNS [nextFrame: PrincOps.GlobalFrameHandle];  GlobalFrameFromProgram: PROCEDURE [program: PROGRAM]    RETURNS [frame: PrincOps.GlobalFrameHandle] = INLINE {    RETURN[Inline.LowHalf[LOOPHOLE[program]]]};  ProgramFromGlobalFrame: PROCEDURE [frame: PrincOps.GlobalFrameHandle]    RETURNS [program: PROGRAM] = INLINE {RETURN[LOOPHOLE[LONG[frame]]]};	-- State Vector Management:  AddStateVector: PROCEDURE [priority: Process.Priority];  -- Allocates an additional state vector for the given priority.  -- At present, there is no way to withdraw a state vector.  	-- Misc:  VisitDebugger: PROCEDURE []; -- Go to the debugger and immediately return      ResumeError: ERROR;  -- results from attempting to RESUME an ERROR.  HardwareError: ERROR;    InterruptError: ERROR;  END.LOG11-Aug-81  9:51:33   AWL      	Stuff moved here from RuntimeInternal (created file).25-Aug-81  9:12:42   WDK       Moved Codebase, Code, EntryVector here from RuntimeInternal.   Made ResumeError an ERROR.27-Aug-81 18:50:57   AWL         Fixed Codebase: returned @[frame] not code base! 9-Nov-81 13:34:38   WDK        Replaced SendMsgSignal with GetCurrentSignal.  Added Catch, ReraiseError, ReraiseSignal.23-Nov-82 15:17:18   AWL         Added HardwareError and InterruptError.  Added GetNextGlobalFrame,   GlobalFrameFromProgram and ProgramFromGlobalFrame from RuntimeInternal. 2-Jul-83 18:06:54   WDK        Added AddStateVector. GetSwapUnitsFor* moved here from SpecialRuntimeExtras.15-Jul-83 10:57:42   JXP       Fix GlobalFrameFromProgram and ProgramFromGlobalFrame. They never looked at   their parameters.