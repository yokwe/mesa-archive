-- Copyright (C) 1988, 1989 by Fuji Xerox Co., Ltd. All rights reserved. -- <>VMDriver>VMExtras2.mesa   11-Apr-89 10:36:38 by TxHDIRECTORY FileLock USING [LockHandle], VM USING [Interval];VMExtras2: DEFINITIONS = {-- A resident interval must be passed to as the argment "interval". This proc gives the vm "interval" consecutive real pages like VMExtras.EmulatePC does. Return FALSE if consecutive allocation failed, which should be impossible case. In case of FALSE returned, the reals that back the resident "interval" may be different from those on the entry, and the clients can either try more or abort.    GetConsecutiveVMResidentRealMemory: PROC[interval: VM.Interval] RETURNS[BOOLEAN];<< Notes: 1. The "interval" must not already backed by consecutive memories makes things confused. 2. The process that failed in getting consecutive real memories due to a consecutive pool overflow keeps waiting untill the pool gets enough room. 3. VM.SetSwappability must not be operated to the interval with consecutive memories.  4. The initial actual contents of the "interval" are throwed away. >>-- When free the consecutive real pages obtained with the above get proc, this proc must be called.   FreeConsecutiveVMResidentRealMemory: PROC[interval: VM.Interval];<< Notes:   1. The "interval" must be backed by consecutive real pages.  2. It does ONLY deallocate real memories. >>-- Exported from VMImplB. Implemented for shrinking mapped files. Note that this proc assumes that the interval to be unmapped should not cover the whole map unit, and that all the contents of it just threw away.    PartiallyUnmap: PROCEDURE [VM.Interval];  -- Exported from VMDataMapImpl (ResMemMgr-module). Return the run.interval which has the given lock handle.    GetVMIntervalWithLockHandle: PROCEDURE [node: FileLock.LockHandle]    RETURNS [vm: VM.Interval];  -- Exported from VMDataMapImpl (ResMemMgr-module). It's a internal proc used by PartiallyUnmap. Note that this proc assumes that the interval to be unmapped should not cover the whole map unit.  DeleteMapUnitPartially: PROCEDURE [VM.Interval];    }...LOG12-Jan-89 14:23:35   TxH    created file.  7-Apr-89 14:53:06   TxH    Moved initialize proc to VMInternal.11-Apr-89 10:36:36   TxH    Added PartiallyUnmap, GetVMIntervalWithLockHandle and DeleteMapUnitPartially. (SS-FX: AR#6, AR#26).    