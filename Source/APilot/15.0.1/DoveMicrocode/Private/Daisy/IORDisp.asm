$MOD186$PAGELENGTH (72)$PAGEWIDTH  (136);Copyright (C) 1984, 1985 by Xerox Corporation. All rights reserved.;-- IORegion locations for the Displayhandler.;-- stored as [Idun]<WDLion>Dove>IORDisp.asm;;-- last edited by:;--	JAC	30-Jan-87 19:18:52	:moved HBorder0Base and VBorder0Base to bottome to be compatible with the display handler in daybreak;--	MXT	 8-May-86 10:54:53	:Change the meanings of ConfigInfo and Added comment that change ;--	MXT	10-Apr-86 16:30:13	:Change the meanings of chngdInfo and Added comment that change.;--	JPM/kek	  1-Sep-85 14:20:10	:Make procs only a word (no longer called from outside handler). (taken from B0 edit log);--	JGS	 27-Aug-85 12:20:28	:B2 changes.NAME		IORDisp;---------------------------------------------------------------------------------------------------; $NOLIST$INCLUDE	(IOPDefs.asm)	;This should always be INCLUDEd first$INCLUDE	(HardDefs.asm)$LIST;---------------------------------------------------------------------------------------------------; Included IOPDefs.asm and HardDefs.asm ;;***************************************************************************************************DisplayIOR		SEGMENT		COMMON 			Assume DS:DisplayIOR;Declare data used by other files PUBLIC;PUBLIC  displayTaskPUBLIC  displayLockPUBLIC  chngdInfoPUBLIC  vertRetraceEventPUBLIC  cursorXCoordPUBLIC  cursorYCoordPUBLIC  borderLowPUBLIC  borderHighPUBLIC  cursorPatternPUBLIC  displCntlPUBLIC  mixRulePUBLIC  numberBitsPerLinePUBLIC  numberDisplayLinesPUBLIC  configInfoPUBLIC  colorParamsPUBLIC  xCoordOffsetPUBLIC  yCoordOffsetPUBLIC  pixelsPUBLIC  refreshPUBLIC  bitMapOrgPUBLIC  numberQuadWordsPUBLIC  CursorUserPUBLIC  HBorder0BasePUBLIC  VBorder0BasePUBLIC  displayHWInitProcPUBLIC  cursorPositionProcPUBLIC  cursorPatternProcPUBLIC  borderPatternProcPUBLIC  backgndProcPUBLIC  commandProc;PUBLIC  displayIntrCnts  ; !!!! Added for debug !!!!!PUBLIC  displayWdtCnts   ; !!!! Added for debug !!!!!;displayTask		TaskContextBlock	<>;;******************************************************************************************************;;displayFunctionContextBlock is a structure for implementing communication between the head and handler.;It also contains information for synchronizing communication between the head and handler, the hardware;unique information, and the data to be output to the hardware (passed from the head to handler).;;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -;;Head/Handler communication synchronization information  displayLock		DW	?	;Lock mechanism for Mesa/IOP communication;  chngdInfo		DW	?	;Word containing flags which specify info that has changed  					;b15 = change in cursor position;					:b14 = change in cursor pattern;					:b13 = change in border pattern;					:b12 = change in background;					:b11 = change in command to display control register;					:b10 = change in X-Y alignment;					:b9 - b0 = not used;;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -; ;Information passed from the head to the handler  vertRetraceEvent    DB   sizeOfClientCondition DUP (?)  ;Client condition structure for notifying Mesa;							  :driver of vert. retrace intr.;  cursorXCoord		DW	?	;x coordinate of cursor position (pixels)  cursorYCoord		DW	?	;y coordinate of cursor position (pixels);  borderLow		DB	?	;Border pattern low byte  borderHigh		DB	?	;Border pattern high byte;  cursorPattern		DB	32 DUP (?)	;Cursor pattern;  displCntl		DB	?	;Display control register  (DayBreak); 					:  b7-b4 = cursor/data mix; 					:  b3 = picture/border'; 					:  b2 = Not used; 					:  b1 = video enable/disable; 					:  b0 = interlaced/non-interlaced  mixRule		DB	?	;Cursor/Data Mix  (Daisy);;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -;;Hardware unique information  numberBitsPerLine	DW	?	;Display width (in pixels);  Active picture bits  numberDisplayLines	DW	?	;Display height (in pixels);  Active picture lines;  configInfo		DB	?	;H/W configuration information;					:  b7 = configuration 0=Daybreak 1-=Daisy;					:  b6 = interlace/non-interlaced  0=interlaced, 1=non-interlaced;					:  b5 = 15/19 inch display  0=15 inch display, 1=19 inch display  unused		DB	?	;Normally unused byte, needed to assure word allignment;  colorParams		DW	?	;Params for color;					: b15:  1 = color,  0 = non-color  xCoordOffset		DW	?	;Offset of cursor positon x-coordinate (in pixels)  yCoordOffset		DW	?	;Offset of cursor positon y-coordinate  (in pixels);  pixels		DB	?	;Number of pixels per inch  refresh		DB	?	;Refresh rate;;- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -;;*****************************************;*                                       *;*   Info that Mesa does not need        *;*                                       *;*****************************************;  bitMapOrg		DW	?	;Holds address of bit map.  Since the 4 least significant bits of;					:the bitmap address are always 0, this variable holds the 16 most;					:significant bits of the 20 bit address.  numberQuadWords	DW	?	;Number of quad words per display line;;  displayIntrCnts	DW	?	; !!!! Added for debug !!!!!  displayWdtCnts	DB	?	; !!!! Added for debug !!!!!;;;Display hander/ maintainence panel handler information  CursorUser		DB	?	;Indicates whether the display handler or maintainence panel;					:handler is setting the cursor pattern;					:= MPCursor (FF) when maintainence panel handler is setting;					:= DisplayCursor (0) when display handler is setting;Variables containing addresses of Daisy/Daybreak procedures  displayHWInitProc	DW	?	;Holds address of display hardware initialization procedure  cursorPositionProc	DW	?	;Holds address of cursor position procedure  cursorPatternProc	DW	?	;Holds address of cursor pattern procedure  borderPatternProc	DW	?	;Holds address of border pattern procedure  backgndProc		DW	?	;Holds address of procedure to set background  commandProc		DW	?	;Holds address of procedure to output commands to display register    HBorder0Base		DW	?	;HBorder0 Base Value.  Used by adjusting display alignment.  VBorder0Base		DW	?	;VBorder0 Base Value.  Used by adjusting display alignment.DisplayIOR		ENDS			END