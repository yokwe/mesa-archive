$MOD186$PAGELENGTH (72)$PAGEWIDTH  (136);Copyright (C) 1984, 1985, 1987 by Xerox Corporation. All rights reserved.;IORegion locations for the Ethernet handler;stored as [Idun]<WMicro>Dove>IOREther.asm;created on  5-Jul-84 16:48:55;last edited by:;	MS	 8-Mar-89 14:50:13	added some words for Queue lock;	JAC	 2-Feb-87 14:31:30	get rid of assembly errors;	BKI	19-Jan-87 18:25:25	Increase size of Ethernet's IORegion to;					accomodate 4 TBDs, 12 RFDs and 16 760-byte;				receive buffers;	BKI	 2-Aug-85 18:24:46	Locate variables into logical groups;	JPM	31-Jul-85 11:06:30	Move work-mask conditions near top of IOR (offsets must be <256 bytes);	BKI	26-Jun-85 18:36:40	Make descriptor and buffer attributes;					variable rather than constant;	JPM	26-Jun-85  9:01:19	Opie redesign conversion;	BKI	30-Jul-84 16:36:14	CreationNAME		IORetherPUBLIC		iopEtherOutQueSemaphore, mesaEtherOutQueSemaphore, iopEtherInQueSemaphore, mesaEtherInQueSemaphorePUBLIC		beginFBL, bufferCopyTask, bufferCopyWork, cb, clientBufLengthPUBLIC		clientBufPtr, clientStatus, descriptorArea, endFBL, endRDLPUBLIC		etherCmdAvail, etherCNATask, etherInQueuePUBLIC		etherInQueueForBindweed, etherInWorkMask, etherLockMaskPUBLIC		ethernetTask, etherOutQueue, etherOutWorkMask, i586DumpPUBLIC		inBufferAvail, mesaClientStateRequest, mesaInClientStatePUBLIC		mesaInQueue, mesaOutClientState, mesaOutQueue, rbdCountPUBLIC		rbdToProcess, rbLength, rfdCount, scb, tbdCount;DEBUGPUBLIC		debugInfo$NOLIST$INCLUDE	(IOPDefs.asm)$INCLUDE	(QueDefs.asm)$INCLUDE	(EthIOFce.asm)$LIST;--------------------------------------------------------------------------------; ;;********************************************************************************EthernetIOR	SEGMENT	COMMON 		Assume DS:EthernetIORethernetFCB	LABEL	WORD;	Handler/Head variablesmesaOutQueue	QueueBlock	<>mesaInQueue	QueueBlock	<>mesaClientStateRequest	DW	?		;{off(00H),on(~00H)};read-only variablesscb		I586SCB		<>etherOutWorkMask	DW	?etherInWorkMask	DW	?etherLockMask	DW	?mesaInClientState	DW	?		;{off(00H),on(~00H)}mesaOutClientState	DW	?		;{off(00H),on(~00H)}iopEtherOutQueSemaphore	DW	?mesaEtherOutQueSemaphore	DW	?iopEtherInQueSemaphore	DW	?mesaEtherInQueSemaphore	DW	?;	Handler/IOP Client variablesetherOutQueue	QueueBlock	<>etherInQueue	QueueBlock	<>etherInQueueForBindweed	QueueBlock	<>etherCmdAvail	Condition	<>inBufferAvail	Condition	<>tbdCount	DB	?rfdCount	DB	?rbdCount	DB	?		DB	?rbLength	DW	?;	Handler variablesethernetTask	TaskContextBlock	<>etherCNATask	TaskContextBlock	<>bufferCopyTask	TaskContextBlock	<>bufferCopyWork	Condition	<>endRDL		DW	?beginFBL	DW	?endFBL		DW	?clientBufLength	DW	?clientBufPtr	OpieAddress	<>clientStatus	DW	?rbdToProcess	DW	?cb		CommandBlock	<>i586Dump	I586DumpBuffer	<>debugInfo	DW	6 DUP (?)	;DEBUG: For debugging information;	Storage pool for descriptors and receive buffersdescriptorArea	LABEL	WORDtbd		%REPEAT	(4)	(TransmitBufferDesc	<>					)rfd		%REPEAT	(12)	(ReceiveFrameDesc	<>					)rbd		%REPEAT	(16)	(ReceiveBufferDesc	<>					);Receive buffers must be identical in size.  Buffers must be word-wide and;word-aligned.;I have set rbLength so that a maximum size frame will completely fill two;receive buffers.;rbLength	EQU	((frameMaxSize+1)/2+1) AND NOT 1H	;in bytesrb		%REPEAT	(16)	(DW	760/2 DUP (?)					)EthernetIOR	ENDS			END