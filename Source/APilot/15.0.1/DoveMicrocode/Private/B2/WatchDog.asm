$MOD186$PAGELENGTH (72)$PAGEWIDTH  (136);Copyright (C) 1984, 1985 by Xerox Corporation. All rights reserved.;-- stored as [Idun]<WDLion>Dove>WatchDog.asm;-- created on   4-Jun-84 16:17:29;-- last edited by:;--	JPM	22-Jul-85 10:34:36	:Change IOPEInROM alignment to WORD;--	JPM	 6-Jul-85 13:31:27	:Opie redesign;--	KEK	29-Mar-85 11:48:11	:add TEMPORARY!!! oneminute fix;--	KEK	 3-Mar-85 15:04:01	:changed print directives;-- 	KEK	27-Feb-85 16:26:51	:return to WaitForInt if timeout, instead of calling troubleProc.;--	KEK	21-Feb-85 16:03:44	:turn off intr's when timing out.;--	VXS	17-Sep-84 18:42:33	:Add WatchDogTimeout value returned in AX (wasn't returned before);--	VXS 	16-Jul-84 15:57:06	:EXTRN of watchDogTask;						 IOImport gone, get rid of INCLUDE;--	BKI 	27-Jun-84 15:15:07	:Opie Version 1 release;--	BKI	26-Jun-84 20:50:49NAME			WatchDog;--------------------------------------------------------------------------------;--------------------------------------------------------------------------------$NOLIST$INCLUDE		(IOPDefs.asm)$INCLUDE		(HardDefs.asm)$INCLUDE		(OpieDefs.asm)$INCLUDE		(IOPMacro.asm)$LIST;--------------------------------------------------------------------------------OpieIOR			SEGMENT	COMMONEXTRN			SegmentTableAddress: SegmentAndOffsetEXTRN			watchDogQueue: WORDOpieIOR			ENDS;--------------------------------------------------------------------------------;LOCAL CONSTANTS:oneSecond		EQU	1000	;milliseconds;--------------------------------------------------------------------------------;********************************************************************************IOPEInROM		SEGMENT	WORD PUBLIC			ASSUME	CS:IOPEInROM;--------------------------------------------------------------------------------PUBLIC			WatchDogTaskInitEXTRN			InsertInSystemQueue: NEAR;--------------------------------------------------------------------------------		WatchDogTaskInit:			ASSUME	DS:OpieIOR;no special initializationwdWait:			%WaitForTime	(oneSecond)			MOV	AX, DS			;copy Opie's IOR address			MOV	ES, AX			; into ES (for timeouts)			MOV	DI, watchDogQueuetestICB:		CLI				;(I can't take an int now!)			TEST	[DI].interruptStatus, MASK ICTimed			JZ	nextICB			;Jump if not timed.			DEC	[DI].interruptTimerValue			JNZ	nextICB			;Jump if not timeout.wdTimeout:		AND	[DI].interruptStatus, NOT (MASK ICTaskWaiting OR MASK ICTimed)			MOV	SI, [DI].interruptTCBLinkPtr			MOV	AL, [DI].interruptHandlerID			MOV	AH, 0			SHL	AX, 2			LDS	BX, SegmentTableAddress	;We need task's IOR			ADD	BX, AX			MOV	BP, DS:[BX].stackSegment	;save for later			MOV	DS, DS:[BX].ioRegionSegment			ASSUME	DS:NOTHING			ASSUME	ES:OpieIOR			PUSH	DI			;save valuable register			CALL	InsertInSystemQueue	;put task on system queue.			POP	DI			;restore valuable register			MOV	BX, [SI].taskSP			MOV	DS, BP			;get access to task's stack			OR	WORD PTR DS:[BX]+waitStackFlagOffset, MASK i80186CF	;set timeout flag			MOV	AX, ES			MOV	DS, AX			;restore DS			ASSUME	DS:OpieIORnextICB:		STI				;turn on ints			MOV	DI, [DI].watchdogLinkPtr			CMP	DI, Null			JNE	testICB			;Go and test next ICB.			JMP	wdWait			;All ICBs tested.IOPEInROM		ENDS			;********************************************************************************									END