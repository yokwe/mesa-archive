$MOD186$PAGELENGTH (72)$PAGEWIDTH  (136);Copyright (C) 1984, 1985 by Xerox Corporation. All rights reserved.;-- stored as [Iris]<WMicro>Dove>IOPLRam.asm;-- created on   6-Aug-84 16:50:20;;-- last edited by:;;--	JAC/KEK	13-Sep-85 11:16:45	:remove cleanfloppyProc, to undo the growth of the last addition. add pad-word to make up for removal of cleanfloppyProc.;--	JAC/KEK	11-Sep-85 15:05:45	:add more boot variables (diagType,finishMode,timeoutEnable);--	JPM	29-Jul-85 10:18:49	:Added floppyBootFileAddress, eePromVersion.;--	JPM	26-Jul-85 12:13:28	:Added memory configuration words.;--	JPM	18-Jul-85 10:16:19	:Added Bindweed interrupt vector area.;--	JPM	11-Jul-85  9:19:07	:Reconcile boot changes.;--	JPM	26-Jun-85  8:23:02	:Removed ReturnToSystemLoop (need Opie init).;--	JPM	24-Jun-85 12:03:01	:Added prebootSwitches, made segment absolute.;--	JPM	24-May-85  8:49:55	:Added controlRegData and resetRegData (moved from IOROpie).;--	JPM	20-May-85 13:35:34	:Added some boot variables.;--	JPM	17-May-85 10:19:57	:Changed IORegionSegmentAddress to IORSegmentTableAddress, added Include of OpieDefs.;--	JPM	16-May-85 10:34:33	:Opie redesign.;--	KEK/JMM	18-Feb-85 11:01:38	;ORG opieReentry stuff after burdock stuff; make sure BootVariables follows it directly; replace VMMSize w/ VMMSizeInPages & VMMFirstPage.;--	VXS	29-Nov-84 16:43:23	:Put in ORG 0 for safety.;--	VXS	28-Nov-84 21:20:28	:Move BootTimeVariables out into another file.;--	VXS	28-Nov-84 15:44:38	:added endOfDiagnosticsMonitor to BootTimeVariables;--	VXS	27-Nov-84 17:35:27	:moved opieReentryIP, opieReentryCS out of BootTimeVariables;--	VXS	20-Nov-84 18:10:24	:Move generation of softwareInterrupt base to HardOpie.asm.;--	VXS	20-Nov-84 17:54:44	:Move definitions of IntrptVctBase to HardOpie.asm;--	VXS	14-Nov-84 12:36:39	:add VMMSize.;--	VXS	 8-Nov-84 18:38:06	:take the free storage locs out of BootTimeVariables structure so IOPKernl doesn't have to include IOPLRam;--	VXS	 7-Nov-84 14:43:12	:new version of BootTimeVariables structure.;--	VXS	 1-Oct-84 20:37:40	:Moved bindweed stuff to be all together, and first allocated so don't have to blow EPROMs so often;--	VXS	 1-Oct-84 15:03:07	:Put structure BootTimeVariables in for Booting communication area instead of anonymous space allocation;--	VXS	26-Sep-84 15:22:02	:Fix assembly error in availableLRamSize definition;--	VXS	26-Sep-84 13:29:03	:change GEN to GENONLY for cleaner listing;--	VXS	24-Sep-84 14:26:25	:Change BootType to BootVariables;--	VXS	20-Sep-84 20:02:31	:put in stuff so don't get overlap between local ram segment and IORegion.;--	VXS	20-Sep-84 16:31:41	:Fix bug in IOPEStack initialization (should be and end of stack);--	VXS	18-Sep-84 12:22:17	:Fixed BindweedBuffer allocation to be correct (forgot the DUP (?));--	VXS	30-Aug-84 17:31:36	:changed availableLRamSize to smaller value so segments don't overlap;--	VXS	27-Aug-84 17:26:47	:Changed arg to DUP in SoftwareInterruptBase definition from (244-80+1).;--	VXS	 9-Aug-84 14:36:51	:Added BurdockSavedRegisters wired to 400H;--	VXS	 8-Aug-84 16:36:54	:Take out Assembly controls in beginning;--	VXS	 8-Aug-84 16:01:50	:Took out hack EEProm seg allocation, moved to EEPDefs.asm;--	VXS	 8-Aug-84 15:10:57	:Change to be an include file;--	VXS	 8-Aug-84 14:05:38	:Add BootFileReadIn, make BootType a byte instead of a word;--	VXS	 7-Aug-84 19:49:57	:Moved tempEEPromImage to here.;--	VXS	 6-Aug-84 16:50:26	:CreationNAME			IOPLRam;--------------------------------------------------------------------------------$NOLIST$INCLUDE		(HardOpie.asm)$INCLUDE		(OpieDefs.asm)$LIST;Module describing format of non-relocatable Local RAM.;(This segment must always be located at address 0H.);--------------------------------------------------------------------------------;********************************************************************************IOPELocalRam		SEGMENT	AT 0			ORG	0			PUBLIC	IOPELocalRamStart			PUBLIC	i186DivideByZero, i186SingleStep, i186NMI			PUBLIC	i186BreakPoint, i186OverFlow, i186ArrayBounds			PUBLIC	i186BadOpcode, i186EscapeOpcodeIOPELocalRamStart	LABEL	WORDi186DivideByZero	SegmentAndOffset <>	;Divide by zero vector (0)i186SingleStep		SegmentAndOffset <>	;Single Step (1)i186NMI			SegmentAndOffset <>	;Non Maskable Interrupt (2)i186BreakPoint		SegmentAndOffset <>	;Breakpoint (3)i186OverFlow		SegmentAndOffset <>	;Overflow (4)i186ArrayBounds		SegmentAndOffset <>	;Array Bounds exception (5)i186BadOpcode		SegmentAndOffset <>	;Bad opcode trap (6)i186EscapeOpcode	SegmentAndOffset <>	;Escape opcode (7)			ORG	40H		;Reserved by Intel (8-15)PUBLIC			BindweedIntrptVctType, BindweedIntrptVctBaseBindweedIntrptVctType	EQU	16		;Reserved by Intel, but not used			ORG	BindweedIntrptVctType*4BindweedIntrptVctBase	DD	16 DUP (?)	;up to sixteen vectors for Bindweed;Generate label names for interrupt vectors, document their existence.%*DEFINE(Controller(name,EOIPort,EOIcommand,PendPort,MaskPort))(			ORG	%name%(IntrptVctType*4)			PUBLIC	%name%(IntrptVctBase)%name%(IntrptVctBase)	DD	8 DUP (?)	;eight vectors);End Controller macro definition$SAVE$GENONLY			%InterruptControllers$RESTORE			ORG	0A0H						PUBLIC	i82586ISPAddressi82586ISPSize		EQU	4Di82586ISPAddress	DW	i82586ISPSize DUP (?)			PUBLIC	opieIntrptVctBase, opieIntrptVctTypeopieIntrptVctBase	LABEL	WORDopieIntrptVctType	EQU	(opieIntrptVctBase-IOPELocalRamStart)/4opieIntrptVctSize	EQU	8-i82586ISPSize/2			DD	opieIntrptVctSize DUP (?)			ORG	softwareIntrptVctType*4			PUBLIC	softwareIntrptVctBasesoftwareIntrptVctBase	DD	(128-softwareIntrptVctType) DUP (?)			ORG	200H			PUBLIC	HandlerInitProcTableHandlerInitProcTable	DD	128 DUP (?)	;init procs for handlers not yet started;---------------------------------------------------;Burdock/Bindweed work area			ORG	400H		;needs to be here so that Mesa						; Bindweed knows where to ask for registers			PUBLIC	BurdockSavedRegisters, BindweedBufferBurdockSavedRegsSize	EQU	30BurdockSavedRegisters	DW	BurdockSavedRegsSize DUP (?)BindweedBufferSize	EQU	256D		;Size in BytesBindweedBuffer		DB	BindweedBufferSize DUP (?);---------------------------------------------------;New Burdock EPROMs must be made if locations between; ORG	400H and here are changed!!!!!!!!;---------------------------------------------------			PUBLIC	prebootSwitchesprebootSwitches		DW	?	;results of preboot tests			ORG	540H	;determined by boot diagnostics						; (follows burdock defs)			PUBLIC	opieReentryopieReentry		SegmentAndOffset <>	;reentry point for booting;Here is the structure for the Boot area.						PUBLIC	bootOverlayReentry			PUBLIC	bootType, skipUserInterface, bootOverlayRequestbootOverlayReentry	SegmentAndOffset <>	;jump point after loading overlaybootType		DB	?		;0 = normal, 1 = diagnosticskipUserInterface	DB	?		;0 = run boot UI, 1 = skip UI and go to bootloadingbootOverlayRequest	DW	?		;number of overlay (set to 1 first time)			PUBLIC	device, bootRetryCount			PUBLIC	diagType, finishMode, timeoutEnable			PUBLIC  baseEthernetFileID			PUBLIC	floppyBootFileAddress;			PUBLIC	cleanFloppyHeadsPROCdevice			DW	?	;1-Disk, 2-Floppy, 3-Ethernet,  4-AltEthernet. Initialized by PreBoot.;mode			DW	?	;0-Normal, 1-Fast boot. Initialized by PreBoot.diagType		DB	?	;0=short, 1=long (part of old mode)finishMode		DB	?	;0=boot system,1=back to UI,2=stop (part of old mode)bootRetryCount		DW	?	;initially 0, incremented per failure. Initialized by PreBoot.floppyBootFileAddress	DW	2 DUP(?) ;Initialized by RAMFlpBt.			ORG	OFFSET floppyBootFileAddressbaseEthernetFileID	DW	3 DUP(?) ;Initialized by ROMBoot.;cleanFloppyHeadsPROC	DW	2 DUP(?) ;Initialized by PreBoot.timeoutEnable		DB	?	;default boot device timeout			DB	?	;...for word alignment only...			DW	?	;...a pad to make up for removal of cleanFloppy.;End of boot time data.;----------------------			PUBLIC	startOfBootBufferSpace, endOfBootBufferSpacestartOfBootBufferSpace	DW	?	;Size of available space.endOfBootBufferSpace	DW	?	;May not need this			PUBLIC	VMMFirstPage, VMMSizeInPages			PUBLIC	firstRealPageInVM, lastRealPageInVM, countRealPagesInVM			PUBLIC	firstDisplayBankPage, countDisplayBankPagesVMMFirstPage		DW	?	;first VM map page.VMMSizeInPages		DW	?	;number of pages in VM map.firstRealPageInVM	DW	?      lastRealPageInVM	DW	?      countRealPagesInVM	DW	?      firstDisplayBankPage	DW	?countDisplayBankPages	DW	?			PUBLIC	controlRegData, resetRegDatacontrolRegData		DW	?	;image of write-only control registerresetRegData		DW	?	;image of write-only reset register			PUBLIC	eePromVersioneePromVersion		DW	3 DUP(?) ;version numbers from EEProm (first 3 words)			PUBLIC	IORSegmentTableAddress, IOROpieSegmentAddressIORSegmentTableAddress	SegmentAndOffset <>	;address of IORegion segment tableIOROpieSegmentAddress	DW	?	;segment address of Opie's IORegion					; (also in segment table, but here for efficiency)			PUBLIC	firstAvailableLocalRamfirstAvailableLocalRam	LABEL	WORD	;pointer to offset (SEG=local ram segment) of next available byte of local ramIOPELocalRam		ENDS;********************************************************************************			END