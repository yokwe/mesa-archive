$MOD186$PAGELENGTH (72)$PAGEWIDTH  (136);Copyright (C) 1984, 1985 by Xerox Corporation. All rights reserved.;-- IORegion segment for Opie and its tasks.;-- stored as [Iris]<WMicro>Dove>IOROpie.asm;;-- last edited by:;--	JPM    .es	 6-Jul-85 14:02:27	:Added ticksTillNextTimeout;--	JPM    .es	 1-Jul-85  8:36:38	:Added ROMworkMaskLimit;--	JPM    .es	28-Jun-85 13:58:45	:Generate space for only ROM-needed CBs and ICBs;--	JPM    .es	27-Jun-85 17:46:34	:Added enableMask parm to x macro (in Devices);--	JPM    .es	24-Jun-85  9:08:46	:Added generalMapRegisterImage, removed currentTaskHandlerID;--	JPM    .es	18-Jun-85  9:23:36	:Added intervalTimer;--	JPM    .es	24-May-85  8:49:47	:Moved controlRegData and resetRegData to IOPLRam;--	JPM    .es	21-May-85  9:17:43	:Added resetRegData;--	JPM    .es	17-May-85  9:46:50	:Changed SegmentTableAddress type to SegmentAndOffset;--	JPM    .es	15-May-85 11:24:15	:Opie redesign (combined with IORTimer.asm, IORwatch.asm, and IORwork.asm);--	kEK    		 3-Mar-85 14:56:14	:change assembly printing directives;--	VXS  .PA	20-Nov-84 20:03:22	:CreationNAME			IOROpie;--------------------------------------------------------------------------------; $NOLIST$INCLUDE		(IOPDefs.asm)$INCLUDE		(OpieDefs.asm)$INCLUDE		(HardOpie.asm)$LIST;--------------------------------------------------------------------------------; ;;********************************************************************************OpieIOR			SEGMENT		COMMON 			Assume DS:OpieIOR;Segment table address (also in IOPELocalRam, but here for efficiency)PUBLIC			SegmentTableAddressSegmentTableAddress	SegmentAndOffset <>;ControllerBlocksPUBLIC			CBbaseLocationCBbaseLocation		LABEL	WORD%*DEFINE(Controller(name,intType,slaveEOIPort,PendPort,MaskPort))($GENONLY%IF(%EQS(%whereDefined,ROM)) THEN (PUBLIC			%name%(Controller)%name%(Controller)	ControllerBlock	<>)FI);End Controller macro definition$SAVE			%InterruptControllers$RESTORE;InterruptContextBlocksPUBLIC			ICBbaseLocationICBbaseLocation		LABEL	WORD%*DEFINE(x(name,controlname,channel,slaveEOIcommand,enableMask))($GENONLY%IF(%EQS(%whereDefined,ROM)) THEN (PUBLIC			%name%(ICB)%name%(ICB)		InterruptContextBlock	<>)FI);End x macro definition$SAVE			%Devices$RESTORE;The location of the Mesa page Map (extended bus and IOP logical),; which might move around in physical memory.PUBLIC			mesaPageMapLocation, mesaPageMapOffset, mesaPageMapSegmentmesaPageMapLocation	OpieAddress	<>	mesaPageMapOffset	DW	?mesaPageMapSegment	DW	?;Count used in generating lock masksPUBLIC			lockMaskCountlockMaskCount		DB	?			DB	?	;filler to keep word addresses even;Current task (handler and offset) and system queuePUBLIC			currentTaskTCBPtr, systemQueuecurrentTaskTCBPtr	DW	?systemQueue		IOPEQueue	<>	;Map register data for PCE and IOPPUBLIC			mapRegisterImages, generalMapRegisterImagemapRegisterImages	DB	16 DUP (?)generalMapRegisterImage	EQU	WORD PTR mapRegisterImages+generalMapRegister;IORegion for the timer taskPUBLIC			timerTask, timerQueue, secondsCounterPUBLIC			intervalTimer, timeOfDayPUBLIC			ticksTillNextTimeouttimerTask		TaskContextBlock	<>timerQueue		IOPEQueue	<>secondsCounter		DW	?intervalTimer		DW	?timeOfDay		TimeOfDayFormat		<>ticksTillNextTimeout	DW	?;IORegion for the watchdog taskPUBLIC			watchDogTask, watchDogQueuewatchDogTask		TaskContextBlock	<>watchDogQueue		DW	?;IORegion for the work notifier taskPUBLIC			workNotifierTask, workNotifierCondition, workNotifierBitsPtrworkNotifierTask	TaskContextBlock <>	; system-level work notifierworkNotifierCondition	Condition <>		; for client to wake up notifierworkNotifierBitsPtr	DW	?		; offset to array of words;Work mask assignment; occurs (nearly) last so workMaskConditionPtrs can be extended during bootPUBLIC			ROMworkMaskLimitROMworkMaskLimit	EQU	16PUBLIC			workMaskCount, workMaskLimit, workMaskConditionPtrsworkMaskCount		DB	?workMaskLimit		DB	?workMaskConditionPtrs	DW	ROMworkMaskLimit DUP (?);ROM-code location for workNotifierBits (can be moved during boot)PUBLIC			workNotifierBitsworkNotifierBits	DW	?		; initial work notify wordOpieIOR			ENDS			END