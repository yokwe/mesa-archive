;$MOD186;$PAGELENGTH (95);$PAGEWIDTH  (136);Copyright (C) 1984, 1985 by Xerox Corporation. All rights reserved.;-- IORegion locations for the rigid disk handler.;-- stored as [Idun]<WDLion>Dove>DskHdFce.def;;-- last edited by:;--	DEG		13-Oct-84 19:34:12	:created by; taking the hardware constants from DskIOfce.asm.;--	DEG		15-Oct-84 14:01:01	:introduced; diskMapRegister which is currently EQUated to 0.  It really needs to be; equated to generalMapRegister in the real system.;--	DEG		22-Oct-84 23:58:51	:introduced; new definitons and redefined DOB according to Bob RXS    's msg of ; 19-Oct-84 10:06:00 PDT.;--	DEG		26-Oct-84  2:01:54	:edited;--	DEG		 2-Dec-84 14:54:50	:include harddefs;--	DEG		10-Dec-84  2:03:52	:convert to use the generalMapRegister;--	DEG		13-Dec-84 14:25:20	:convert back to using map register 0 for the blue-box.;--	DEG		19-Dec-84 15:03:27	:use the generalMapRegister.;--	DEG		 9-Jan-85 15:36:57	:change name to DskHdFce.def from DskHdFce.asm.;--	DEG		11-Jan-85 15:24:55	:add definition for disk address.;--	DEG		13-Jan-85  2:49:40	:Add constants for FIFO problems.;--	DEG		15-Jan-85 23:00:05	:Fix problems in definitions.;--	DEG		18-Jan-85 21:59:30	:Correct a definition.;--	DEG		20-Jan-85  9:02:45	:Correct a definition.;--	DEG		18-Feb-85 23:08:00	:Make DOB; definition match the definition in DiskIOFaceDove.mesa.;--	DEG		28-Feb-85 12:10:16	:Add a new; constant diskPageSizeInBytes.;--	DEG		27-Mar-85  2:34:29	:remove INCLUDEs.;--	DEG		15-Apr-85 13:49:41	:add special error to disk status register.; All sizeMumbles are in bytes$NOGENDiskAddress		STRUCdiskCylinder	DW	?diskSector	DB	?diskHead	DB	?DiskAddress		ENDSDiskLabelImage		STRUCdiskFileID		DB	10 DUP (?)diskFilePageLow	DW	?diskFPHighPage0Attr	DW	?diskAttrInAllPages	DW	?diskDontCare		DD	?DiskLabelImage		ENDSsizeDiskLabelImage	EQU	SIZE DiskLabelImageDiskDOB			STRUCdiskECCSyndrome		DD	?diskMinusSectorCount	DW	?diskSecPerTrack		DB	?diskZero1		DB	?diskHdsPerCyl		DB	?diskZero2		DB	?cylPerDrive		DW	?diskStartSec		DB	?diskZero3		DB	?diskReducedWriteCyl	DW	?diskPreCompCyl		DW	?diskWriteEndCnt		DB	?diskZero4		DB	?diskHeaderError		DW	?diskLabelError		DW	?diskDataError		DW	?diskLastError		DW	?diskCurrentCyl		DW	?diskECCFlag		DB	?diskZero5		DB	?diskHeader		DD	?diskReserved1		DW	?diskReserved2		DW	?diskCtlrStatus		DB	?	;Actually of DiskCtlrStatusRecdiskDriveStatus		DB	?	;actually of DiskDriveStatusRecdiskOperation		DB	?diskZero6		DB	?diskMinusFmtCnt		DW	?diskLabel		DB	(SIZE DiskLabelImage) DUP (?)DiskDOB			ENDSsizeDiskDOB		EQU	SIZE DiskDOBdobSize			EQU	sizeDiskDOBminusDOBSize		EQU	0 - dobSize;-------------------------------------------------;  --> disk status record definitions <--DiskDriveStatusRec	RECORD	dskDriveNotReady: 1, dskSeekNotComplete: 1, dskUnu0: 1, dskAddrMark: 1, dskNotStoredIndxMrk: 1, dskNotTrack0: 1, dskNotWriteFault: 1, dskLock: 1DiskCtlrStatusRec	RECORD	dskReadDataFound: 1, dskNotBDone: 1, dskFIFOEmptyAtRead: 1, dskNotSPMA3: 1, dskNotSPMAMaxCnt: 1, dskA1B1Same: 1, dskFIFOEmpty: 1, dskFIFOFull: 1;-------------------------------------------------;  --> disk controller's commands <--DiskCommandReg	RECORD	crStopBit: 1, crDiagMode: 1, crUnused: 2, crUnuCmd: 2, crCmd: 2goToIdleLoop		EQU	0xferDOBToController	EQU	1executeDOB		EQU	2xferDOBFromController	EQU	3inIdleLoop		EQU	goToIdleLoop;-------------------------------------------------;  --> disk controller's status <--DiskStatusReg	RECORD	srErrorBit: 1, srDone: 1, srSpecialError: 2, srUnused: 2, srCmd: 2statusRegisterErrorBit	EQU	MASK srErrorBitdiskRDCDone		EQU	MASK srDonenoDiskSpecialError	EQU	0diskFIFOError		EQU	10hdiskSpecialError0	EQU	20hdiskSpecialError1	EQU	30h;-------------------------------------------------;  --> disk DMA's status <--DiskDMAReg	RECORD	diskDMAFIFODir: 1, diskDMABb1: 1, diskDMAFIFOFullBar: 1, diskDMAFIFOEmptyBar: 1, diskDMAFIFOBoundsBar: 1, diskDMAEndOfXferBar: 1, diskDMARunStateMachBar: 1, diskDMAErrorBit: 1DiskDMAStatusMask	EQU	33hDiskDMAIsInResetState	EQU	20h;-------------------------------------------------;  --> Rigid Disk DMA Hardware Constants <--diskDMAMode0	EQU	0diskDMAMode1	EQU	2diskDMAMode2	EQU	4diskDMAMode3	EQU	6diskDMAMode	EQU	diskDMAMode3;-------------------------------------------------;  --> FIFO commands <--fifoToMemory	EQU	0memoryToFIFO	EQU	-1noDataXfer	EQU	1;-------------------------------------------------;  --> Interesting Rigid Disk Hardware Ports <--DiskReadDMAWordCount		EQU	0204hDiskReadDMAAddressWordOffset	EQU	0206hDiskDMAAddressPage		EQU	0208hDiskDMAAddressWordOffset	EQU	020AhDiskWriteDMAWordCount		EQU	020ChDiskDMADirection		EQU	0210hDiskDMAStatus			EQU	0210hDiskControllerCommandRegister	EQU	0214hDiskControllerStatusRegister	EQU	0214hDiskStartDMA			EQU	0216hDiskPresetA1			EQU	0212hDiskWrite2942CR2_CR0		EQU	0200hDiskRead2942CR2_CR0		EQU	0202hDiskEnable2942Counters		EQU	020Eh;------------------------------------;  --> Disk Operations <--RecalibrateDisk		EQU	0FormatDiskTracks	EQU	1ReadDiskData		EQU	2WriteDiskData		EQU	3WriteDiskLabelAndData	EQU	4ReadDiskLabel		EQU	5ReadDiskLabelAndData	EQU	6VerifyDiskData		EQU	7;------------------------------------;  --> Disk Operations <--DiagDiskRead		EQU	1;-------------------------------------------------;  --> Other Interesting Hardware Constants <--diskPageSizeInBytes		EQU	512diskPageSizeInWords		EQU	256nilCondition		EQU	0preNotifiedCondition	EQU	1nybble		EQU	4nybbleMask	EQU	0Fh;   In the real system diskMapRegister needs to be EQU to generalMapRegister.; For testing on an IOP-only system this value is set to 0.diskMapRegister		EQU	generalMapRegister