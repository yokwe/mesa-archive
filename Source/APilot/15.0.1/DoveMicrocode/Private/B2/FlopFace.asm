;;	Copyright (C) 1984, 1985, 1986 by Xerox Corporation. All rights reserved.;;;	File = FlopFace.asm;	Stored as [Iris]<WMicro>Dove>FlopFace.asm;	this is suposed to be the 80186 equivalent of FloppyIOFaceDove.mesa;;;MesaTRUE	EQU	1MesaFALSE	EQU	0MesaNIL		EQU	0;;;  CounterControlWord	RECORD&			Enable:1,&			ChangeEnable:1,&			CounterInterruptWhenDone:1,&			RegisterInUse:1,&			NotUsed11:1,&			NotUsed10:1,&			NotUsed9:1,&			NotUsed8:1,&			NotUsed7:1,&			NotUsed6:1,&			MaximumCount:1,&			Retrigger:1,&			Prescaler:1,&			External:1,&			Alternate:1,&			Continuous:1;;;;  DataTransferType : TYPE = MACHINE DEPENDENT { None(0), Read(1), Write(2), (255) } ;;  None		EQU	0  Read		EQU	1  Write		EQU	2;;;  DensityType : TYPE = { single, double } ;;  single	EQU	0  double	EQU	1;;;  DeviceContextBlock		STRUC    DeviceAttributes			DW	5	DUP (?)			; FloppyDiskFace.Attributes    dcbExtraByte1			DB	?    DriveBusy				DB	?					; BOOLEAN    DiagnosticDiskChanged		DW	?				; BOOLEAN    PilotDiskChanged			DW	?				; BOOLEAN    DiagnosticContext			DW	?				; FloppyDiskFace.Context    PilotContext			DW	?				; FloppyDiskFace.Context    DoorOpen				DW	?				; BOOLEAN    DriveStatusHead0			DB	?				; fdc ST3 byte from Sense Drive Status    dcbExtraByte2			DB	?    Port80ControlWord			DW	?				; Port80ControlWordRecord    StepRateTimePlusHeadUnloadTime	DB	?    HeadLoadTimePlusNotInDMAmode	DB	?  DeviceContextBlock		ENDS;;;  dmaControlWord	RECORD&			IOorMemoryDestination:1,&			DecrementDestination:1,&			IncrementDestination:1,&			IOorMemorySource:1,&			DecrementSource:1,&			IncrementSource:1,&			StopWhenTransferCountIsZero:1,&			dmaInterruptWhenDone:1,&			Synchronization:2,&			HighChannelPriority:1,&			TransmitDataRequest:1,&			Unused12:1,&			ChangeStartChannel:1,&			StartChannel:1,&			ByteOrWordTransfer:1  EncodedDeviceType	RECORD&			Drive0Type:4,&			Drive1Type:4,&			Drive2Type:4,&			Drive3Type:4;  EncodedDiskDriveType : TYPE = MACHINE DEPENDENT { NoDiskDrive(0), sa800DiskDrive(1), anyFloppyDiskDrive(2), sa850DiskDrive(3), sa455DiskDrive(4), sa465DiskDrive(5), (15) }NoDiskDrive		EQU	0sa800DiskDrive		EQU	1anyFloppyDiskDrive	EQU	2sa850DiskDrive		EQU	3sa455DiskDrive		EQU	4sa465DiskDrive		EQU	5;  EncodedSectorLengthType : TYPE = MACHINE DEPENDENT { x128(0), x256(1), x512(2), x1024(3), x2048(4), x4096(5), xIllegal(6) }x128		EQU	0x256		EQU	1x512		EQU	2x1024		EQU	3x2048		EQU	4x4096		EQU	5xIllegal	EQU	6;  ExtendedFDCcommandType    NullCommand			EQU	0    FormatTrack			EQU	1    ReadData			EQU	2    ReadDeletedData		EQU	3    ReadID			EQU	4    ReadTrack			EQU	5    Recalibrate			EQU	6    ScanEqual			EQU	7    ScanHighOrEqual		EQU	8    ScanLowOrEqual		EQU	9    Seek			EQU	10    SenseDriveStatus		EQU	11    SenseInterruptStatus	EQU	12    Specify			EQU	13    WriteData			EQU	14    WriteDeletedData		EQU	15;;  fdcCommandRecord		STRUC    fdcCode			DB	?    DataTransferCode		DB	?    anExtraByte			DB	?    MustWaitForInterrupt	DB	?    NumberOfCommandBytes	DB	?    NumberOfCommandBytesWritten	DB	?    CommandBytes		DB	10	DUP	(?)    NumberOfResultBytes		DB	?    NumberOfResultBytesRead	DB	?					; direct from FDC    ResultBytes			DB	8	DUP	(?)			; direct from FDC  fdcCommandRecord		ENDS;  fdcMainStatusRegister RECORD&			RequestForMaster:1,&			DataInputOutput:1,&			nonDMAmode:1,&			fdcBusy:1,&			DiskDrive3busy:1,&			DiskDrive2busy:1,&			DiskDrive1busy:1,&			DiskDrive0busy:1;;;  fdcStatusRegister0Type RECORD&			InterruptType:2,&			SeekEnd:1,&			EquipmentCheckError:1,&			NotReadyError:1,&			HeadAddress:1,&			DriveNumber:2;;;  fdcStatusRegister1Type RECORD&			EndOfTrackError:1,&			NotUsed1:1,&			DataError:1,&			OverRunError:1,&			NotUsed2:1,&			SectorNotFoundError:1,&			WriteProtectError:1,&			MissingAddressMarkError:1;;;  fdcStatusRegister2Type RECORD&			NotUsed0:1,&			ControlMark:1,&			DataErrorInDataField:1,&			WrongCylinder:1,&			ScanEqualHit:1,&			ScanNotSatisfied:1,&			BadCylinder:1,&			MissingAddressMarkInDataField:1;;;  fdcStatusRegister3Type RECORD&			Fault:1,&			WriteProtected:1,&			Ready:1,&			Track0:1,&			TwoSided:1,&			theHeadAddress:1,&			theDriveNumber:2;;;;  FDC Command Five-Bit Constants;;;   fdcFormatTrackCommand			EQU	0DH  fdcReadDataCommand			EQU	06H  fdcReadDeletedDataCommand		EQU	0CH  fdcReadIDCommand			EQU	0AH  fdcReadTrackCommand			EQU	02H  fdcRecalibrateCommand			EQU	07H  fdcScanEqualCommand			EQU	11H  fdcScanHighOrEqualCommand		EQU	1DH  fdcScanLowOrEqualCommand		EQU	19H  fdcSeekCommand			EQU	0FH  fdcSenseDriveStatusCommand		EQU	04H  fdcSenseInterruptStatusCommand	EQU	08H  fdcSpecifyCommand			EQU	03H  fdcWriteDataCommand			EQU	05H  fdcWriteDeletedDataCommand		EQU	09H  FillerByteForFormatting	EQU	0F6H;<<;  IOCB General Structure =;  [;    Driver/Head Shared Memory;    PrivateHeadContext;    Head/Handler Shared Memory;    Head/Handler/Controller Shared Memory;    Head/Controller Shared Memory;  ] ;;>>;;;  MaxfdcCommandsInIOCB		EQU	3;;;  IOCB				STRUC    operation			DW	8	DUP	(?)		; FloppyDiskFace.Operation    GeneralizedFDCOperation	DB	?    ExtraByte			DB	?    theContext			DW	?    PrivateHeadStuff		DB	?    CurrentTryCount		DB	?    OperationIsQueued		DB	?				; OperationStateRecord.IsQueued  a BOOLEAN    OperationState		DB	?				; OperationStateRecord.OperationState  an OperationStateType    NextIOCB			DW	2	DUP	(?)		; DoveInputOutput.OpieAddress    DataAddress			DW	2	DUP	(?)		; DoveInputOutput.OpieAddress    ActualClientCondition	DW	3	DUP	(?)		; DoveInputOutput.ClientCondition  -- for Up Notify    FinalStateOfFDC		DB	?				; fdcMainStatusRegister    SpecifyBeforeProcessing	DB	?    PCEResetFDCFlag		DB	?    PCEStartMotorFlags		DB	?    ResetFDCBeforeProcessing	DB	?    RecalibrateBeforeProcessing	DB	?    DaDriveNumber		DB	?    FDCHung			DB	?    TotalBytesToTransfer	DW	?    TotalBytesActuallyTransfered	DW	?    CounterControlRegister	DW	?    FirstDMAtransferCount	DW	?    FirstDMAcontrolWord		DW	?    NumberOfMiddleDMAtransfers	DW	?    MiddleDMAtransferCount	DW	?    MiddleDMAcontrolWord	DW	?    LastDMAtransferCount	DW	?    LastDMAcontrolWord		DW	?    FinalDMACount		DW	?    IncrementDataPointer	DB	?    TimeoutOccurred		DB	?    NumberOfFDCCommands		DW	?    CurrentFDCCommand		DW	?    fdcCommands			DB	MaxfdcCommandsInIOCB * SIZE(fdcCommandRecord)	DUP (?)	; fdcCommandRecord	5	DUP (<>)  IOCB				ENDS;;;;  IOCBPtr : TYPE = LONG POINTER TO IOCB ;;;;  MaxNumberOfDiskDrives		EQU	4;;;  OperationStateType;  OperationDoesNotExist		EQU	0  OperationInvalid		EQU	1  OperationBuilt		EQU	2  OperationWaiting		EQU	3  OperationInProgress		EQU	4  OperationAborted		EQU	5  OperationCompleted		EQU	6  OperationFailed		EQU	7;;;  Port80ControlWordRecord	RECORD&			EnableMainMembory:1,&			EnableTimerZero:1,&			FDDMotorOn:1,&			FDDinUse:1,&			AllowTimerTC:1,&			FDDLowSpeed:1,&			SelectChAIntClk:1,&			EnableDCEClk:1,&			DriveSelect3:1,&			DriveSelect2:1,&			DriveSelect1:1,&			DriveSelect0:1,&			Select250KbDataRate:1,&			PreCompensation:3;;sa455HeadLoadTimePlusNotInDMAmode	EQU	0AHsa455onDriveZero	EQU	0011100000011010Bsa455Port80ControlWord			EQU	380AHsa455StepRateTimePlusHeadUnloadTime	EQU	0D1HStartCounter		EQU	0C007HStopCounter		EQU	04004HStartDMARead		EQU	0A266HStartDMAWrite		EQU	16A6HStopDMA			EQU	0204H;;;; of FloppyIOFaceDove.asm - for stupid VAX = FlopFace.asm;;;