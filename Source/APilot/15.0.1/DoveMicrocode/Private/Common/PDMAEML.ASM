$DEBUG MOD186$PAGELENGTH (72)$PAGEWIDTH  (136);Copyright (C) 1984,1985 by Xerox Corporation. All rights reserved.;PDMAEml.asm;Code to handle DMA related IN's/OUT's. This code is distributed in the Dispatcher.;-- last edited by:;-- JPM   	13-Aug-85 17:03:13	: Separate PCE into several handlers;-- JPM   	12-Aug-85 12:17:08	: Change IOPEInRAM alignment to WORD;-- JPM   	 9-Aug-85 16:10:42	: Opie redesign conversion;-- AGK   	20-May-85 15:34:51	: Removed PCEMacro.asm;-- HNH		 4-Dec-84 13:09:53 	: Updated to Opie16 	NAME	PDMAEmulator;--------------------------------------------------------------------------------$NOLIST$INCLUDE	(HardDefs.asm)$INCLUDE	(IOPDefs.asm)$INCLUDE	(PCEDefs.asm)$INCLUDE	(IOPMacro.asm)$LISTEXTRN	PCEDMAHandlerID: ABS;--------------------------------------------------------------------------------PCEDMAIOR		SEGMENT		COMMON ; Declared in the DMA FCBEXTRN	pceDMA80:	BYTEEXTRN	pceDMAData:	BYTEEXTRN	pceDMAControl:	BYTEEXTRN	pceDMAToggle:	WORDPCEDMAIOR		ENDSPCEDispatcherIOR	SEGMENT		COMMON 	ASSUME	DS:PCEDispatcherIOR	;for now, all procs called from dispatcherEXTRN	ioTrappedAddress: WORDEXTRN	ioTrappedData: WORDPCEDispatcherIOR	ENDS;--------------------------------------------------------------------------------PUBLIC	DMAController, DMAPages;--------------------------------------------------------------------------------IOPEInRam	SEGMENT	WORD PUBLIC		ASSUME CS: IOPEInRam		;--------------------------------------------------------------------------------; Address is in the range 0 to FDMAController	PROC	NEAR	%EstablishHandlerAccess	(PCEDMAHandlerID)	ASSUME	ES:PCEDMAIOR	MOV	AL, BYTE PTR ioTrappedData ; get the OUT data	MOV	BX,ioTrappedAddress	;get the address	AND	BX, pLowNyble	;isolate low nyble	CMP	BL,7	; OUTs in the 0-7 range?	JG	Addr8ToFAddr0To7:; OUT locations 0 to 7	SHL	BL,1			; Multiply address by 2	MOV	SI,pceDMAToggle		; set odd/even byte	MOV	pceDMAData[BX+SI],AL	; Store into the DMA array	XOR	SI,1			; toggle the SI value	MOV	pceDMAToggle,SI	RETAddr8ToF:; OUT loactions 8 to F	CMP	BL,0CH	; out to port C ?	JNE	NotPortC	XOR	AX,AX	MOV	pceDMAToggle,AX	; Reset DMA toggle	RET	NotPortC:	SUB	BL,8	;scale addr to the 0-7 range	MOV	pceDMAControl[BX],AL	; store into the DMA control array	RET	ASSUME	ES:NOTHINGDMAController	ENDP;	;--------------------------------------------------------------------------------; DMAPages;--------------------------------------------------------------------------------DMAPages	PROC	NEAR;Address in the range 80-8FH	%EstablishHandlerAccess	(PCEDMAHandlerID)	ASSUME	ES:PCEDMAIOR	MOV	AL, BYTE PTR ioTrappedData ; get the OUT data	MOV	BX,ioTrappedAddress	;get the address	AND	BX, pLowNyble	;isolate low nyble	CMP	BL,3	; OUTs in the 0-3 range?	JG	DMAPagesEnd; Addr80To83; OUT loactions 80 to 83	MOV	pceDMA80[BX],AL	; store into the DMA control arrayDMAPagesEnd:	RET	ASSUME	ES:NOTHINGDMAPages	ENDP;;--------------------------------------------------------------------------------		IOPEInRam	ENDS		END