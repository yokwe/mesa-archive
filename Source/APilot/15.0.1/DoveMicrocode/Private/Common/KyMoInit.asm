;KyMoInit.asm     19-Sep-85  9:57:07;Copyright (C) 1984, 1985 by Xerox Corporation. All rights reserved.;--stored as:	KyMoInit.asm;--created by:	AMR    ;--created on:	17-Dec-84 14:34:52;;--last edited by:	JAC    	 2-Mar-87 11:37:25 fix for Japanese keyboards;--last edited by:	JAC    	 2-Dec-85 13:35:06 get rid of control z;--last edited by:	JPM    	Initialize KBbase to all 1s.;--last edited by:	JPM    	Use GetHandlerAccess for location independence.;--last edited by:	JPM    	Opie redesign conversion.;--last edited by:	AMR    	Added code for the Menu Mouse button.;--;;	NAME	KyMoInit$NOLIST$INCLUDE	(IOPDefs.asm)$INCLUDE	(IOPMacro.asm)$INCLUDE	(RAMHands.asm)$LIST%*DEFINE(Handler(name,id,initProcAction))(%IF (%EQS (%name,KeyBoardAndMouse)) THEN (KeyBoardAndMouseHandlerID	EQU	%id) FI)$SAVE$GENONLY			%HandlersLinked$RESTORE;	KeyBoardAndMouseIOR	SEGMENT		COMMON					EXTRN			KBbase: BYTE	EXTRN			KBIndex: BYTE	EXTRN			ConvertKeyCodeToBit: BYTE		KeyBoardAndMouseIOR	ENDS		IOPEInRAM        	SEGMENT   PUBLIC	;RAM	Assume			CS:IOPEInRAMPUBLIC		KyMoInitProc		KyMoInitProc	PROC	FAR					%EstablishHandlerAccess	(KeyBoardAndMouseHandlerID)		ASSUME	ES:KeyBoardAndMouseIOR		MOV	CX, 18		;The keyboard array (18 Bytes) must be		MOV	BX, 0		;initialized to all keys up (bits = 1)	SetKb:	MOV	ES: KBbase [BX], 0FFH		INC	BX		LOOP	SetKb		MOV	CX, 256		MOV	BX, 0			SetTable:		MOV	AL, CS: KBIndexInit [BX]		MOV	ES: KBIndex [BX], AL		INC	BX		LOOP	SetTable		MOV	ES: ConvertKeyCodeToBit, 0FFH		RET	KyMoInitProc	ENDP	;  The index table provides a table lookup between the keyboard event byte,;     and the KeyMap byte index.;   00H:KBIndexInit db	0EH,01H,01H,01H	;**1**, Point, Adjust, Menu	db	00H,06H,04H,04H	;bullet(1) ,one(2), two(3), three(4)	db	02H,02H,02H,02H	;four(5), five(6), six(7), seven(8)	db	08H,04H,03H,03H	;eight(9), nine(10), zero(11), Dash(12);   10H:	db	09H,03H,06H,04H	;equal(13), RIGHTTAB(14), PARA TAB(15), q(16)	db	04H,02H,08H,08H	;w(17), e(18), r(19), t(20)	db	08H,02H,04H,05H	;y(21), u(22), i(23), o(24)	db	03H,09H,05H,07H	;p(25), left bracket(26), right bracket(27), RETURN(28);   20H:	db	0EH,04H,04H,02H	;**3**, a(30), s(31), d(32)	db	06H,08H,08H,06H	;f(33), g(34), h(35), j(36)	db	03H,05H,07H,00H	;k(37), l(38), semi colon(39), SingleQuote(40)	db	0DH,07H,0DH,07H	;DoubleQuote(41), LEFT SHIFT(42), less than(43), z(44);   30H:	db	05H,06H,02H,06H	;x(45), c(46), v(47), b(48)	db	08H,08H,05H,07H	;n(49), m(50), coma(51), period(52)	db	03H,09H,05H,0BH	;slash(53), RIGHT SHIFT(54), KEYBOARD(61), LEFT SPACE KEY*(57)	db	0DH,09H,0AH,0BH	;LEFT CENTRE KEY*(58), SPACE KEY(59), RIGHT SPACE*(60), DEFINE/EXPAND(56);   40H:	db	01H,01H,01H,01H	;ADD*(R1),SUBTRACT FROM*(R2), MULTIPLY BY*(R3), DIVIDE BY*(R4)	db	01H,0AH,0AH,0AH	;CLEAR*(R5), 7*(R6), 8*(R7), 9*(R8) 	db	07H,0AH,0AH,0AH ;ENTER/SKIP/NEXT(R9), 4*(R10), 5*(R11), 6*(R12)	db	0EH,0BH,00H,00H	;**4**(R13), 1*(R14), 2*(R15), 3*(R16);   50H:	db	0CH,0DH,0DH,0DH	;0*(R17), RIGHT SHIFT*(55), PERIOD*(R19), COMMA*(R20)	db	09H,07H,09H,0BH	;STOP(L1), DELETE(L2), UNDO(L3), AGAIN(L4)	db	0BH,0BH,0EH,03H	;FIND(L5), COPY(L6), **5**, SAME/PASTE(L7)	db	09H,05H,06H,0EH	;MOVE(L8), OPEN(L9), PROPS(L10), **6**;   60H:	db	0EH,0EH,0FH,0CH	;**7**, **8**, **9**, CENTRE(T1)       	db	0CH,0CH,00H,00H	;BOLD(T2), ITALICS(T3), CASE(T4), STRIKEOUT(T5)	db	0CH,00H,0DH,0AH	;UNDERLINE(T6), SUPER-SUB(T7), LARGER/SMALLER(T8), MARGINS(T9)	db	03H,09H,09H,0FH	;FONT(T10), LOCK/ON(29), UNLOCK/OFF(29), **10**	;   70H:	db	0FH,0FH,0FH,0FH	;**11**, **12**, **13**, **14**	db	0FH,0FH,10H,10H	;**15**, **16**, **17**, **18**	db	10H,10H,10H,10H	;**19**, **20**, **21**, **22**	db	10H,10H,11H,00H	;**23**, **24**, **25**, MOUSE CODE;  The mask table gives the bit mask within the KeyMap byte.;   00H:	db	80H,04H,02H,01H	;**1**, Point, Adjust, Menu	db	40H,80H,40H,80H	;bullet(1) ,one(2), two(3), three(4)	db	40H,80H,20H,08H	;four(5), five(6), six(7), seven(8)	db	04H,02H,80H,20H	;eight(9), nine(10), zero(11), Dash(12);   10H:	db	10H,01H,20H,10H	;equal(13), RIGHTTAB(14), PARA TAB(15), q(16)	db	20H,10H,80H,40H	;w(17), e(18), r(19), t(20)	db	10H,02H,01H,40H	;y(21), u(22), i(23), o(24)	db	10H,20H,04H,08H	;p(25), left bracket(26), right bracket(27), RETURN(28);   20H:	db	20H,04H,08H,04H	;**3**, a(30), s(31), d(32)	db	10H,20H,08H,02H	;f(33), g(34), h(35), j(36)	db	40H,20H,10H,01H	;k(37), l(38), semi colon(39), SingleQuote(40)	db	08H,40H,10H,80H	;DoubleQuote(41), LEFT SHIFT(42), less than(43), z(44);   30H:	db	80H,04H,01H,01H	;x(45), c(46), v(47), b(48)	db	02H,01H,10H,20H	;n(49), m(50), coma(51), period(52)	db	08H,08H,01H,80H	;slash(53), RIGHT SHIFT(54), KEYBOARD(61), LEFT SPACE KEY*(57)	db	02H,40H,02H,04H	;LEFT CENTRE KEY*(58), SPACE KEY(59), RIGHT SPACE*(60), DEFINE/EXPAND(56);   40H:	db	80H,40H,20H,10H	;ADD*(R1),SUBTRACT FROM*(R2), MULTIPLY BY*(R3), DIVIDE BY*(R4)	db	08H,40H,20H,10H	;CLEAR*(R5), 7*(R6), 8*(R7), 9*(R8) 	db	01H,08H,04H,01H	;ENTER/SKIP/NEXT(R9), 4*(R10), 5*(R11), 6*(R12)	db	10H,02H,04H,02H	;**4**(R13), 1*(R14), 2*(R15), 3*(R16);   50H:	db	20H,01H,40H,20H	;0*(R17), RIGHT SHIFT*(55), PERIOD*(R19), COMMA*(R20)	db	04H,02H,01H,10H	;STOP(L1), DELETE(L2), UNDO(L3), AGAIN(L4)	db	20H,40H,08H,02H	;FIND(L5), COPY(L6), **5**, SAME/PASTE(L7)	db	02H,02H,08H,04H	;MOVE(L8), OPEN(L9), PROPS(L10), **6**;   60H:	db	02H,01H,80H,40H	;**7**, **8**, **9**, CENTRE(T1)       	db	10H,08H,10H,08H	;BOLD(T2), ITALICS(T3), CASE(T4), STRIKEOUT(T5)	db	04H,20H,80H,80H	;UNDERLINE(T6), SUPER-SUB(T7), LARGER/SMALLER(T8), MARGINS(T9)	db	04H,80H,80H,40H	;FONT(T10), LOCK/ON(29), UNLOCK/OFF(29), **10**;   70H:	db	20H,10H,08H,04H	;**11**, **12**, **13**, **14**	db	02H,01H,80H,40H	;**15**, **16**, **17**, **18**	db	20H,10H,08H,04H	;**19**, **20**, **21**, **22**	db	02H,01H,80H,00H	;**23**, **24**, **25**, MOUSE CODE	IOPEInRAM	ENDS			END