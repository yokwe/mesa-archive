;Copyright (C) 1984, 1985 by Xerox Corporation. All rights reserved.;-- stored as [Iris]<WMicro>Dove>VMMDefs.asm;-- It uses IORegion locations of the bootstrap handler.;;-- last edited by:;--	KEK			22-Apr-87 11:31:14	;add dovePROMSize to support expanded IOR during debugging.;--	kek			14-Apr-87 15:31:38	;add Daybreak-only MDS relief.  For Daisy this is still non-MDS-relieved!;--	RDH			30-Jan-87 18:07:37	;Change fatDaisyDisplayMemSize to 1024 from 256, and add fatDaisyDisplayDescMask and slimDaisyDisplayDescMask to not map Display bank correctly.;--	KEK			27-May-86 14:12:41	;add *displayEndPage defs.;--	KEK			 6-May-86 21:09:52	;update Daisydefs to current.;--	JPM			 3-Aug-85  9:01:07	;Add numberOfPagesIn256KbBank and numberOfPagesInOneMb.;--	RDH			 2-Aug-85 12:33:23	;Added hardwareMaxRealPage to fix MEB prob.;--	JPM			29-Jul-85  9:58:31	;Add labels to floppy germ request STRUC.;--	RDH			24-Jul-85 15:03:18	;Removed magic numbers from floppy germ request.;--	JMM			22-Jul-85 15:02:29	;Fixed floppy germ request.;--	JMM			20-Jun-85 15:54:51	;Alt etherboot support.;--	JPM			29-May-85 12:48:13	;Diagnostic boot changes.;--	JMM			 4-Apr-85 15:46:44	;Misc. updates.;--	JMM			 4-Jan-85 17:24:58	;First release.;NAME			VMMDefs;--------------------------------------------------------------------------------;;For both Daisy and Daybreak, the virtual memory map is hardwired;at main memory location 0-jmm:84-12-27:FixInfo. Also the IORegion is loaded in a well;known real and virtual memory location (i.e. if it is decided to ;load it into real memory location "x" and virtual memory location;"y", then the virtual memory map has to show that virtual memory ;location "y" is mapped to real memory location "x". The Germ as ;stipulated in the PrinceOps gets loaded starting at virtual page ;256 and its request section starts at virtual page 288.germVirtualPage		EQU	0001HgermRequestVirtualPage	EQU	0003H		ethernetBootFileMask	EQU	00040OgftVirtualPage		EQU	0200H			;used by MDS-reliefloaderVirtualPage	EQU	germVirtualPage - 1	;used by MDS-relieflocation		EQU	0value			EQU	2	;Ethernet, Disk, Floppy, RS232C boot constants locations:;--------------------------------------------------------sFirstGermRequest			EQU	00A0H	;{start of germ request in SD}Request@version				EQU	(sFirstGermRequest + 00H)*2	;double CP addressRequest@action				EQU	(sFirstGermRequest + 01H)*2	;value to get IOPRequest@location@deviceType		EQU	(sFirstGermRequest + 02H)*2	;address.Request@location@devOrd			EQU	(sFirstGermRequest + 03H)*2ethernetBootFileNumber0@location	EQU	(sFirstGermRequest + 04H)*2ethernetBootFileNumber1@location	EQU	(sFirstGermRequest + 05H)*2ethernetBootFileNumber2@location	EQU	(sFirstGermRequest + 06H)*2ethernetNetworkNumber0@location		EQU	(sFirstGermRequest + 07H)*2ethernetNetworkNumber1@location		EQU	(sFirstGermRequest + 08H)*2ethernetHostNumber0@Request@location	EQU	(sFirstGermRequest + 09H)*2ethernetHostNumber1@Request@location	EQU	(sFirstGermRequest + 0AH)*2ethernetHostNumber2@Request@location	EQU	(sFirstGermRequest + 0BH)*2ethernetSocket@Request@location		EQU	(sFirstGermRequest + 0CH)*2Request@location@cylinder@diskFileID@da	EQU	(sFirstGermRequest + 09H)*2Request@location@headSector@diskFileID@da EQU	(sFirstGermRequest + 0AH)*2Request@floppyLocation@cylinder	EQU	(sFirstGermRequest + 0BH)*2Request@floppyLocation@headSector EQU	(sFirstGermRequest + 0CH)*2;Ethernet, Disk, Floppy, RS232C boot constants:;----------------------------------------------RequestVersion				EQU	03456ObootPhysicalVolume			EQU	2	;request action for diskbootFloppyPhysicalVolume		EQU	0	;request action for floppyinLoad					EQU	0	;request action for ethernetgermEthernet				EQU	6	;boot device for ethernetgermPilotDisk				EQU	64	;boot device for diskDeviceTypes@sa800			EQU	1	;boot device for floppyethernetDeviceOrdinal			EQU	0ethernetBootFileNumberHigh		EQU	000000OethernetBootFileNumberMiddle		EQU	125000OethernetBootFileNumberLow		EQU	004040OethernetBootNetworkNumberHigh		EQU	0ethernetBootNetworkNumberLow		EQU	0ethernetHostNumberHigh			EQU	0FFFFHethernetHostNumberMiddle		EQU	0FFFFHethernetHostNumberLow			EQU	0FFFFHethernetBootSocket			EQU	0000AHonlyFloppy				EQU	0;----------------------------;The parameters below are byte-swapped for Mesa.%*DEFINE	(ByteSwap	(wordToSwap))		(%wordToSwap SHL 8 OR %wordToSwap SHR 8);-----------------------------------------------DiskGermVariables	STRUC			DW	Request@version, %ByteSwap (RequestVersion)			DW	Request@action, %ByteSwap (bootPhysicalVolume)			DW	Request@location@deviceType, %ByteSwap (germPilotDisk)			DW	Request@location@devOrd, %ByteSwap (0)DiskGermVariables	ENDS;----------------------------EthernetGermVariables	STRUC			DW	Request@version, %ByteSwap (RequestVersion)			DW	Request@action, %ByteSwap (inLoad)			DW	Request@location@deviceType, %ByteSwap (germEthernet)			DW	Request@location@devOrd, %ByteSwap (ethernetDeviceOrdinal)bootFileNumberHigh	DW	ethernetBootFileNumber0@location, %ByteSwap (ethernetBootFileNumberHigh)bootFileNumberMiddle	DW	ethernetBootFileNumber1@location, %ByteSwap (ethernetBootFileNumberMiddle)bootFileNumberLow	DW	ethernetBootFileNumber2@location, %ByteSwap (ethernetBootFileNumberLow)			DW	ethernetNetworkNumber0@location, %ByteSwap (ethernetBootNetworkNumberHigh)			DW	ethernetNetworkNumber1@location, %ByteSwap (ethernetBootNetworkNumberLow)			DW	ethernetHostNumber0@Request@location, %ByteSwap (ethernetHostNumberHigh)			DW	ethernetHostNumber1@Request@location, %ByteSwap (ethernetHostNumberMiddle)			DW	ethernetHostNumber2@Request@location, %ByteSwap (ethernetHostNumberLow)			DW	ethernetSocket@Request@location, %ByteSwap (ethernetBootSocket)EthernetGermVariables	ENDS;----------------------------FloppyGermVariables	STRUC			DW	Request@version, %ByteSwap (RequestVersion)			DW	Request@action, %ByteSwap (bootFloppyPhysicalVolume)			DW	Request@location@deviceType, %ByteSwap (DeviceTypes@sa800)			DW	Request@location@devOrd, %ByteSwap (onlyfloppy)bootFileCylinder	DW	Request@floppyLocation@cylinder, 0bootFileHeadAndSector	DW	Request@floppyLocation@headSector, 0FloppyGermVariables	ENDS;--------------------------------------------------------------------------------; ;;;-----------------------;BootTimeVariables	STRUC		;device			DW	?	;1-Disk, 2-Ethernet, 3-Floppy, 4-RS232C.;mode			DW	?	;0-Normal, 1-Fast boot ;showUserInterface	DW	?	;0-yes, #0-no.;bootRetryCount		DW	?	;initially 0, incremented per failure;reincarnationFlag	DW	?	;For task reinitialization - 0 => tasks					;to use local RAM otherwise main memory.;emulatorID		DW	3 DUP(?) ;Initially 0, updated by boot executive.;loaderID		DW	3 DUP(?) ;Initially 0, updated by boot executive.;diagnosticsType	DW	?	;Initialized at boot-time. 0 => short					;diagnostics - user has set EEPROM to					;indicate desire for a diagnostics boot.					;#0=> long diagnostics boot - user has					;manually requested diagnostics at boot					;time!;BootTimeVariables	ENDS			;-----------------------;Device types:;-------------disk			EQU	1floppy			EQU	2ethernet		EQU	3rs232C			EQU	4;-----------------------;Boot types:;-----------normal			EQU	0diagnostic		EQU	1;-----------------------;Virtual Memory Constants:maximumPageNumber		EQU	2000H	;A 4Mbyte machine has this many pages.pageSizeInBytes			EQU	0200H	;That is 512 bytes per page whichpageSizeInWords			EQU	0100H	;is 256 words per page.;firstDovePage			EQU	0	;All Dove Main memory start atfirstDovePage			EQU	1024	;jmm:85-01-17:tmpFIX!!!firstDaisyPage			EQU	0firstSlimDaybreakPage		EQU	1024						fatDaybreakVMMBasePage		EQU	1024	;In decimal page numbers.fatDaisyVMMBasePage		EQU	2048	;1M from IOPside = 0 from SChipside.slimDaisyVMMBasePage		EQU	0									fatDaybreakIORegionBasePage	EQU	1312	;In decimal page numbers.slimDaybreakIORegionBasePage	EQU	1312	fatDaisyIORegionBasePage	EQU	2336	;In decimal page numbers.			slimDaisyIORegionBasePage	EQU	288									doveFirstBankCeiling		EQU	256	;jmm:84-12-10In decimal page dovePROMSize			EQU	32	;In decimal page numbersdukePROMCodeSize		EQU	dovePROMSize+1doveSlimIORegionSize		EQU	64	;jmm:84-12-10:numbers.doveFatIORegionSize		EQU	doveSlimIORegionSize+dovePROMSizeslimIORegionFirstVirtualPage	EQU	doveFirstBankCeiling-doveSlimIORegionSizefatIORegionFirstVirtualPage	EQU	doveFirstBankCeiling-doveFatIORegionSize						;jmm:84-12-10:fixAfterDemo.						doveDisplayBasePage		EQU	0	;In decimal page numbers.fatDaybreakDisplayBasePage	EQU	0	;In decimal page numbers.slimDaybreakDisplayBasePage	EQU	0	;jmm:84-12-04:UntilGAPmoves.fatDaisyDisplayBasePage		EQU	0slimDaisyDisplayBasePage	EQU	768;formula for the display-pages calculation taken from UserTerminalHeadDovebitsPerWord			EQU	16pagesFor19InchDisplay		EQU	(1152/bitsPerWord*861+pageSizeInWords-1)/pageSizeInWordspagesFor15InchDisplay		EQU	(832/bitsPerWord*633+pageSizeInWords-1)/pageSizeInWordsfatDaybreakDisplayMemSize	EQU	256	;In decimal page numbers.slimDaybreakDisplayMemSize	EQU	256				daisyDisplayMemSize		EQU	256				fatDaisyDisplayMemSize		EQU	1024	;Half a megslimDaisyDisplayMemSize		EQU	256fatDaisyDisplayDescMask		EQU	0FF00H  ;Half a megslimDaisyDisplayDescMask	EQU	0FF3FH  ;same size as Dybrk.fatDaybreakDisplayEndPage	EQU	fatDaybreakDisplayBasePage+fatDaybreakDisplayMemSizefatDaisyDisplayEndPage	EQU	fatDaisyDisplayBasePage+fatDaisyDisplayMemSizeslimDaisyDisplayEndPage	EQU	slimDaisyDisplayBasePage+slimDaisyDisplayMemSizefatDaisy			EQU	0fatDaybreak			EQU	0numberOfPagesIn64KbBank		EQU	128numberOfPagesIn256KbBank	EQU	512numberOfPagesInOneMb		EQU	2048hardwareMaxRealPage		EQU	numberOfPagesInOneMb * 4 - 1	;4 MB maxpageVacantMask			EQU  01100000B	;See "Sirius Microcode Reference"pagePresentMask			EQU  00000000B	;Version 1.0 Pp. 6-1 & 6-3.numberOfPagesPerMapRegAccess	EQU	100H	;Given that each map register numberOfPagesPerIndexRegAccess	EQU	80H	;points to 128Kb of memory and						;that an 80186 register can access						;at most 64Kb of memory.crossover64KbBank		EQU	01000H	;;--------------------------------------------------------------------------------;Convenience macros:;------------------- ;%*Define (MultiplyByTwo	(register))	(ROL	%register, 1)		