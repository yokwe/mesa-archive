$MOD186$PAGELENGTH (95)$PAGEWIDTH  (136);-- stored as [Iris]<WMicro>Dove>GermInit.asm;-- created on  28-Jan-85 14:47:51;-- last edited by:;--	kek		14-Apr-87 15:31:38	:add Daybreak-only MDS relief.  For Daisy this is still non-MDS-relieved!;--	JPM		12-Aug-85  9:15:12	:Change IOPEInRAM alignment to WORD.;--	JPM		26-Jul-85 13:40:25	;Get floppy boot file address from local RAM.;--	JMM		26-Jun-85 11:50:44	;Alt etherboot support.;--	JMM		16-Apr-85 18:03:17	;Fixed e'net device type.;--	JMM		 4-Apr-85 15:47:11	;First release.NAME			GermInit;--------------------------------------------------------------------------------;$NOLIST$INCLUDE		(HardDefs.asm)	$INCLUDE		(IOPDefs.asm)	$INCLUDE		(IOPMacro.asm)$INCLUDE		(VMMDefs.asm)$LIST			;--------------------------------------------------------------------------------OpieIOR			SEGMENT		COMMONEXTRN			mesaPageMapOffset: WORDEXTRN			mesaPageMapSegment: WORDOpieIOR			ENDS;--------------------------------------------------------------------------------IOPELocalRAM		SEGMENT	AT 0EXTRN			device: WORDEXTRN			baseEthernetFileID: WORDEXTRN			floppyBootFileAddress: WORDIOPELocalRAM		ENDS;--------------------------------------------------------------------------------;********************************************************************************IOPEInRAM		SEGMENT		WORD PUBLICPUBLIC			GermInit 					Assume CS:IOPEInRAM;--------------------------------------------------------------------------------;Local Constants:;----------------;Register equates:request			EQU	SI;Local Variables:;----------------											germRequestInit		DW	unKnownInitRequest, DiskInitRequest, FloppyInitRequest			DW	EthernetInitRequest, EthernetInitRequest			diskGermRequest		DiskGermVariables <>ethernetGermRequest	EthernetGermVariables <>floppyGermRequest	FloppyGermVariables <>			;--------------------------------------------------------------------------------			;-- Virtual Memory Initialization:;--------------  Assume the following upon entry into this procedure:;-------------- ;--------------|  								|;--------------|								|;--------------|								|;--------------|--------							|;--------------| Upon exiting this procedure the following will be true:	|;--------------|								|;--------------|								|;--------------------------------------------------------------------------------GermInit		PROC	NEARInitializeGermParamaters:			ASSUME	DS:OpieIOR			IN	AX, machineIDPort		;the following MDS-relief stuff			AND	AX, machineIDMask		; is for Daybreak only.			CMP	AX, Daisy			JE	InitializeCommonGermParamatersInitializeDaybreakGermParamaters:			MOV	ES, mesaPageMapSegment		;The germ¹s GFT is originally loaded			MOV	DI, mesaPageMapOffset		;into the virtual page before the germ.			MOV	AX, ES:[DI]+2*loaderVirtualPage	;We must exchange its real page entry			XCHG	AX, ES:[DI]+2*gftVirtualPage	;with that of the GFT location			MOV	ES:[DI]+2*loaderVirtualPage, AX	;before Mesa starts running.InitializeCommonGermParamaters:			MOV	AX, IOPELocalRAM		;We want to find out what device			MOV	ES, AX				;we are booting from and hence we			MOV	SI, ES: device			;need to look at boot variables			%MultiplyByTwo (SI)			;to know what device we booted from			MOV	DX, germRequestVirtualPage	;but first let us establish access			XOR	CX, CX			MOV	CH, mesaLogicalPageOpieAddress	;to the germ request section before			%EstablishIOPAccess(generalMapRegister,CX-DX) ;initializing its variables. 			MOV	DX, DI							CALL	WORD PTR CS: germRequestInit[SI] ;GermInitFinished:	RET GermInit		ENDP;-----------------------unKnownInitRequest:	RETDiskInitRequest:	MOV	CX, ((SIZE DiskGermVariables)/4)				MOV	request, OFFSET diskGermRequest				JMP	GermInitRequest			EthernetInitRequest:				MOV	AX, IOPELocalRAM			PUSH	ES			MOV	ES, AX			MOV	AX, ES: baseEthernetFileID			MOV	CS: ethernetGermRequest.bootFileNumberHigh+2, AX			MOV	AX, ES: baseEthernetFileID+2			MOV	CS: ethernetGermRequest.bootFileNumberMiddle+2, AX			MOV	AX, ES: baseEthernetFileID+4			MOV	CS: ethernetGermRequest.bootFileNumberLow+2, AX			OR	CS: ethernetGermRequest.bootFileNumberLow+2, %ByteSwap (ethernetBootFileMask)			POP	ES								MOV	CX, ((SIZE EthernetGermVariables)/4)				MOV	request, OFFSET ethernetGermRequest			JMP	GermInitRequest			FloppyInitRequest:	MOV	AX, IOPELocalRAM			PUSH	ES			MOV	ES, AX			MOV	AX, ES: floppyBootFileAddress			MOV	CS: floppyGermRequest.bootFileCylinder+2, AX			MOV	AX, ES: floppyBootFileAddress+2			MOV	CS: floppyGermRequest.bootFileHeadAndSector+2, AX			POP	ES								MOV	CX, ((SIZE FloppyGermVariables)/4)				MOV	request, OFFSET floppyGermRequest				JMP	GermInitRequestGermInitRequest:	MOV	DI, DX				;Whenever these values change, we			OR	DI, CS: [request][location]	;should reassemble this module to			MOV	AX, CS: [request][value]	;reflect the changes in MDS 0 which			MOV	ES: [DI], AX			;is where the Germ variables are.			ADD	request, 4			LOOP	GermInitRequest			;Look at the *GermVariables to see								;how this data structure is laid out.			RET;-----------------------												IOPEInRAM		ENDS			;********************************************************************************									END