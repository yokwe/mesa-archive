$! -- Copyright (C) 1987 by Xerox Corporation. All rights reserved.$!$! -- DazeLoad.com$!$! -- last edited by:$! $! -- JMA    11-Mar-87 10:23:49   ;created *8K file entries & added PPO$! -- JPM     2-Mar-87  8:49:48   ;Add GermInit assembly.$! -- RDH     4-Feb-87  8:21:10   ;Create.$!$!-- ASM files required:$!   RAMHInit.asm IOPDefs.asm OpieDefs.asm ROMBDefs.asm RAMHands.asm$!   MemHInit.asm GermInit.asm VMMDefs.asm$!   RAMHndsC.asm RAMHIntC.asm MemHIntC.asm$!$SET VERIFY$!$ASM86 RAMHInit.asm DEBUG$LINK86 STKSegs.lnk,IORSegs.lnk,RAMHInit.obj,RAMOpie.lnk,Parity.lnk,MesaUpDn.lnk,TTYHndlr.lnk TO Temp.lnk$LINK86 Temp.lnk,RS232Hdl.lnk,PCEHndlr.lnk TO RAMLoad.lnk$LOC86 RAMLoad.LNK TO RAMLoad.LOC ST(RAMInitialization) SS(IORegion(+1C4H)) PC(PURGE) RS(13B1H TO 3FFFH) AD(SM(IOPEINRAM(10000H)))$ASM86 MemHInit.asm DEBUG$ASM86 GermInit.asm DEBUG$LINK86 IOPLRAM.obj,STKSegs.lnk,IORSegs.lnk,MemHInit.obj,GermInit.obj,SysCnfig.lnk TO Temp.lnk$LINK86 Temp.lnk,PSOHndlr.lnk,PCEMmHdl.lnk,CPBerm.lnk,CDsplHdl.lnk TO MemLoad.lnk$LOC86 MemLoad.LNK TO MemLoad.LOC SS(IORegion(+1C4H)) PC(PURGE) RS(13B1H TO 3FFFH) AD(SM(IOPEINRAM(10000H)))$!$!$! *** Build pieces for MesaDaybreak8K and MesaDoveCnfigOnly$$! -- BUILD RAMINT8.OBJ / RAMLOAD8.LOC$!$ASM86 RAMHInt8.asm DEBUG$LINK86 STKSegs8.lnk,IORSegs8.lnk,RAMHInt8.obj,RAMOpie.lnk,Parity.lnk,-MesaUpDn.lnk,TTYHndlr.lnk TO Temp.lnk$LINK86 Temp.lnk,RS232Hdl.lnk,PCEHndlr.lnk TO RAMLoad8.lnk$!$! ***** WARNING - VAX LOCATER HANGS HERE *****$LOC86 RAMLoad8.LNK TO RAMLoad8.LOC -ST(RAMInitialization) -SS(IORegion(+1C4H)) -PC(PURGE) -RS(13B1H TO 3FFFH) -AD(SM(IOPEINRAM(10000H)))$!$! You should find 2 unresolved external references to ParityHandlerID$! in RAMLoad.mp2.  These are ok.  This is because the parity handler$! is linked into RAMLoad in order to reserve space for it.  However,$! the parity entry in RAMHands is commented out so that ParityHandlerID$! is never generated.  Since the parity handler is never called this$! reference will never be used.$!$! -- BUILD MEMHINT8.OBJ / MEMLOAD8.LOC$!$ASM86 MemHInt8.asm DEBUG$!$LINK86 IOPLRAM.obj,STKSegs8.lnk,IORSegs8.lnk,MemHInt8.obj,GermInit.obj,-SysCnfig.lnk TO Temp.lnk$LINK86 Temp.lnk,PPOHndlr.lnk,PCEMmHdl.lnk,CPBerm.lnk,CDsplHdl.lnk TO MemLoad8.lnk$!$! ***** WARNING - VAX LOCATER HANGS HERE *****$LOC86 MemLoad8.LNK TO MemLoad8.LOC -SS(IORegion(+1C4H)) -PC(PURGE) -RS(13B1H TO 3FFFH) -AD(SM(IOPEINRAM(10000H)))$!$! -- BUILD RAMHINTC.OBJ / RAMLOADC.LOC$!$ASM86 RAMHIntC.asm DEBUG$LINK86 STKSegs8.lnk,IORSegs8.lnk,RAMHIntC.obj,RAMOpie.lnk,GermInit.obj,-MesaUpDn.lnk,TTYHndlr.lnk TO Temp.lnk$LINK86 Temp.lnk,SysCnfig.lnk,Parity.lnk,CDsplHdl.obj,PPOHndlr.lnk TO RAMLoadC.lnk$!$! ***** WARNING - VAX LOCATER HANGS HERE *****$LOC86 RAMLoadC.LNK TO RAMLoadC.LOC -ST(RAMInitialization) -SS(IORegion(+1C4H)) -PC(PURGE) -RS(13B1H TO 3FFFH) -AD(SM(IOPEINRAM(10000H)))$!$! You should find 2 unresolved external references to ParityHandlerID$! in RAMLoad.mp2.  These are ok.  See the above comment for$! explanation.$!$! -- BUILD MEMHINTC.OBJ / MEMLOADC.LOC$!$ASM86 MemHIntC.asm DEBUG$!$LINK86 IOPLRAM.obj,STKSegs8.lnk,IORSegs8.lnk,MemHIntC.obj TO MemLoadC.lnk$!$! ***** WARNING - VAX LOCATER HANGS HERE *****$LOC86 MemLoadC.LNK TO MemLoadC.LOC -SS(IORegion(+1C4H)) -PC(PURGE) -RS(13B1H TO 3FFFH) -AD(SM(IOPEINRAM(10000H)))$!$! -- Now run RAMDebug.com$!$SET NOVERIFY$! -- Now run RAMDebug.com$!