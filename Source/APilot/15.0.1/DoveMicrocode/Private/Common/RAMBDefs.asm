;Copyright (C) 1984, 1985, 1987 by Xerox Corporation. All rights reserved.;-- IORegion locations for the boot handler.;-- stored as [Iris]<WMicro>Dove>RAMBDefs.asm;;-- last edited by:;--	JPM			  11-May-87  9:05:32	;Add new MP codes.;--	RDH			  26-Jan-87 19:38:32	;Add CSWordByteSize and fourKEEPromFormat.;--	KEK			   7-May-86  9:46:14	;update daisy constants.;--	RDH			  24-Oct-85 16:56:16	;Add device types defs.;--	kek			   4-Sep-85 14:28:38	;mp code definitions;--	JPM			  18-Jul-85 12:27:26	;Add bootDataBegins and uncomment BootJumpTable STRUC.;--	JMM			   2-Jul-85 17:38:06	;Increased normal load area.;--	JPM			  22-May-85  9:19:21	;Diagnostic boot changes.;--	JMM			  22-Apr-85 12:06:08	;Adjusted load area.;--	JMM			   4-Apr-85 10:40:07	;.;--	JMM			  28-Jan-85 18:28:27	;Add macro section.;--	JMM			  23-Jan-85 15:04:01	;Increase buffer size.;--	BKI/JMM			   9-Dec-84 20:03:43	;First release.;NAME			RAMBDefs;--------------------------------------------------------------------------------;;---------------------------------------------------------;Constants for STRUC definitions.;--------------------------------;Most things require a page (512 bytes) except Ethernet which has some overhead.;(one page + packet overhead + simple data overhead)maximumBootBufferSize	EQU	512+44+12;-----------------------BootBuffer		STRUCnextBootBuffer		DW	?	;We have to abe able to do the followingbootDataStart		DW	?	;SI_[BX].bootDataStart and have [BX][SI]bootDataEnd		DW	?	;point to data. Likewise for "bootDataEnd".bootData		DB	maximumBootBufferSize DUP(?)BootBuffer		ENDSbootDataBegins		EQU	bootData-nextBootBuffer;-----------------------BootJumpTable		STRUCstartRAMOpie		DW	?	;An IOP Start block will result in an IOPstartRAMOpieCS		DW	?	;address being saved here for later entry.iopEntry		DW	?iopEntryCS		DW	?processBootBlock	DW	?BootJumpTable		ENDS;-----------------------;BootTimeVariables	STRUC		;located in ROMBDefs.asm;;device			DW	?	;1-Disk, 2-Ethernet, 3-Floppy, 4-RS232C.;mode			DW	?	;0-Normal, 1-Fast boot.;showUserInterface	DW	?	;0-yes, #0-no.;bootRetryCount		DW	?	;initially 0, incremented per failure;reincarnationFlag	DW	?	;For task reinitialization - 0 => tasks;					;to use local RAM otherwise main memory.;emulatorID		DW	3 DUP(?) ;Initially 0, updated by boot executive.;loaderID		DW	3 DUP(?) ;Initially 0, updated by boot executive.;diagnosticsType	DW	?	;Initialized at boot-time. 0 => short					;diagnostics - user has set EEPROM to					;indicate desire for a diagnostics boot.					;#0=> long diagnostics boot - user has					;manually requested diagnostics at boot					;time!;;BootTimeVariables	ENDS;-----------------------;Boot types:;-----------normal			EQU	0diagnostic		EQU	1;-----------------------;Device types:;-----------disk			EQU	1floppy			EQU	2ethernet		EQU	3experimental		EQU	4rs232C			EQU	4;--------------------------------------------------------------------------------;Booting error numbers:;------------------- ;bootingError	EQU	-1unKnownBootBlock EQU	0303HnoRAMStartAddress EQU	0404H;-----------------------;Other constants:EOF			EQU	0FFHhighByteMask		EQU	0FF00HlowByteMask		EQU	0FFHoneBit			EQU	1onePage			EQU	512	;In bytes.diagnosticsLoadAreaSize	EQU	2000HnormalLoadAreaSize	EQU	2000H	;Too big!.loaderTimeout		EQU	04H;Control Store constants:fourKEEPromFormat	EQU	10HCSWordByteSize		EQU	6;Daybreak:daybreakBankRegister	EQU	0E000HdaybreakCSPortMask	EQU	08000HnextCSByte		EQU	01000H;Daisy:BytesInShiftRegister		EQU 6BytesPerMicroInstruction	EQU 6;Data from control store is port 080H bit 13 i.e. SiriusPort	EQU	0B0H 	;The port for controlling the Sirius chip				;bit 7: RAMWrEnable				;bit 6: CSShift'				;bit 5: CSDOe				;bit 4: shift data				;bit 3: ShiftClk				;bit 2: Halt'				;bit 1: ResetSChip'				;bit 0: IOPIntSChipRam		EQU  8000HNCSShift	EQU  4000HCSShift		EQU  0CSDOe		EQU  2000HSData		EQU  1000HSClock		EQU  800HNHalt		EQU  200HIOPInt		EQU  100HCSDataBit	EQU  2000H;Daisy & Daybreak:;--------------------------------------------------------------------------------;;;--------------------------------------------------------------------------------;Convenience macros:;-------------------;%*Define (MultiplyByTwo	(register))	(ROL	%register, 1);--------------------------------------------------------------------------------;Maintenance Panel Codes:;------------------- ;mpStartBooting	EQU	0100DmpFetchInitial	EQU	0149DmpRunInitial	EQU	0150DmpInitialError	EQU	0151DmpFetchMesaDove	EQU	0199DmpRunMesaDove	EQU	0200DmpMesaDoveError	EQU	0201DmpSDDReadError	EQU	0209DmpSDDSealError	EQU	0211DmpSDDVrsnError	EQU	0212DmpSDDCksmError	EQU	0213DmpRunGerm	EQU	0501DmpFloppyCleaning	EQU	0077D