;Copyright (C) 1985 by Xerox Corporation. All rights reserved.;-- stored as [Idun]<WDLion>Dove>OpieMac.asm;-- created on  27-Jun-85 14:35:15;;-- last edited by:;;--	JPM    .es	11-Jul-85 11:27:44	:Added EtherInitialize.;--	JPM    .es	27-Jun-85 14:35:15	:Created (in imitation of IOPMacro.asm).;			OpieMacro;--------------------------------------------------------------------------------; This set of macros is intended to support RAM-based Opie initialization; It provides access to routines in IOPInit;--------------------------------------------------------------------------------;IMPORTED VARIABLES:;Generate INT Instructions using two data bytesInterruptByte			EQU	0CDHEXTRN				opieIntrptVctType: ABS;--------------------------------------------------------------------------------;Opie System Constants:ConfigureInterruptsOIVType	EQU	opieIntrptVctType+0InitializeOpieIOROIVType	EQU	opieIntrptVctType+1InitializeICBOIVType		EQU	opieIntrptVctType+2ReturnToSystemLoopOIVType	EQU	opieIntrptVctType+3EtherInitializeOIVType		EQU	opieIntrptVctType+4;--------------------------------------------------------------------------------;Client called Macros:;ConfigureInterrupts sets up ROM-needed interrupt controllers and disables ints.%*DEFINE		(ConfigureInterrupts)			   (			    DB	InterruptByte, LOW ConfigureInterruptsOIVType				);InitializeOpieIOR sets up ROM-based portion of Opie's IOR segment;DS must contain this segment address%*DEFINE		(InitializeOpieIOR)			   (			    DB	InterruptByte, LOW InitializeOpieIOROIVType				);InitializeICB builds an interrupt context block;DS:[DI] must point to the ICB;ES:[SI] must point to a block of fixed data for the interrupt context%*DEFINE		(InitializeICB)			   (			    DB	InterruptByte, LOW InitializeICBOIVType				);ReturnToSystemLoop transfers control back to Opie;DS must contain Opie's IOR segment address;SS must contain Opie's stack segment address;This macro does not return to its caller%*DEFINE		(ReturnToSystemLoop)  			   ( 			    DB	InterruptByte, LOW ReturnToSystemLoopOIVType				);EtherInitialize sets up parameters for the ethernet chip.%*DEFINE		(EtherInitialize)			   (			    DB	InterruptByte, LOW EtherInitializeOIVType				);------------------------------------------------------------------------------