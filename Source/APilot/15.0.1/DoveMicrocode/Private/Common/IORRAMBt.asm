$MOD186$PAGELENGTH (95)$PAGEWIDTH  (136);Copyright (C) 1984, 1985 by Xerox Corporation. All rights reserved.;-- IORegion locations for the bootstrap handler.;-- stored as [Iris]<WMicro>Dove>IORRAMBt.asm;;-- last edited by:;--	RDH	   27-Jan-87 10:53:06	;Insert ending label.;--	RDH	   26-Jan-87 16:31:44	;Added stuff for cp to be handled from iop init block.;--	kek	    6-May-86 18:12:25	;added daisy stuff.;--	JAC	   10-Dec-85 11:08:40	;added bootMemoryPtr;--	JPM	   18-Jul-85  8:26:14	;Opie redesign conversion.;--	JMM	   17-Jun-85 11:46:33	;Removed doneWithGermFile and doneWithDBFile.;--	JPM	    5-Jun-85 15:52:01	;Added doneWithGermFile and doneWithDBFile.;--	JMM	   21-Feb-85 11:30:26	;Misc. edits.;--	JMM	   20-Jan-85 14:22:27	;Opie 16 upgrade.;--	JMM	   30-Nov-84 15:41:11	;First release.NAME			IORRAMBt;--------------------------------------------------------------------------------; $NOLIST$INCLUDE		(IOPDefs.asm)$INCLUDE		(RAMBDefs.asm)$LIST;--------------------------------------------------------------------------------; ;;********************************************************************************BootstrapIOR		SEGMENT		COMMON			Assume DS:BootstrapIOR;EXPORTED variables:;-------------------PUBLIC		bootBufferFull, bootStrapTask, bootTaskPUBLIC		jumpTable, bootDeviceIORSpacePUBLIC		bootBufferEmpty,bootBufferPtr,bootFileChoicePUBLIC		currentBlockSequence ,currentBootBufferPUBLIC		finishedLoaderFileFetch, getBootFile, startOfBootBufferPoolPUBLIC		loaderVirtualMemoryLocation, bootMemoryPtrPUBLIC		firstMicrocodeStartAddr, secondMicrocodeStartAddrPUBLIC		firstMicrocodeInitAddr, secondMicrocodeInitAddrPUBLIC		firstMicrocodeData, secondMicrocodeData, thirdMicrocodeDataPUBLIC		csBankConfiguration, CPType, WriteCSProcPUBLIC		CPStartOrInitProc, IncSIFarProcPUBLIC		EndRAMBootstrapIOR;----------------------------------------------bootTask		TaskContextBlock <>	;Generic boot task in RAM.bootStrapTask		TaskContextBlock <>	;ROM boot task -> RAM*Bt task.bootBufferFull		Condition	<>	;Condition variable for						;handler - bootstrap 						;coordination.jumpTable		BootJumpTable	<>	;Use to do indirect jumps.bootDeviceIORSpace	DB	200 DUP (?)	;This section is used by the 						;device boot heads for whatever						;needs they may have. i.e. One 						;could define device specific 						;structures in the device boot						;head then load a register with						;"deviceSpecificArea" and use						;.extension to access the needed 						;variables.					       ;---------------------------------------------------------------------------------;everything above is identical with IORROMBt.asm;---------------------------------------------------------------------------------bootBufferEmpty		Condition	<>finishedLoaderFileFetch	Condition	<>getBootFile		Condition	<>bootFileChoice		DB	6 DUP (?)	;For Ethernet, this would						;contain the boot file number						;of the file we want. For disk,						;this would . . . startOfBootBufferPool	DW	?		;pointer to (n) linked buffers,						;its value changes depending on						;whether we are doing a diagnostic						;boot or a normal boot (i.e. a						;diagnostic boot requires more						;room to load into)bootBufferPtr		DW	?		;Pointer to load area for booting.currentBootBuffer	DW	?		;For keeping track of buffer to 						;process.currentBlockSequence	DW	?		;For keeping track of where we are 						;at in processing a boot buffer.						;The variables below are initialized at main memory set-up  for the particular religion;and happens during an emulator load.						loaderVirtualMemoryLocation	DD	?	;This is an SEG:INDEX pair of where the 						;loader goes.bootMemoryPtr			DW	?;for Daisy, addresses of first and second microinstruction to be started.firstMicrocodeStartAddr		DW	?secondMicrocodeStartAddr	DW	?			;for Daisy, addresses of first and second microinstruction to be inited.firstMicrocodeInitAddr		DW	?secondMicrocodeInitAddr		DW	?;for Daisy, first, second, and third microinstruction data.firstMicrocodeData		DW	?secondMicrocodeData		DW	?thirdMicrocodeData		DW	?csBankConfiguration		DB	?	;10H, 20H, 30H, 40H => 4K, 8K, 12K, 16K etc.CPType			DB	?	;20H => Daisy, 60H => Daybreak;Offsets and code segments to be called from RAMBoot.asmWriteCSProc		DW 2 DUP (?)	;Set up by InitCPSpecific in DoveCP.asmCPStartOrInitProc	DW 2 DUP (?);Offsets and code segments to be called from here back into RAMBoot.asm IncSIFarProc		DW 2 DUP (?)	;Set up by RAMBoot.asmEndRAMBootstrapIOR	LABEL	FARBootstrapIOR		ENDS			END