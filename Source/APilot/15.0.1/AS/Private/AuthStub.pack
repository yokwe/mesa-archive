-- File: AuthStub.pack - last edit:-- Sturtevant.PA       21-Mar-85 17:31:16-- Copyright (C) 1985 by Xerox Corporation. All rights reserved.-- AuthStub.pack-- JMaloney, 5-Oct-83 15:57:08.-- Last modified: JMaloney, 30-May-84 18:02:38.-- NOTE: Remember to put "hottest" packs first.AuthStub: SEGMENT =  BEGIN  AuthStubCPClientReallyHot: CODE PACK =    BEGIN    AuthAImpl[      ENTRY VECTOR,      CheckOutCredentials, CheckOutCredsAndNextVerifier, CheckOutNextVerifier,      ComputeNextVerifierForConversation, GetRandomTicksForVerifier];    AuthInternalImpl[      ENTRY VECTOR,      BlockXOR, PackStrongVerifier, StuffParameters];    AuthProtocolImpl[      ENTRY VECTOR,      DescribeCredentials, DescribeVerifier, DescribeStrongVerifier];    DESAux[      ENTRY VECTOR,      CheckKeyParity, CorrectParity];    DESSoft[      ENTRY VECTOR,      CBC, CBCCheck, CryptABlock, CryptData, ECB, GetInternalKey,      MakeInternalKeys, PermInitial, PermInverseInitial, XORChecksum];    END;  AuthStubCPClientHot: CODE PACK =    BEGIN    AuthAImpl[      CATCH CODE,      CheckForValidName, FreeIdentity, GetConversationFromCache,      Initiate, InternalInitiate, InternalTerminate, IsWellKnownName,      MakeNullCHConversation, MakeSimpleCHOrphanConversation,      OldConversation, Refresh, ResolveNameIfAlias, Terminate];    AuthBImpl[      ENTRY VECTOR, Style];    AuthCImpl[      ENTRY VECTOR, CATCH CODE,      ContactASAndCallMe, FetchStrongCredentials];    AuthInternalImpl[      CATCH CODE,      CloneNSName, CloneNSString, EquivalentNames,      ExtractStuffFromCredentialsPackage,      FreeCredentials, FreeNSName, FreeNSString, FreeVerifier,      MakeEmptyNSName, MakeVerifierFromHashedPassword,      NilOrNullName, UnstuffParameters];    AuthProtocolImpl[      GetProgramNumbers,      DescribeCredentialsPackage, DescribeCredentialsPackageInternals,      DescribeCheckSimpleCredentialsArgs, DescribeCheckSimpleCredentialsResults,      DescribeGetStrongCredentialsArgs, DescribeGetStrongCredentialsResults,      DescribeSimpleVerifier];    AuthServerCacheImpl[      ENTRY VECTOR, ASAddress, NextPlease];    AuthStubOpsImpl[      ENTRY VECTOR, CATCH CODE,      GetStrongCredentials, RemoteGetStrongCredentials, RemoteProcedureCall];    END;  AuthStubCPAuthenticateHot: CODE PACK =    BEGIN    AuthBImpl[      CATCH CODE,      Authenticate, AuthenticateAndReply, AuthenticateWithExpiredCredentials,      CheckStrongVerifier, CredsExpired, Earlier, ExtractCredentialsDetails,      GetKeyFromIdentity, IncrementVerifierTicks, InternalAuthenticate,      InternalExtractCredentialsDetails, ReplyVerifierChecks];    AuthCImpl[      CheckSimpleCredentials];    AuthDImpl[      ENTRY VECTOR, CATCH CODE,      EqualCredentials, ExtractHashedPassword, GetFlavor,      GetRandomKey, HashSimplePassword];    AuthInternalImpl[      CloneVerifier,      FreeSimpleCredentials, FreeStrongCredentials,      MakeStrongCredentials, MakeSimpleCredentials,      UnpackSimpleCredentials, UnpackSimpleVerifier,      UnpackStrongCredentials, UnpackStrongVerifier, WordsForSerializedName];    AuthProtocolImpl[      DescribeAuthenticationErrorRecord, DescribeCallErrorRecord,      DescribeProbeResults, DescribeSimpleCredentials, DescribeStrongCredentials];    AuthSessionImpl[      ENTRY VECTOR,      InitialAuthenticate, GetKeyFromIdentity,      NextReplyVerifier, AuthenticateWithExpiredCredentials];    AuthStubOpsImpl[      CheckSimpleCredentials, RemoteCheckSimpleCredentials];    CredsCacheStubImpl[      ENTRY VECTOR,      LookupStrongCreds, InsertOrUpdateStrongCreds,      InsertStrongCreds, GarbageCollect, NoopLookupStrongCreds,      NoopInsertOrUpdateStrongCreds, NoopInsertStrongCreds,      NoopGarbageCollect];    DESAux[      GetRandomIV, GetRandomKey, MakeRandomBlock];    END;  AuthStubCPWarm: CODE PACK =    BEGIN    AuthAImpl[      MakeIdentity, SelfAuthenticate, MakeStrongIdentityUsingKey,      MakeConversationFromCredsAndVerifier];    AuthDImpl[      CopyCredentials, CopyIdentity, FreeCredentials, FreeVerifier,      GetIdentityDetails, InternalCopyIdentity, PasswordStringToKey];    AuthInternalImpl[      CloneCredentials, MakeEmptyNSString];    AuthServerCacheImpl[      AddCacheEntry, CanIStartASearch, NowDoneSearching,      PushOldEntriesToEnd, Refill, Searcher];    END;  AuthStubCPStubKeyAdmin: CODE PACK =    BEGIN    AuthCImpl[      ChangeSimpleKey, CreateSimpleKey, DeleteSimpleKey,      ChangeStrongKey, CreateStrongKey, DeleteStrongKey,      ChangeMyPasswords, ConverseWithASAndCallMe];    AuthInternalImpl[DescribeUserEntry, DescribeUserPassword];    AuthDImpl[      -- Not really key admin, but it reduced fragmentation to put here: --      EnumerateConversations, GetConversationDetails];    AuthProtocolImpl[      DescribeCreateStrongKeyArgs, DescribeChangeStrongKeyArgs,      DescribeDeleteStrongKeyArgs, DescribeCreateSimpleKeyArgs,      DescribeChangeSimpleKeyArgs, DescribeDeleteSimpleKeyArgs];    AuthStubOpsImpl[      CreateStrongKey, ChangeStrongKey, DeleteStrongKey,      CreateSimpleKey, ChangeSimpleKey, DeleteSimpleKey,      RemoteCreateStrongKey, RemoteChangeStrongKey, RemoteDeleteStrongKey,      RemoteCreateSimpleKey, RemoteChangeSimpleKey, RemoteDeleteSimpleKey];    END;  AuthStubCPCold: CODE PACK =    BEGIN    AuthAImpl[MAIN];    AuthBImpl[MAIN];    AuthCImpl[MAIN];    AuthDImpl[MAIN];    AuthInternalImpl[MAIN];    AuthProtocolImpl[      MAIN, CATCH CODE,      DescribeProxy, DescribeProxyInternals,      DescribeTradeProxyForCredentialsArgs,      DescribeTradeProxyForCredentialsResults, SetTestMode];    AuthServerCacheImpl[      MAIN, CATCH CODE, UseLocalServer];    AuthSessionImpl[MAIN, CATCH CODE];    AuthStubOpsImpl[      MAIN, RegisterServerOps, UnregisterServerOps];    CredsCacheStubImpl[      MAIN, CATCH CODE,      RegisterCredsCacheOps, UnregisterCredsCacheOps];    DESAux[MAIN, CATCH CODE, ValidateEncryptionHardware];    DESSoft[MAIN, CATCH CODE];    SharedKeysNamesImpl[MAIN, ENTRY VECTOR, CATCH CODE];    END;  END;AuthStubFPAllFrames: FRAME PACK =  BEGIN  AuthAImpl;  AuthBImpl;  AuthCImpl;  AuthDImpl;  AuthInternalImpl;  AuthProtocolImpl;  AuthServerCacheImpl;  AuthSessionImpl;  AuthStubOpsImpl;  CredsCacheStubImpl;  DESAux;  DESSoft;  SharedKeysNamesImpl;  END;