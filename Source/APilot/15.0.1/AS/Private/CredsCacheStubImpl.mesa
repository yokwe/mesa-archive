-- Copyright (C) 1984  by Xerox Corporation. All rights reserved. -- CredsCacheStubImpl.mesa-- JMaloney, 22-Feb-84 17:33:37.-- Last modified: JMaloney, 5-Mar-84 16:23:56.DIRECTORY  Auth USING [Credentials],  AuthProtocol USING [StrongCredentials, StrongVerifier],  CredsCache USING [    GarbageCollectProc, InsertOrUpdateStrongCredsProc,    InsertStrongCredsProc, LookupStrongCredsProc],  DESFace USING [Key];CredsCacheStubImpl: PROGRAM  EXPORTS CredsCache =BEGIN-- Globals and errors --Overflow: PUBLIC ERROR = CODE;NotFound: PUBLIC ERROR = CODE;procs: RECORD [  lookupStrongCreds: CredsCache.LookupStrongCredsProc,  insertOrUpdateStrongCreds: CredsCache.InsertOrUpdateStrongCredsProc,  insertStrongCreds: CredsCache.InsertStrongCredsProc,  garbageCollect: CredsCache.GarbageCollectProc];-- Public procedures --LookupStrongCreds: PUBLIC PROC [  strongCreds: Auth.Credentials, z: UNCOUNTED ZONE]    RETURNS [      clearCreds: AuthProtocol.StrongCredentials,      lastVerifier: AuthProtocol.StrongVerifier] =  BEGIN    [clearCreds, lastVerifier] ¬ procs.lookupStrongCreds[strongCreds, z];  END;InsertOrUpdateStrongCreds: PUBLIC PROC [  strongCreds: Auth.Credentials,  recipientsKey: DESFace.Key,  lastVerifier: AuthProtocol.StrongVerifier] =  BEGIN    procs.insertOrUpdateStrongCreds[strongCreds, recipientsKey, lastVerifier];  END;InsertStrongCreds: PUBLIC PROC [  strongCreds: Auth.Credentials, recipientsKey: DESFace.Key] =  BEGIN    procs.insertStrongCreds[strongCreds, recipientsKey];  END;GarbageCollect: PUBLIC PROC RETURNS [deletedSomething: BOOLEAN ¬ FALSE] =  BEGIN    deletedSomething ¬ procs.garbageCollect[];  END;-- Cache implementation registration --RegisterCredsCacheOps: PUBLIC PROC [  lookupStrongCredsProc: CredsCache.LookupStrongCredsProc,  insertOrUpdateStrongCredsProc: CredsCache.InsertOrUpdateStrongCredsProc,  insertStrongCredsProc: CredsCache.InsertStrongCredsProc,  garbageCollectProc: CredsCache.GarbageCollectProc] =  BEGIN    procs ¬ [      lookupStrongCredsProc, insertOrUpdateStrongCredsProc,      insertStrongCredsProc, garbageCollectProc];  END;UnregisterCredsCacheOps: PUBLIC PROC =  -- That is, register the noop procedures.  BEGIN    procs ¬ [      NoopLookupStrongCreds, NoopInsertOrUpdateStrongCreds,      NoopInsertStrongCreds, NoopGarbageCollect];  END;-- Private procedures --NoopLookupStrongCreds: PROC [  strongCreds: Auth.Credentials, z: UNCOUNTED ZONE]    RETURNS [      clearCreds: AuthProtocol.StrongCredentials,      lastVerifier: AuthProtocol.StrongVerifier] =  BEGIN    ERROR NotFound;  END;NoopInsertOrUpdateStrongCreds: PROC [  strongCreds: Auth.Credentials,  recipientsKey: DESFace.Key,  lastVerifier: AuthProtocol.StrongVerifier] =  BEGIN    -- Noop.  END;NoopInsertStrongCreds: PROC [  strongCreds: Auth.Credentials, recipientsKey: DESFace.Key] =  BEGIN    -- Noop.  END;NoopGarbageCollect: PROC RETURNS [deletedSomething: BOOLEAN ¬ FALSE] =  BEGIN    deletedSomething ¬ FALSE;  END;-- Initialization --  -- Initialize procs record with noop procedures:  UnregisterCredsCacheOps[];END.