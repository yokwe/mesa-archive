-- File: DiagEtherTestsImpl.mesa - last edit:-- TXM                 19-May-89 20:07:47-- Copyright (C) 1985, 1986 by Xerox Corporation. All rights reserved.DIRECTORY  --DebuggerSubstituteImpl,  DiagDiskMkTime,  DiagDiskTime,  DiagEtherBasicTest,  DiagEtherCmds,  DiagEtherCmdDes,  DiagEtherCmdDrive,  DiagEtherDisplay,  DiagEtherEchoTest,  DiagEtherErrorCheck,  DiagEtherErrorMsgs,  DiagEtherIOCB,  DiagEtherIOCmdMsgs,  DiagEtherLogAndTrace,  DiagEtherMenuMsgs,  DiagEtherNS,  DiagEtherProfile,  DiagEtherPromptMsgs,  DiagEtherRunCmdFile,  DiagEtherTestControl,  DiagEtherTestParameters,  DiagEtherTests,  EthernetFace,  EthernetIOFaceDove,  EthernetHardFaceDove,  OfflineDiagInterface,  Runtime,  String,  System;  DiagEtherTestsImpl: MONITOR   IMPORTS «DebuggerSubstituteImpl,» DiagDiskMkTime, DiagDiskTime,    DiagEtherBasicTest, DiagEtherCmds, DiagEtherCmdDes, DiagEtherCmdDrive,     DiagEtherDisplay, DiagEtherEchoTest, DiagEtherErrorCheck, DiagEtherErrorMsgs,    DiagEtherIOCB, DiagEtherIOCmdMsgs, DiagEtherLogAndTrace, DiagEtherMenuMsgs, DiagEtherNS,    DiagEtherProfile, DiagEtherPromptMsgs,    DiagEtherRunCmdFile, DiagEtherTestControl, DiagEtherTestParameters, EthernetFace, OfflineDiagInterface,    Runtime, String  EXPORTS DiagEtherTests, OfflineDiagInterface =  BEGIN OPEN    DiagEtherMenuMsgs, -- menues will derived from this interface.    IOFace: EthernetIOFaceDove,    HardFace: EthernetHardFaceDove,    ODI: OfflineDiagInterface;  -- ================-- PUBLIC VARIABLEs-- ================  Switch: PUBLIC ARRAY [0..128) OF BOOLEAN;  thisIsDove: PUBLIC BOOLEAN ¬ TRUE;  -- Data POINTERs  xmitDataPtr: PUBLIC DataArrayPtr;  rcvDataPtr: PUBLIC DataArrayPtr;    dumpBuffer: PUBLIC HardFace.SCBBase;-- ==========-- Data Types-- ==========  FixedDataTypes: TYPE = {b000000, b125252, b052525, b177400, b000377, b177777, others};  DataArray: TYPE = ARRAY OF WORD;  DataArrayPtr: TYPE = LONG POINTER TO DataArray;-- =================-- CONSTANTS-- =================  setSwitchTitle: LONG STRING = "Set Switches";  setSwitchExpl: LONG STRING = "Set Switches (For Diagnostics Programmer only)";-- =================-- PUBLIC PROCEDUREs-- =================    -- EXPORTS to DiagEtherTests  CallService: PUBLIC PROCEDURE [errorCode: CARDINAL] = {    ODI.PutMessage[message: DiagEtherPromptMsgs.prompts[callService], clearMessageAreaFirst: TRUE];    ODI.PutMessage[message: DiagEtherPromptMsgs.prompts[failed]];        ODI.HitAnyKeyToContinue[];    SIGNAL ODI.AbortCurrentTest;    };      GetPassCount: PUBLIC PROCEDURE [secondsPerPass: LONG CARDINAL] = {    };  InitializeBooleans: PUBLIC PROCEDURE = {    thisIsDove ¬ EthernetFace.controlBlockSize = SIZE[IOFace.IOCB];    Switch ¬ ALL[FALSE];    };      PutGoodCompletion: PUBLIC PROCEDURE = {    };  PutPassCount: PUBLIC PROCEDURE [secondsPerPass: LONG CARDINAL] = {    };  DisplayTestParameters: PUBLIC PROCEDURE [    getPassCount:		BOOLEAN¬ FALSE,    secondsPerPass:		LONG CARDINAL,    putPassesLeftToRun:	BOOLEAN¬ FALSE,    putTotalPassCount:	BOOLEAN¬ FALSE,    putTimePerPass:		BOOLEAN¬ FALSE,    putRunTimeLeft:		BOOLEAN¬ FALSE] = {    };    -- Exports to OfflineDiagInterface.  RunEthernetTests: PUBLIC ODI.ClientPackage = {    menuPtr:		LONG POINTER TO ODI.AMenuOfSelections;--Root Menu    echoTestSubMenuPtr:	LONG POINTER TO ODI.AMenuOfSelections;--Echo Test submenu    cmdFileSubMenuPtr:	LONG POINTER TO ODI.AMenuOfSelections;--Command File    optionsSubMenuPtr:	LONG POINTER TO ODI.AMenuOfSelections;--Options     menuEntriesPtr:	LONG POINTER TO ODI.TestItemsForThisNode;    menuEntryPtr:	LONG POINTER TO ODI.TestItem;    userTestPtr:	LONG POINTER TO ODI.Selections;    adminTestPtr:	LONG POINTER TO ODI.Selections;    serviceTestPtr:	LONG POINTER TO ODI.Selections;    mfgTestPtr:	LONG POINTER TO ODI.Selections;    programerTestPtr:	LONG POINTER TO ODI.Selections;    DiagDiskTime.SetRealTimeClock[displayMsg: TRUE !      DiagDiskTime.RealTimeClockFailure => {        ODI.PutData[data: DiagDiskMkTime.mkTime[rTCFailure], clearHeadingAndData: TRUE];	CallService[0]}];	     DiagEtherNS.StartCHStub[];        InitializeBooleans[];    InitializeSpaces[];    DiagEtherProfile.InitializeProfile[];    DiagEtherEchoTest.Initialize[];    DiagEtherTestParameters.Initialize[];-- Allocate echoTestSubMenuPtr    menuEntriesPtr ¬ ODI.GetATestItemsForThisNode[3];      -- [DiagEtherMenuMsgs.numberOfEchoTestItems];        menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName		¬ menuMsgs[startEchoTest];    menuEntryPtr.test			¬ DiagEtherEchoTest.StartEchoTest;    menuEntryPtr.itemExplanation		¬ menuMsgs[startEchoTestExpl];    menuEntriesPtr.nodeItems [0]		¬ menuEntryPtr;      menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName		¬ menuMsgs[setProperty];    menuEntryPtr.test			¬ DiagEtherEchoTest.GetAProperties;    menuEntryPtr.itemExplanation		¬ menuMsgs[setPropertyExpl];    menuEntryPtr.subMenu			¬ NIL;--    menuEntryPtr.subMenu			¬ propsSubMenuPtr;    menuEntriesPtr.nodeItems [1]		¬ menuEntryPtr;      menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName		¬ DiagEtherPromptMsgs.prompts[logOn];    menuEntryPtr.test			¬ DiagEtherEchoTest.ListServers;    -- This should be changed.    menuEntryPtr.itemExplanation		¬ DiagEtherPromptMsgs.prompts[logOnExpl];    menuEntriesPtr.nodeItems [2]		¬ menuEntryPtr;      userTestPtr ¬ ODI.GetASelectionArray [2];    userTestPtr.selections[0]		¬ 0;    userTestPtr.selections[1]		¬ 1;      adminTestPtr ¬ ODI.GetASelectionArray [2];    adminTestPtr.selections[0]		¬ 0;    adminTestPtr.selections[1]		¬ 1;      serviceTestPtr ¬ ODI.GetASelectionArray [3];    serviceTestPtr.selections[0]		¬ 0;    serviceTestPtr.selections[1]		¬ 1;    serviceTestPtr.selections[2]		¬ 2;      mfgTestPtr ¬ ODI.GetASelectionArray [3];    mfgTestPtr.selections[0]		¬ 0;    mfgTestPtr.selections[1]		¬ 1;    mfgTestPtr.selections[2]		¬ 2;      programerTestPtr ¬ ODI.GetASelectionArray [3];    programerTestPtr.selections[0]	¬ 0;    programerTestPtr.selections[1]	¬ 1;    programerTestPtr.selections[2]	¬ 2;      echoTestSubMenuPtr ¬ ODI.GetAMenuOfSelections [];    echoTestSubMenuPtr.menuTitle		¬ menuMsgs[echoTest];    echoTestSubMenuPtr.userSelections		¬ userTestPtr;    echoTestSubMenuPtr.adminSelections		¬ adminTestPtr;    echoTestSubMenuPtr.seSelections		¬ serviceTestPtr;    echoTestSubMenuPtr.manufacturingSelections	¬ mfgTestPtr;    echoTestSubMenuPtr.programmerSelections	¬ programerTestPtr;    echoTestSubMenuPtr.testItemsForThisNode	¬ menuEntriesPtr;        -- for cmdFileSubMenuPtr      menuEntriesPtr ¬ ODI.GetATestItemsForThisNode[2];      -- [DiagEtherMenuMsgs.numberOfCommands];        menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName			¬ menuMsgs[buildCmdFile];    menuEntryPtr.test			¬ DiagEtherRunCmdFile.BuildNewFile;    menuEntryPtr.itemExplanation		¬ menuMsgs[buildCmdFileExpl];    menuEntriesPtr.nodeItems [0]		¬ menuEntryPtr;      menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName			¬ menuMsgs[rerunCmdFile];    menuEntryPtr.test			¬ DiagEtherRunCmdFile.RunPriorFile;    menuEntryPtr.itemExplanation		¬ menuMsgs[rerunCmdFileExpl];    menuEntriesPtr.nodeItems [1]		¬ menuEntryPtr;      serviceTestPtr ¬ ODI.GetASelectionArray [2];    serviceTestPtr.selections[0]		¬ 0;    serviceTestPtr.selections[1]		¬ 1;      mfgTestPtr ¬ ODI.GetASelectionArray [2];    mfgTestPtr.selections[0]		¬ 0;    mfgTestPtr.selections[1]		¬ 1;      programerTestPtr ¬ ODI.GetASelectionArray [2];    programerTestPtr.selections[0]	¬ 1;    programerTestPtr.selections[1]	¬ 0;      cmdFileSubMenuPtr ¬ ODI.GetAMenuOfSelections [];    cmdFileSubMenuPtr.menuTitle			¬ menuMsgs[cmdFileOption];    cmdFileSubMenuPtr.userSelections		¬ NIL;    cmdFileSubMenuPtr.adminSelections		¬ NIL;    cmdFileSubMenuPtr.seSelections		¬ serviceTestPtr;    cmdFileSubMenuPtr.manufacturingSelections		¬ mfgTestPtr;    cmdFileSubMenuPtr.programmerSelections	¬ programerTestPtr;    cmdFileSubMenuPtr.testItemsForThisNode	¬ menuEntriesPtr;      -- =======================================    -- for optionsSubMenuPtr Ethernet Options.    -- =======================================    menuEntriesPtr ¬ ODI.GetATestItemsForThisNode[2];      -- [DiagEtherMenuMsgs.numberOfEthernetOptions];        menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName			¬ menuMsgs[dispErrLog];    menuEntryPtr.test			¬ DiagEtherDisplay.ErrorLog;    menuEntryPtr.itemExplanation		¬ menuMsgs[dispErrLogExpl];    menuEntriesPtr.nodeItems [0]		¬ menuEntryPtr;      menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName			¬ menuMsgs[dispTrace];    menuEntryPtr.test			¬ DiagEtherDisplay.Trace;    menuEntryPtr.itemExplanation		¬ menuMsgs[dispTraceExpl];    menuEntriesPtr.nodeItems [1]		¬ menuEntryPtr;    serviceTestPtr ¬ ODI.GetASelectionArray [2];    serviceTestPtr.selections[0]		¬ 0;    serviceTestPtr.selections[1]		¬ 1;      mfgTestPtr ¬ ODI.GetASelectionArray [2];    mfgTestPtr.selections[0]		¬ 0;    mfgTestPtr.selections[1]		¬ 1;      programerTestPtr ¬ ODI.GetASelectionArray [2];    programerTestPtr.selections[0]	¬ 0;    programerTestPtr.selections[1]	¬ 1;      optionsSubMenuPtr ¬ ODI.GetAMenuOfSelections [];    optionsSubMenuPtr.menuTitle			¬ menuMsgs[ethernetOptions];    optionsSubMenuPtr.userSelections		¬ NIL;    optionsSubMenuPtr.adminSelections		¬ NIL;    optionsSubMenuPtr.seSelections			¬ serviceTestPtr;    optionsSubMenuPtr.manufacturingSelections		¬ mfgTestPtr;    optionsSubMenuPtr.programmerSelections		¬ programerTestPtr;    optionsSubMenuPtr.testItemsForThisNode		¬ menuEntriesPtr;    -- =======================    -- for menuPtr (Root Menu)    -- =======================    -- 0. ethernetOptions    -- 1. echoTest    -- 2. i82586Diagnose    -- 3. i82586Loopback    -- 4. cmdFileOption    -- 5. s8002SelfLoopback    -- 6. tDRTest    -- 7. commTurnaroundTest    -- 8. xverTurnaroundTest    -- 9. interfaceTest        menuEntriesPtr ¬ ODI.GetATestItemsForThisNode[11];      -- [DiagEtherMenuMsgs.numberOfRootMenuItems];        menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName			¬ menuMsgs[ethernetOptions];    menuEntryPtr.test				¬ NIL;    menuEntryPtr.itemExplanation		¬ menuMsgs[ethernetOptionsExpl];    menuEntryPtr.subMenu			¬ optionsSubMenuPtr;    menuEntriesPtr.nodeItems [0]		¬ menuEntryPtr;        menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName			¬ menuMsgs[echoTest];--    menuEntryPtr.test				¬ NIL;    menuEntryPtr.test				¬ DiagEtherEchoTest.EnterEchoTest;    menuEntryPtr.itemExplanation		¬ menuMsgs[echoTestExpl];    menuEntryPtr.subMenu			¬ NIL;--    menuEntryPtr.subMenu			¬ echoTestSubMenuPtr;    menuEntriesPtr.nodeItems [1]		¬ menuEntryPtr;        menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName			¬ menuMsgs[i82586Diagnose];    menuEntryPtr.test			¬ DiagEtherCmds.Diag82586;    menuEntryPtr.itemExplanation		¬ menuMsgs[i82586DiagnoseExpl];    menuEntriesPtr.nodeItems [2]		¬ menuEntryPtr;        menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName			¬ menuMsgs[i82586Loopback];    menuEntryPtr.test			¬ DiagEtherCmds.LoopBack82586Internal;    menuEntryPtr.itemExplanation		¬ menuMsgs[i82586LoopbackExpl];    menuEntriesPtr.nodeItems [3]		¬ menuEntryPtr;        menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName			¬ menuMsgs[cmdFileOption];    menuEntryPtr.test				¬ NIL;    menuEntryPtr.itemExplanation		¬ menuMsgs[cmdFileOptionExpl];    menuEntryPtr.subMenu			¬ cmdFileSubMenuPtr;    menuEntriesPtr.nodeItems [4]		¬ menuEntryPtr;      menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName			¬ menuMsgs[s8002SelfLoopback];    menuEntryPtr.test			¬ DiagEtherCmds.LoopBack8023Internal;    menuEntryPtr.itemExplanation		¬ menuMsgs[s8002SelfLoopbackExpl];    menuEntriesPtr.nodeItems [5]		¬ menuEntryPtr;      menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName			¬ menuMsgs[tDRTest];    menuEntryPtr.test			¬ DiagEtherCmds.TDRTest;    menuEntryPtr.itemExplanation		¬ menuMsgs[tDRTestExpl];    menuEntriesPtr.nodeItems [6]		¬ menuEntryPtr;      menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName			¬ menuMsgs[commTurnaroundTest];    menuEntryPtr.test			¬ DiagEtherCmds.CommTurnaroundTest;    menuEntryPtr.itemExplanation		¬ menuMsgs[commTurnaroundTestExpl];    menuEntriesPtr.nodeItems [7]		¬ menuEntryPtr;      menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName			¬ menuMsgs[xverTurnaroundTest];    menuEntryPtr.test			¬ DiagEtherCmds.XverTurnaroundTest;    menuEntryPtr.itemExplanation		¬ menuMsgs[xverTurnaroundTestExpl];    menuEntriesPtr.nodeItems [8]		¬ menuEntryPtr;      menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName			¬ menuMsgs[interfaceTest];    menuEntryPtr.test			¬ DiagEtherCmds.InterfaceTest;    menuEntryPtr.itemExplanation		¬ menuMsgs[interfaceTestExpl];    menuEntriesPtr.nodeItems [9]		¬ menuEntryPtr;      menuEntryPtr ¬ ODI.GetATestItem [];    menuEntryPtr.itemName			¬ setSwitchTitle;    menuEntryPtr.test			¬ SetSwitches;    menuEntryPtr.itemExplanation		¬ setSwitchExpl;    menuEntriesPtr.nodeItems [10]		¬ menuEntryPtr;      userTestPtr ¬ ODI.GetASelectionArray [1];    userTestPtr.selections[0]	¬ 1; -- Echo Test      adminTestPtr ¬ ODI.GetASelectionArray [2];    adminTestPtr.selections[0]	¬ 1; -- Echo Test    adminTestPtr.selections[1]	¬ 9; -- Interface Test      serviceTestPtr ¬ ODI.GetASelectionArray [5];    serviceTestPtr.selections[0]	¬ 1; -- Echo Test    serviceTestPtr.selections[1]	¬ 9; -- Interface Test    serviceTestPtr.selections[2]	¬ 2; -- 82586 Diagnose    serviceTestPtr.selections[3]	¬ 3; -- 82586 Internal Loopback    serviceTestPtr.selections[4]	¬ 7; -- Communication Turnaround Test    «serviceTestPtr.selections[5]	¬ 4; -- Command File Options    serviceTestPtr.selections[6]	¬ 6; -- TDR Test    serviceTestPtr.selections[7]	¬ 0; -- Ethernet Options»      mfgTestPtr ¬ ODI.GetASelectionArray [7];    mfgTestPtr.selections[0]	¬ 1; -- EchoTest     mfgTestPtr.selections[1]	¬ 9; -- InterfaceTest    mfgTestPtr.selections[2]	¬ 2; -- 82586 Diagnose    mfgTestPtr.selections[3]	¬ 3; -- 82586 loopback (Internal)    mfgTestPtr.selections[4]	¬ 7; -- Communication Turnaround Test    mfgTestPtr.selections[5]	¬ 4; -- CmdFile    mfgTestPtr.selections[6]	¬ 0; -- DisplayOptions    «mfgTestPtr.selections[8]	¬ 5; -- 8023 loopback    mfgTestPtr.selections[5]	¬ 6; -- TDR    mfgTestPtr.selections[9]	¬ 8; -- Transceiver Turnaround Test»      programerTestPtr ¬ ODI.GetASelectionArray [10];    programerTestPtr.selections[0]	¬ 1;    programerTestPtr.selections[1]	¬ 9;    programerTestPtr.selections[2]	¬ 2;    programerTestPtr.selections[3]	¬ 3;    programerTestPtr.selections[4]	¬ 5; -- Dummy    programerTestPtr.selections[5]	¬ 6;    programerTestPtr.selections[6]	¬ 7; -- Communication Turnaround Test    programerTestPtr.selections[7]	¬ 4;    programerTestPtr.selections[8]	¬ 0;    programerTestPtr.selections[9]	¬ 10; -- SetSwitches    «programerTestPtr.selections[7]	¬ 8; -- Transceiver Turnaround Test»      menuPtr ¬ ODI.GetAMenuOfSelections [];    menuPtr.menuTitle			¬ menuMsgs[mainTitle];    menuPtr.userSelections		¬ userTestPtr;    menuPtr.adminSelections		¬ adminTestPtr;    menuPtr.seSelections		¬ serviceTestPtr;    menuPtr.manufacturingSelections		¬ mfgTestPtr;    menuPtr.programmerSelections	¬ programerTestPtr;    menuPtr.testItemsForThisNode	¬ menuEntriesPtr;    RETURN [menuPtr];    }; --RunEthernetTests    SetSwitches: PROCEDURE RETURNS [result: OfflineDiagInterface.ResultType] =    BEGIN     num:		CARDINAL¬ 1;     str: STRING¬ [8];          Switch¬ ALL[FALSE];     ODI.PutMessage[message: "Switches set: ",		    clearMessageAreaFirst: TRUE];     UNTIL num= 0 DO       num¬ ODI.GetANumber[prompt: "Switch 1-127, 0 exits: ",			   lowLimit: 0,			   upperLimit: 128].number;       Switch[num]¬ TRUE;       str.length¬ 0;       String.AppendDecimal[str, num];       String.AppendString[str, ", "];       ODI.PutMessage[message: str,		      startWithNewLine: FALSE];     ENDLOOP;      result¬ none;     END; --SetSwitches  InitializeSpaces: PROCEDURE = {    ptr: LONG POINTER TO ARRAY OF WORD;    --    -- trace size		4    -- errlog size		6    -- tempLog			1    -- dump register buffer	1     -- receive data buffer	2    -- transmit data buffer	2    -- ~~~~~~~~~~~~~~~~~~~~~~~~~~    total: CARDINAL	     ¬ 16;        ptr ¬ ODI.GetSpace[pageCount: total];        -- trace space    DiagEtherLogAndTrace.tracePtr ¬ ptr;    DiagEtherLogAndTrace.traceLength ¬ 4 * 256;     ptr ¬ ptr + DiagEtherLogAndTrace.traceLength;        -- error log space    DiagEtherLogAndTrace.errLogPtr ¬ ptr;    DiagEtherLogAndTrace.errLogLength ¬ 6 * 256;    ptr ¬ ptr + DiagEtherLogAndTrace.errLogLength;        -- temporary log space    DiagEtherLogAndTrace.stepLogPtr ¬ ptr;    ptr ¬ ptr + 256;        -- receive data buffer 1.    rcvDataPtr ¬ ptr;    ptr ¬ ptr + 256 * DiagEtherTests.rcvDataAreaLimit;        -- transmit data buffer    xmitDataPtr ¬ ptr;    ptr ¬ ptr + 256 * DiagEtherTests.xmitDataAreaLimit;    -- dump register buffer    dumpBuffer ¬ LOOPHOLE[ptr];    ptr ¬ ptr + 256;    };      -- Main Line  --IF System.switches['d] = up THEN START DebuggerSubstituteImpl;    START DiagDiskMkTime.DiagDiskMkTimeImpl[! Runtime.StartFault => CONTINUE];  START DiagEtherErrorMsgs.DiagEtherErrorMsgsImpl;  START DiagEtherMenuMsgs.DiagEtherMenuMsgsImpl;  START DiagEtherPromptMsgs.DiagEtherPromptMsgsImpl;  START DiagEtherIOCmdMsgs.DiagEtherIOCmdMsgsImpl;  START DiagEtherEchoTest.DiagEtherEchoTestImpl;  START DiagEtherEchoTest.DiagEtherEchoTestPropertyImpl;  START DiagEtherCmdDes.DiagEtherCmdDesImpl;  START DiagEtherCmdDrive.DiagEtherCmdDriveImpl;  START DiagEtherCmds.DiagEtherCmdsImpl;  START DiagEtherLogAndTrace.DiagEtherLogAndTraceImpl;  START DiagEtherErrorCheck.DiagEtherErrorCheckImpl;  START DiagEtherRunCmdFile.DiagEtherRunCmdFileImpl;  START DiagEtherTestControl.DiagEtherTestControlImpl;  START DiagEtherIOCB.DiagEtherIOCBImpl;  START DiagEtherBasicTest.DiagEtherBasicTestImpl;  END...time			By	Action 1-Feb-85 19:13:21 PST	MXT	Created 1-Mar-85 16:08:00	MXT	Added DiagEtherProfile.InitialiazeProfile to reset some Profile stuffs. 5-Mar-85 10:55:26	MXT	Added dumpBuffer.19-Mar-85 14:19:36	MXT	Added Time initialization procedures.20-Mar-85 19:56:46	MXT	Changed to use imported constant in InitializeSpaces.21-Mar-85 17:29:05	MXT	Added DiagEtherEchoTest.Initialize in RunEthernetTest.23-Mar-85 19:23:11	MXT	Moved StartCH from DiagEtherEchoTestImpl.26-Mar-85 13:50:29	MXT	Added Catch phrase for Runtime.StartFault in RunEthernetTests. 1-Apr-85 15:00:46	MXT	Added START clause for the DiagEtherBasicTestImpl. 9-Apr-85 17:46:58	MXT	Removed StartCH. 7-Aug-85 18:06:56	MXT	Added DebuggerSubstituteImpl.31-Oct-85 19:11:50	MXT	Added Cachephrase for Runtime.StartFault for the DiagDiskMktimeImpl.19-May-89 20:07:47	TXM	Changed RunEthernetTests to PUBLIC ODI.ClientPackage.