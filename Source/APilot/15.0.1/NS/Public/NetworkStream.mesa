-- NetworkStream.mesa (last edited by: AOF on:  7-Dec-81 14:20:16)-- Copyright (C) Xerox Corporation 1982. All rights reserved.DIRECTORY  Environment USING [Block, nullBlock],  Stream USING [Handle, SubSequenceType],  System USING [NetworkAddress];NetworkStream: DEFINITIONS =  BEGIN  -- definitions  -- various types and constants used by Network Stream clients.  WaitTime: TYPE = LONG CARDINAL; -- msecs  defaultWaitTime: WaitTime = 60000; -- msecs  infiniteWaitTime: READONLY WaitTime;  ClassOfService: TYPE = {bulk, transactional};  uniqueNetworkAddr: READONLY System.NetworkAddress;  -- Create a network stream to the specified remote address.  Create: PROCEDURE [    remote: System.NetworkAddress, connectData: Environment.Block ¬ Environment.nullBlock,    timeout: WaitTime ¬ defaultWaitTime, classOfService: ClassOfService ¬ bulk]    RETURNS [Stream.Handle];      -- create the sequenced packet transducer with all its parameters  CreateTransducer: PROCEDURE [    local, remote: System.NetworkAddress,    connectData: Environment.Block ¬ Environment.nullBlock,    localConnID, remoteConnID: ConnectionID,    activelyEstablish: BOOLEAN, timeout: WaitTime ¬    defaultWaitTime, classOfService: ClassOfService ¬ bulk]    RETURNS [Stream.Handle];    ConnectionID: TYPE[1];  uniqueConnID: READONLY ConnectionID;  unknownConnID: READONLY ConnectionID;  GetUniqueConnectionID: PROCEDURE RETURNS [iD: ConnectionID];  ConnectionSuspended: ERROR [why: SuspendReason];  SuspendReason: TYPE = {    notSuspended, transmissionTimeout, noRouteToDestination,    remoteServiceDisappeared};    ConnectionFailed: SIGNAL [why: FailureReason];  FailureReason: TYPE = {    -- all media    timeout, noRouteToDestination, noServiceAtDestination, remoteReject,    tooManyConnections,    -- the following apply only to circuit-oriented networks (e.g. phone network)    noAnswerOrBusy, -- auto-dial case only    noTranslationForDestination, -- no phone number for this destination    circuitInUse, -- being used to talk to another destination    circuitNotReady, -- dial the phone or connect modems (non-auto-dial case)    noDialingHardware, dialerHardwareProblem};  --Utilities  --Assign a network address with a unique socket  AssignNetworkAddress: PROCEDURE RETURNS [System.NetworkAddress];    --Find addresses at both ends of the stream  FindAddresses: PROCEDURE [sH: Stream.Handle]    RETURNS [local, remote: System.NetworkAddress];      --Change the stream wait time (controls occurance of Stream.TimeOut)  SetWaitTime: PROCEDURE [sH: Stream.Handle, time: WaitTime];    --Creating, using and deleting a listener  ListenerHandle: TYPE [2];    --Create listener  CreateListener: PROCEDURE [addr: System.NetworkAddress]    RETURNS [ListenerHandle];  --Delete listener (will raise Process.Abort if currently in Listen)  DeleteListener: PROCEDURE [listenerH: ListenerHandle];  --Listen for a connection request (returns only when request is received, else signals)  Listen: PROCEDURE [    listenerH: ListenerHandle,    connectData: Environment.Block ¬ Environment.nullBlock,    listenTimeout: WaitTime ¬ infiniteWaitTime]    RETURNS[remote: System.NetworkAddress, bytes: CARDINAL];  --Complete the connection with supplied parameters.  If DeleteListener or Listen is called  --in this state, an ErrorPacket[rejectedOisErrorCode] will be returned.  ApproveConnection: PROCEDURE [listenerH: ListenerHandle,    streamTimeout: WaitTime ¬ infiniteWaitTime, classOfService: ClassOfService ¬ bulk]    RETURNS [sH: Stream.Handle];      ListenError: ERROR [reason: ListenErrorReason];  ListenErrorReason: TYPE = {    illegalAddress,  --during Create    illegalHandle,  --in Listen orConnect    illegalState,  --in Connect (no request pending)    blockTooShort};  --connectData block was to short to handle rendezvous data  ListenTimeout: SIGNAL; -- resumeable  -- Optional close protocol using subsequence types  CloseStatus: TYPE = {good, noReply, incomplete};  closeSST: Stream.SubSequenceType = 254;  closeReplySST: Stream.SubSequenceType = 255;    Close: PROCEDURE [sH: Stream.Handle] RETURNS [CloseStatus];  CloseReply: PROCEDURE [sH: Stream.Handle] RETURNS [CloseStatus];  END.LOG(trimmed to Teak)Time: January 22, 1980  10:37 PM  By: Dalal  Action: made ListenerHandle a LONG.Time: January 22, 1980  10:37 PM  By: BLyon  Action: Changed SpecialSystem to System, ListenerHandle is opaque TYPE, made uniqueNetworkAddress READONLY (from CONSTANT).Time: August 6, 1980  10:21 AM  By: Garlick  Action: Added several FailureReason's for circuit-oriented networks.Time: October 10, 1980  4:47 PM  By: Garlick  Action: Added FailureReason noAnswerOrBusy.Time: January 26, 1981  9:55 AM  By: Garlick  Action: Added FailureReason noServiceAtDestination and SuspendReason remoteServiceDisappeared.  Deleted ERROR AttentionTimeout and added SIGNAL ListenTimeout.  Made several timeout values default.  Added a ClassOfService parameter to Create, CreateTransducer, and Listen. Added infiniteWaitTime.Time:  7-Dec-81 14:23:18  By: AOF  Action:  Restructure the Listener and added SetClassOfService.