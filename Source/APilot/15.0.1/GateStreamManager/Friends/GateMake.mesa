-- File: GateMake.mesa - last edit:-- AOF                 21-Jan-87 10:50:21-- Danielson.PA         4-Jan-84 17:44:13-- Casey               12-Dec-83 11:50:13-- Copyright (C) 1983, 1984, 1985, 1987 by Xerox Corporation. All rights reserved. DIRECTORY  Auth USING [Credentials, Verifier],  Environment USING [Byte],  CFDStream USING [DeleteProcedure, Handle, Object,    PhysicalRecordHandle, WaitAttentionProcedure],  GateStream USING [AuthenticateProc, BidReply,    CodeSet, ControllerAddress, DeviceAddress,    DeviceType, ForeignDevice, LineControl,    PollProc, SpecialBoolean, WaitTime],  RS232C USING [CharLength, CommParamObject,    Correspondent, Parity, StopBits, SyncCount],  RS232CEnvironment USING [LineSpeed],  NSName USING [Name],  NSString USING [String];GateMake: DEFINITIONS =  BEGIN  -- Programs    GateStreamMgrInstance: PROGRAM;	-- Started by GateStreamMgr  RSTransducerInstance: PROGRAM;	-- Started by GateStreamMgr  BscDriverImpl: PROGRAM;		-- Started by GateStreamMgr  GateFramerInstance: PROGRAM;		-- Started by BscDriverImpl    -- Procedures    ActivateRS232C: PROCEDURE [   commParams: LONG POINTER TO RS232C.CommParamObject,   phoneNumber: LONG STRING, timeout: GateStream.WaitTime];    InitRSTransducer: InitTransducerProcedure;  InitBscDriver: InitDriverProcedure;  InitFramer: InitFramerProcedure;  InitMux: InitMuxProcedure;  InitPolledBSCDriver: InitPolledDriverProcedure;  InitSiemensPBSCDriver: InitPolledDriverProcedure;	-- WILL CHANGE  NewSiemensTerminalForMux: NewTerminalForMuxProcedure;	-- WILL CHANGE  NewTerminalForMux: NewTerminalForMuxProcedure;  InitSNA: InitSNAProcedure;  NewLUSession: NewLUSessionProcedure;  InitTeletypeDriver: PROCEDURE [remote: BOOLEAN,    line: CARDINAL,     stream: CFDStream.Handle,    credentials: Auth.Credentials, verifier: Auth.Verifier]    RETURNS [newStream: CFDStream.Handle];  -- New Types  -- The following two types are used for multiple instances of Framers and Transducers  InstanceHandle: TYPE = LONG POINTER TO InstanceObject;  InstanceObject: TYPE = RECORD [    streamObject: CFDStream.Object,    realWaitAttention: CFDStream.WaitAttentionProcedure,    realDelete: CFDStream.DeleteProcedure,    unNew: BOOLEAN];  -- The following type is used for multiple instances of Driver  DriverInstanceHandle: TYPE = LONG POINTER TO UNSPECIFIED;    InitTransducerProcedure: TYPE = PROCEDURE [    interfaceHandle: LONG POINTER,    commParamHandle: LONG POINTER TO RS232C.CommParamObject,    protocolDescHandle: ProtocolDescHandle, statusReporter: StatusReporter]    RETURNS [CFDStream.Handle];  InitDriverProcedure: TYPE = PROCEDURE [    streamHandle: CFDStream.Handle, foreignDevice: GateStream.ForeignDevice,    authenticateProc: GateStream.AuthenticateProc, terminalID: LONG STRING,    securityID: LONG STRING, pollProc: GateStream.PollProc,    bidReply: GateStream.BidReply,    sendLineHoldingEOTs, expectLineHoldingEOTs: GateStream.SpecialBoolean,    directConnect: BOOLEAN,			--NEW  11-Jul-83    protocolDescHandle: ProtocolDescHandle,    awaitConnectionReady: AwaitConnectionReady, statusReporter: StatusReporter]    RETURNS [driverHandle: DriverHandle];  InitFramerProcedure: TYPE = PROCEDURE [    foreignDevice: GateStream.ForeignDevice, driverHandle: DriverHandle,    protocolDescHandle: ProtocolDescHandle, statusReporter: StatusReporter]    RETURNS [CFDStream.Handle];  InitMuxProcedure: TYPE = PROCEDURE [    foreignDevice: GateStream.ForeignDevice,     protocolDescHandle: ProtocolDescHandle,     statusReporter: StatusReporter,    hostControllerName: LONG STRING,     alternateControllerName: LONG STRING,    portsOnController: CARDINAL,    deviceTypes: LONG DESCRIPTOR FOR ARRAY OF GateStream.DeviceType,    accessControl: LONG DESCRIPTOR FOR ARRAY OF NSName.Name,    controllerName: NSName.Name,    controllerPassword: NSString.String]    RETURNS [CFDStream.Handle];  InitPolledDriverProcedure: TYPE = PROCEDURE [    transducerHandle: CFDStream.Handle,     muxHandle: CFDStream.Handle,    foreignDevice: GateStream.ForeignDevice,    protocolDescHandle: ProtocolDescHandle,     statusReporter: StatusReporter,    lineSpeed: RS232CEnvironment.LineSpeed]    RETURNS [deleteHandle: CFDStream.Handle];  NewTerminalForMuxProcedure: TYPE = PROCEDURE [    hostControllerName: LONG STRING,    deviceAddress: GateStream.DeviceAddress,    credentials: Auth.Credentials,    verifier: Auth.Verifier,     deviceIsADisplay: BOOLEAN ¬ TRUE]     RETURNS [CFDStream.Handle];  InitSNAProcedure: TYPE = PROCEDURE [    transducerHandle: CFDStream.Handle,     foreignDevice: GateStream.ForeignDevice,     protocolDescHandle: ProtocolDescHandle,     statusReporter: StatusReporter,    hostControllerName: LONG STRING,    alternateControllerName: LONG STRING,    xid: LONG STRING,     portsOnController: CARDINAL,    deviceTypes: LONG DESCRIPTOR FOR ARRAY OF GateStream.DeviceType,    commParams: LONG POINTER TO RS232C.CommParamObject,    createTimeout: GateStream.WaitTime,    phoneNumber: LONG STRING,    accessControl: LONG DESCRIPTOR FOR ARRAY OF NSName.Name,    controllerName: NSName.Name,    controllerPassword: NSString.String]     RETURNS [deleteHandle: CFDStream.Handle];  NewLUSessionProcedure: TYPE = PROCEDURE [    hostControllerName: LONG STRING,    luType: LUs,    deviceAddress: GateStream.DeviceAddress,    gapVersion: CARDINAL,    requestedSNA: BOOLEAN,    credentials: Auth.Credentials,    verifier: Auth.Verifier]     RETURNS [CFDStream.Handle];  LUs: TYPE = {luOne, luTwo, luThree, luSixDotTwo};    ProtocolDescHandle: TYPE = LONG POINTER TO ProtocolDescriptor;  ProtocolDescriptor: TYPE = RECORD [    byteSize: RS232C.CharLength,    parity: RS232C.Parity,    correspondent: RS232C.Correspondent,    stopBits: RS232C.StopBits,    syncCount: RS232C.SyncCount,    syncChar: Environment.Byte,    maxSendBlockSize: CARDINAL,    maxReceiveBlockSize: CARDINAL,    codeSet: GateStream.CodeSet,    variantPart:      SELECT prot: ProtName FROM	bsc => [	  intraFrameTimeOut: CARDINAL,			--in msec	  contentionControl: GateStream.LineControl],	ttySimulate => [frameTimeout: CARDINAL],	--in msec	ibm3270 => [controllerAddress: GateStream.ControllerAddress],	ENDCASE];  ProtName: TYPE = {bsc, hdlc, ttySimulate, ibm3270};    StatusReporter: TYPE = PROCEDURE [moduleReportObject: ModuleReportObject]    RETURNS [commitSuicide: BOOLEAN];  ModuleReportObject: TYPE = RECORD [    moduleStatus: ModuleStatus,    variantPart:      SELECT moduleID: ModuleID FROM	framer, polledBSCDriver => NULL,	mux, snaDispatcher => [multiplexReason: MultiplexReason],	snaLUMgr => [luMgrReason: LUMgrReason],	bscDriver => [protocolDriverReason: ProtocolDriverReason],	transducer => [	  interfaceHandle: LONG POINTER, transducerReason: TransducerReason],	ENDCASE];  ModuleStatus: TYPE = {    softwareInconsistency,		-- all modules    mediumDown, connectionComplete,	-- tranducer only    protocolError,			-- protocol driver only    destroyMedium,			-- protocol driver only    none};				-- none of above/report variant part.  ModuleID: TYPE = {framer, bscDriver, transducer, polledBSCDriver, mux, snaLUMgr, snaDispatcher};  TransducerReason: TYPE = {    weWereCalled,		-- ring indicator present "close" to DSR coming up    noReason};  MultiplexReason: TYPE = {    configurationMismatch,		-- somebody's got wrong # terminals    hostNotPolling,    hostPolling,    noReason};  LUMgrReason: TYPE = {    puActive,				-- Physical Unit now active    puInActive,				-- Physical Unit now inactive    bindFailed};			-- Bind rejected for LU  ProtocolDriverReason: TYPE = {    disconnectSavingData,		-- do not destroy medium    noGet,				-- we had no Get for arriving data    ourSecurityIDRejected,		-- Remote guy rejected our ID    weRejectedRemoteID,    -- Gateway client rejected remote ID via Authenticate proc or CFD refused to send one when required.    cfdNotResponding,    --Repeated unsucessful attempts to get some kind of an answer from CFD    Xerox800Rvi,    -- Xerox 800 sent RVI and thereby asked for unsupported temporary send mode.    discReceived, --from CFD but channelDown has not occured after extensive wait    noReason};  AwaitConnectionReady: TYPE = PROCEDURE RETURNS [whoCalled: WhoCalled];  WhoCalled: TYPE = {we, they, aborted};  -- Framer/Driver Interface Types  DriverHandle: TYPE = LONG POINTER TO DriverObject;  DriverObject: TYPE = RECORD [    send: PROCEDURE [      handle: DriverInstanceHandle,       frame: CFDStream.PhysicalRecordHandle, control: ProtocolControl]      RETURNS [CompletionObject],    receive: PROCEDURE [      handle: DriverInstanceHandle, frame: CFDStream.PhysicalRecordHandle]      RETURNS [control: ProtocolControl, complete: CompletionObject],    waitOutOfBandControl: PROCEDURE [handle: DriverInstanceHandle]      RETURNS [control: ProtocolControl],    delete: PROCEDURE [handle: DriverInstanceHandle],    instanceHandle: DriverInstanceHandle];  ProtocolControl: TYPE = {    none, interrupt, resume, audible, areYouThere, iAmHere, abortGetTransaction,    abortPutTransaction, endOfTransaction, yourTurnToSend, disconnect, cleanup};  CompletionObject: TYPE = RECORD [    headerBytes: CARDINAL,			-- meaningful for receives only    bodyBytes: CARDINAL,			-- meaningful for receives only    trailerBytes: CARDINAL,			-- meaningful for receives only    outcome: CompletionCode,    endOfFrame: BOOLEAN];  CompletionCode: TYPE = {    successful, remoteNotResponding,		-- to a connection request    remoteNotReceiving,			-- gave up because remote guy not accepting data    excessiveRetransmissions,			-- of a single block    channelDown, aborted, invalidControl};  -- Signals and Errors  DataError: SIGNAL [reason: DataErrorReason];  DataErrorReason: TYPE = {parityError, garbledReceiveData};  OperationAborted: ERROR [reason: OperationAbortedReason];  OperationAbortedReason: TYPE = {    transmissionMediumDown, transferAborted, remoteNotResponding,    remoteNotReceiving, excessiveRetransmissions, garbledReceiveData,    checksumError, tooLongFrame};  END.LOGTime:     		 By:      		Action: Rubicon release.Time:  5-Aug-81 18:03:38 By: Danielson		Action: Removal of RS232CManager.Time:  3-Sep-81 16:20:06 By: Danielson		Action: Start all modules explicitly.Time: 21-Sep-81 18:51:46 By: Danielson		Action: Add controller count to InitMux call.Time:  2-Oct-81 16:33:36 By: Michalene Casey	Action: Add Mux and Driver instance objects.Time:  5-Oct-81 17:55:23 By: Michalene Casey	Action: Changes for muxHandle and						transducerHandle.Time: 12-Oct-81 14:50:37 By: Danielson		Action: InitTransducer interfaceHandle now LONG.Time: 17-Dec-81 16:14:14 By: Danielson		Action: Make some STRINGS long Time: 16-Mar-82 14:47:43 By: Sarah-Ann Bishop	Action: 1) Added option for bid reply type						2) Added option for sending/receiving line						holding EOTs to InitDriverProcedure call line.Time: 22-Mar-82 11:57:19 By: Sarah-Ann Bishop	Action: Added mux variantPart to the						StatusReporter's ModuleReportObject.Time: 19-Jan-83 14:00:03 By: Muirhead		Action: AR 9629: Added						hostPolling/hostNotPolling to mux						varient of ModuleReportObject for						StatusReporter.Time: 11-Jul-83  6:32:30 By: Sarah-Ann Bishop	Action: Added directConnect parameter						to InitDriverProcedure.Time: 13-Oct-83  9:57:29 By: Artibee		Action: Various changes:						1) new procs/types: InitSNA, NewLUSession,						and new TYPE LUs						2) added deviceTypes on InitMuxProcedure						3) added deviceIsADisplay on						NewTerminalForMuxProcedure						4) terminalAddress is now deviceAddress						for both polledBSC and SNA						5) ProtName polledBSC is now ibm3270						6) added "sna" to ModuleID with same						variantPart as "mux"						7) added OperationAbortedReason tooLongFrameTime: 19-Oct-83  9:53:35 By: Casey		Action: Removed sna variant of ModuleID in						ModuleReportObject & replaced with snaLUMgr						& luMgrReason, Replaced sna with snaLUMgr in						ModuleID type, Added type LUMgrReasonTime:  9-Nov-83 17:29:50 By: Casey		Action: Added gapVersion, requestedSNA params						to NewLUSessionProcedure for compatability with						old Stars and new Star (OS 5.0) and 860sTime: 12-Dec-83 11:49:51 By: Casey		Action: Added bindFailed for LUMgrReasonTime: 21-Jan-87 10:49:00 By: AOF		Action: LONG POINTERs for MDS Relief	