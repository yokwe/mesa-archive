-- Copyright (C) 1982, 1985  by Xerox Corporation. All rights reserved. -- QDefs.mesa (last edited by: Danielson on:  1-Apr-82 13:40:19) --QDefs: DEFINITIONS =    BEGIN    --Data Types  Queue: TYPE = LONG POINTER TO QueueObject;  QueueObject: TYPE = PUBLIC MONITORED RECORD [    head, tail: PRIVATE QElement, length: PUBLIC CARDINAL];  QElement: TYPE = LONG POINTER TO QElementObject;  QElementObject: PRIVATE TYPE = RECORD [    queue: Queue,    nextQElem: QElement,    --previousQElem: QElement,    --timer,    --locked    data: QElementData];  QElementData: PRIVATE TYPE = RECORD [    SELECT elementType: * FROM    short => [elemData: UNSPECIFIED],    long => [elemData: LONG POINTER],    ENDCASE];  QLocation: TYPE = {head, tail};    --Procedures    -- remove element from head of queue  Dequeue: PROCEDURE [q: Queue] RETURNS [outcome: BOOLEAN, elemData: UNSPECIFIED];  DequeueLong: PROCEDURE [q: Queue] RETURNS [outcome: BOOLEAN, elemData: LONG POINTER];    -- add element to tail of queue  Enqueue: PROCEDURE [q: Queue, elemData: UNSPECIFIED, location: QLocation];  EnqueueLong: PROCEDURE [q: Queue, elemData: LONG POINTER, location: QLocation];  -- remove specific element from queue  ExtractQueue: PROCEDURE [q: Queue, elemData: UNSPECIFIED] RETURNS [BOOLEAN];  ExtractQueueLong: PROCEDURE [q: Queue, elemData: LONG POINTER] RETURNS [BOOLEAN];  -- remove element from head of queue and add it to tail of queue  GetNext: PROCEDURE [q: Queue] RETURNS [outcome: BOOLEAN, elemData: UNSPECIFIED];  GetNextLong: PROCEDURE [q: Queue] RETURNS [outcome: BOOLEAN, elemData: LONG POINTER];    -- ennumerate queue and call clients code for each element on queue  Enumerate: PROCEDURE [q: Queue, proc: CallBack, exit: ExitProc];  EnumerateLong: PROCEDURE [q: Queue, proc: CallBackLong, exit: ExitProcLong];    CallBack: TYPE = PROCEDURE [elemData: UNSPECIFIED] RETURNS [    continue, free: BOOLEAN];  CallBackLong: TYPE = PROCEDURE [elemData: LONG POINTER] RETURNS [    continue, free: BOOLEAN];    ExitProc: TYPE = PROCEDURE [notFound: BOOLEAN] RETURNS [    addNewEntry: BOOLEAN, elemData: UNSPECIFIED];  ExitProcLong: TYPE = PROCEDURE [notFound: BOOLEAN] RETURNS [    addNewEntry: BOOLEAN, elemData: LONG POINTER];    -- remove all elements of queue, free element and queue storage  DeleteQueue: PROCEDURE [Queue];  -- allocates, initializes head, tail, length  CreateQueue: PROCEDURE RETURNS [Queue];  -- frees queue package resources (storage zone pages)  Finalize: PROCEDURE;    QImpl: PROGRAM;  --Signals  QBad: ERROR;  END.LOG                         Rubicon release.23-Aug-81 12:45:11  BRD  Added LONG pointers 3-Sep-81 13:09:09  BRD  Start all modules explicitly16-Oct-81 12:15:39  BRD  Add GetNext and GetNextLong17-Dec-81 18:56:27  BRD  Added ennumerates 1-Apr-82 13:03:49  BRD  New enumerates