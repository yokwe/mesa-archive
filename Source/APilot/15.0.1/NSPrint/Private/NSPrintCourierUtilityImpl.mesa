-- File: NSPrintCourierUtilityImpl.mesa - last edit:-- AOF                 27-Jul-87 17:37:58-- Alfvin               5-Jan-83 12:51:01.-- Johnsson            19-Apr-83 18:13:49.-- AOF                 11-Aug-83 13:53:29.-- Copyright (C) 1987 by Xerox Corporation. All rights reserved.--THIS MODULE MUST BE IN CONTROL LISTDIRECTORY  Courier USING [Description],  Heap USING [systemZone],  NSDataStream USING [DescribeTicket],  NSPrint USING [    MediumType, MediumIndex, PaperType, PaperIndex, Media, Medium, Paper,    PrintAttributeType, PrintAttributesIndex, PrintAttribute,PrintAttributes,    PrintOptionType, PrintOptionsIndex, PrintOption, PrintOptions,    PrinterPropertyType, PrinterPropertiesIndex, PrinterProperties,    PrinterProperty, PrinterStatusType, PrinterStatusIndex, PrinterStatus,    PrinterStatusComponent, RequestStatusType, RequestStatusIndex, RequestStatus,    RequestStatusComponent, RequestID, String],  NSPrintCourier USING [PrintArguments],  NSString USING [DescribeString];NSPrintCourierUtilityImpl: PROGRAM  IMPORTS Heap, NSDataStream, NSString  EXPORTS NSPrint, NSPrintCourier =  BEGIN  zone: PUBLIC UNCOUNTED ZONE = Heap.systemZone;    --DESCRIPTION ROUTINES FOR WELL-KNOWN NSPrint TYPES  DescribeMedia: PUBLIC Courier.Description =    BEGIN    media: LONG POINTER TO NSPrint.Media =      notes.noteSize[SIZE[NSPrint.Media]];    notes.noteArrayDescriptor[      media, SIZE[NSPrint.Medium], 100--from spec only--];    FOR index: CARDINAL IN [0..LENGTH[media­]) DO      notes.noteParameters[@media[index], DescribeMedium];      ENDLOOP;    END;    DescribeMedium: PUBLIC Courier.Description =    BEGIN    mediumLength: ARRAY NSPrint.MediumIndex OF CARDINAL ¬ [      SIZE[paper NSPrint.Medium]];    medium: LONG POINTER TO NSPrint.Medium =      notes.noteSize[SIZE[NSPrint.Medium]];    paperLength: ARRAY NSPrint.PaperIndex OF CARDINAL ¬ [      SIZE[unknown NSPrint.Paper],      SIZE[knownSize NSPrint.Paper],      SIZE[otherSize NSPrint.Paper]];    notes.noteChoice[medium, SIZE[NSPrint.Medium], DESCRIPTOR[mediumLength]];    WITH medium­ SELECT FROM      paper =>	BEGIN	notes.noteChoice[@paper, SIZE[NSPrint.Paper], DESCRIPTOR[paperLength]];	<<WITH paper SELECT FROM	  unknown, knownSize, otherSize => NULL;	  ENDCASE;>>	END;      ENDCASE;    END;    DescribePrintAttribute: PUBLIC Courier.Description =    BEGIN    printLength: ARRAY NSPrint.PrintAttributesIndex OF CARDINAL ¬ [      SIZE[printObjectName NSPrint.PrintAttribute],      SIZE[printObjectCreateDate NSPrint.PrintAttribute],      SIZE[senderName NSPrint.PrintAttribute]];    printAttributes: LONG POINTER TO NSPrint.PrintAttributes =      notes.noteSize[SIZE[NSPrint.PrintAttributes]];    notes.noteArrayDescriptor[      printAttributes, SIZE[NSPrint.PrintAttribute],      LAST[NSPrint.PrintAttributesIndex] + 1];    FOR index: NSPrint.PrintAttributesIndex IN [0..LENGTH[printAttributes­]) DO      notes.noteChoice[        @printAttributes­[index], SIZE[NSPrint.PrintAttribute],	DESCRIPTOR[printLength]];      WITH printAttributes­[index] SELECT FROM        printObjectName =>	  notes.noteParameters[@printObjectName, NSString.DescribeString];	printObjectCreateDate =>	  notes.noteLongCardinal[@printObjectCreateDate];	senderName =>	  notes.noteParameters[@senderName, NSString.DescribeString];	ENDCASE;      ENDLOOP;    END;    DescribePrintOption: PUBLIC Courier.Description =    BEGIN    optionsLength: ARRAY NSPrint.PrintOptionsIndex OF CARDINAL ¬ [      SIZE[printObjectSize NSPrint.PrintOption],      SIZE[recipientName NSPrint.PrintOption],      SIZE[message NSPrint.PrintOption],      SIZE[copyCount NSPrint.PrintOption],      SIZE[pagesToPrint NSPrint.PrintOption],      SIZE[mediumHint NSPrint.PrintOption],      SIZE[priorityHint NSPrint.PrintOption],      SIZE[releaseKey NSPrint.PrintOption],      SIZE[staple NSPrint.PrintOption],      SIZE[twoSided NSPrint.PrintOption]];    printOptions: LONG POINTER TO NSPrint.PrintOptions =      notes.noteSize[SIZE[NSPrint.PrintOptions]];    notes.noteArrayDescriptor[printOptions, SIZE[NSPrint.PrintOption],      LAST[NSPrint.PrintOptionsIndex] + 1];    FOR index: NSPrint.PrintOptionsIndex IN [0..LENGTH[printOptions­]) DO      notes.noteChoice[        @printOptions­[index], SIZE[NSPrint.PrintOption],	DESCRIPTOR[optionsLength]];      WITH printOptions­[index] SELECT FROM        printObjectSize =>	  notes.noteLongCardinal[@printObjectSize];	recipientName =>	  notes.noteParameters[@recipientName, NSString.DescribeString];	message =>	  notes.noteParameters[@message, NSString.DescribeString];	mediumHint =>	  notes.noteParameters[@mediumHint, DescribeMedium];	--copyCount => NULL;	--pagesToPrint => NULL;	--priorityHint => NULL;	--releaseKey => NULL;	--staple => NULL;	--twoSided => NULL;	ENDCASE;      ENDLOOP;    END;    DescribePrinterPropertiesResults,  DescribePrinterProperties: PUBLIC Courier.Description =    BEGIN    index: NSPrint.PrinterPropertiesIndex;    propertiesLength: ARRAY NSPrint.PrinterPropertiesIndex OF CARDINAL ¬ [      SIZE[media NSPrint.PrinterProperty],      SIZE[staple NSPrint.PrinterProperty],      SIZE[twoSided NSPrint.PrinterProperty]];    printerProperties: LONG POINTER TO NSPrint.PrinterProperties =      notes.noteSize[SIZE[NSPrint.PrinterProperties]];    notes.noteArrayDescriptor[      printerProperties, SIZE[NSPrint.PrinterProperty],      LAST[NSPrint.PrinterPropertiesIndex] + 1];    FOR index IN [0..LENGTH[printerProperties­]) DO      notes.noteChoice[        @printerProperties­[index], SIZE[NSPrint.PrinterProperty],	DESCRIPTOR[propertiesLength]];      WITH printerProperties­[index] SELECT FROM	media => notes.noteParameters[@media, DescribeMedia];        --staple, twoSided => NULL;	ENDCASE;      ENDLOOP;    END;    DescribePrinterStatusResults,  DescribePrinterStatus: PUBLIC Courier.Description =    BEGIN    statusLength: ARRAY NSPrint.PrinterStatusIndex OF CARDINAL ¬ [      SIZE[spooler NSPrint.PrinterStatusComponent],      SIZE[formatter NSPrint.PrinterStatusComponent],      SIZE[printer NSPrint.PrinterStatusComponent],      SIZE[media NSPrint.PrinterStatusComponent]];    status: LONG POINTER TO NSPrint.PrinterStatus =      notes.noteSize[SIZE[NSPrint.PrinterStatus]];    notes.noteArrayDescriptor[status, SIZE[NSPrint.PrinterStatusComponent],      LAST[NSPrint.PrinterStatusIndex] + 1];    FOR index: NSPrint.PrinterStatusIndex IN [0..LENGTH[status­]) DO      notes.noteChoice[        @status­[index], SIZE[NSPrint.PrinterStatusComponent],	DESCRIPTOR[statusLength]];      WITH status­[index] SELECT FROM        spooler, formatter, printer => NULL;	media => notes.noteParameters[@media, DescribeMedia];	ENDCASE;      ENDLOOP;    END;      DescribePrintRequestStatusResults,  DescribePrintRequestStatus: PUBLIC Courier.Description =    BEGIN    requestLength: ARRAY NSPrint.RequestStatusIndex OF CARDINAL ¬ [      SIZE[status NSPrint.RequestStatusComponent],      SIZE[statusMessage NSPrint.RequestStatusComponent]];    requestStatus: LONG POINTER TO NSPrint.RequestStatus =      notes.noteSize[SIZE[NSPrint.RequestStatus]];    notes.noteArrayDescriptor[      requestStatus, SIZE[NSPrint.RequestStatusComponent],      LAST[NSPrint.RequestStatusIndex] + 1];    FOR index: NSPrint.RequestStatusIndex IN [0..LENGTH[requestStatus­]) DO      notes.noteChoice[        @requestStatus­[index], SIZE[NSPrint.RequestStatusComponent],	DESCRIPTOR[requestLength]];      WITH requestStatus­[index] SELECT FROM        --status => NULL;	statusMessage =>	  notes.noteParameters[@statusMessage, NSString.DescribeString];	ENDCASE;      ENDLOOP;    END;      DescribePrintArguments: PUBLIC Courier.Description =    BEGIN    args: LONG POINTER TO NSPrintCourier.PrintArguments =      notes.noteSize[SIZE[NSPrintCourier.PrintArguments]];    notes.noteParameters[@args.master, NSDataStream.DescribeTicket];    notes.noteParameters[@args.printAttributes, DescribePrintAttribute];    notes.noteParameters[@args.printOptions, DescribePrintOption];    END;    DescribePrintResults,  DescribePrintRequestStatusArguments: PUBLIC Courier.Description =    {[] ¬ notes.noteSize[SIZE[NSPrint.RequestID]]};    DescribeUndefinedError, DescribeConnectionError,    DescribeTransferError: PUBLIC Courier.Description =    {[] ¬ notes.noteSize[SIZE[CARDINAL]]};    --UTILITY ROUTINES FOR FREEING DATA STRUCTURES  FreeAnyDescriptor: PROC [    d: LONG POINTER TO LONG DESCRIPTOR FOR ARRAY UNSPECIFIED OF UNSPECIFIED] =    BEGIN    b: LONG POINTER ¬ BASE[d­];    IF b # NIL THEN zone.FREE[@b];    d­ ¬ DESCRIPTOR[NIL, 0];    END;  FreeMedia: PUBLIC PROC [media: LONG POINTER TO NSPrint.Media] =    FreeAnyDescriptor;      FreePrinterProperties: PUBLIC PROC [    printerProperties: LONG POINTER TO NSPrint.PrinterProperties] =    BEGIN    FOR i: CARDINAL IN [0..LENGTH[printerProperties­]) DO      WITH printerProperties[i] SELECT FROM        media => FreeMedia[@media];	ENDCASE;      ENDLOOP;    FreeAnyDescriptor[printerProperties]    END;      FreePrinterStatus: PUBLIC PROC [    printerStatus: LONG POINTER TO NSPrint.PrinterStatus] =    BEGIN    FOR i: CARDINAL IN [0..LENGTH[printerStatus­]) DO      WITH printerStatus[i] SELECT FROM        media => FreeMedia[@media];	ENDCASE;      ENDLOOP;    FreeAnyDescriptor[printerStatus];    END;      FreeRequestStatus: PUBLIC PROC [    requestStatus: LONG POINTER TO NSPrint.RequestStatus] =    BEGIN    FOR i: CARDINAL IN [0..LENGTH[requestStatus­]) DO      WITH requestStatus[i] SELECT FROM        statusMessage => FreeString[@statusMessage];	ENDCASE;      ENDLOOP;    FreeAnyDescriptor[requestStatus];    END;  FreeString: PUBLIC PROCEDURE [string: LONG POINTER TO NSPrint.String] =    BEGIN    IF string.bytes # NIL THEN zone.FREE[@string.bytes];    string­ ¬ [NIL, 0, 0];    END;       END...--NSPrintCourierUtilityImplLOG16-Sep-82 11:00:19 - AOF - Created file.30-Sep-82  8:30:49 - Alfvin - Renamed and used NSString.DescribeString. 7-Oct-82 21:33:37 - Beeley - Changed zone allocation from Heap.Create to systemZone.14-Oct-82 22:05:40 - Beeley - Fixed DescribeMedia, added DescribeMedium; deleted Error = CODE. 5-Jan-83 12:49:16 - Beeley - FreeXXX procedures to free all contained datastructures as well.11-May-83 14:03:49 - AOF - Fix upperBound parameter in descriptors11-Aug-83 13:55:21 - AOF - Stopped copying DescribeString (Services AR# 9294)27-Jul-87 17:36:50 - AOF - Fixing the arrows.  