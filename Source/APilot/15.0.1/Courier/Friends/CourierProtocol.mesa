-- Copyright (C) 1984  by Xerox Corporation. All rights reserved. -- CourierProtocol.mesa (last edited by: AOF on 19-Dec-84 10:00:25)DIRECTORY  Courier USING [VersionRange],  Mopcodes USING [zEXCH],  Stream USING [SubSequenceType];CourierProtocol: DEFINITIONS =  BEGIN   MessageObject: TYPE = MACHINE DEPENDENT RECORD[    messageObject(0): SELECT protocol(0): Protocol FROM      protocol0, protocol1 => [],      protocol2 => [protocol2Body(1): Protocol2Body],      protocol3 => [protocol3Body(1): Protocol3Body],      ENDCASE];    MessageType: TYPE = MACHINE DEPENDENT{call(0), reject(1), return(2), abort(3)};    Protocol2Body: TYPE = MACHINE DEPENDENT RECORD[    protocol2Body(0): SELECT type(0): MessageType FROM    call => [transaction(1), program(2), version(3), procedure(4): CARDINAL],    reject => [transaction(1): CARDINAL, reject(2): RejectCode],    return => [transaction(1): CARDINAL],    abort => [transaction(1), abort(2): CARDINAL],    ENDCASE];    Protocol3Body: TYPE = MACHINE DEPENDENT RECORD[    protocol3Body(0): SELECT type(0): MessageType FROM    call => [      transaction(1): CARDINAL,      program(2): LONG CARDINAL,      version(4), procedure(5): CARDINAL],    reject => [      transaction(1): CARDINAL,      rejectBody(2): SELECT reject(2): RejectCode FROM        noSuchProgramNumber, noSuchProcedureValue, invalidArguments => [],	noSuchVersionNumber => [range(3): Courier.VersionRange],	ENDCASE],    return => [transaction(1): CARDINAL],    abort => [transaction(1), abort(2): CARDINAL],    ENDCASE];    ProtocolRange: TYPE = MACHINE DEPENDENT RECORD[low(0), high(1): Protocol];  Protocol: TYPE = MACHINE DEPENDENT {    protocol0(0), protocol1(1), protocol2(2), protocol3(3), protocol4(4)};  pvLow: Protocol = protocol2;  --lowest protocol version supported  pvHigh: Protocol = protocol3;  --highest protocol version supported    RejectCode: TYPE = MACHINE DEPENDENT{    noSuchProgramNumber(0), noSuchVersionNumber(1), noSuchProcedureValue(2),    invalidArguments(3)};  dataSST: Stream.SubSequenceType = 0;  --SST used for all Courier messages  <<  BASIC COURIER DATA TYPES  Array: TYPE = ARRAY CARDINAL[0..0) OF UNSPECIFIED;  Boolean: TYPE = RECORD[BOOLEAN];    [zero(0: 0..14): WORD ¬ 0, bool(0: 15..15): BOOLEAN];  Choice: TYPE = MACHINE DEPENDENT RECORD[    static(0): Static,    variant: SELECT tag(n): Tag FROM      t0 => [tv0(n+1): Tv0],      t1 => [tv1(n+1): Tv1],      tn => [tvn(n+1): Tvn],      ENDCASE];  Tv0: TYPE = ....;  Tv1: TYPE = ....;  Tvn: TYPE = ....;  Static: TYPE = ....;  Tag: TYPE = MACHINE DEPENDENT{t0(0), t1(1), ... , tn(n)};  Cardinal: TYPE = CARDINAL;  LongCardinal: TYPE = ExchWords[LONG CARDINAL];  LongInteger: TYPE = ExchWords[LONG INTEGER];  Sequence: TYPE = LONG DESCRIPTOR FOR Array;  String: TYPE = LONG STRING;  Unspecified: TYPE = UNSPECIFIED;  >>  ExchWordsProc: TYPE = PROC[LONG UNSPECIFIED] RETURNS[LONG UNSPECIFIED];  ExchWords: ExchWordsProc = MACHINE CODE {Mopcodes.zEXCH};  END...LOG18-Dec-84 12:04:36  AOF  Created file