{File name:  Bank2Misc.mcDescription: Miscellaneous Bank1 opcodes,Author: JPM,Created: July 16, 1986Last Revised:SxO/TxH 12-Sep-88 19:38:09 moved to bank2; changed the file name;JPM, 13-Nov-87 13:41:23	Comment out floating-point, image processing, & RES support ranges, and special BandBLT/TrapZ entry points (for unsegmented code)JPM,  8-Oct-87 11:53:51	Add special entry and exit points for BandBLT/TrapZJPM, 18-Aug-87 12:54:05	Fix addresses of return routines, remove specific opcodesJPM, 17-Dec-86 15:52:30	In commented codes, renamed @ROTATEGRAY (obsolete) to @LINEBREAKJPM, 16-Oct-86 17:00:55	Commented all image processing opcodes (phase 2)JPM,  9-Oct-86 12:39:49	Added @a250 as unimplemented opcode (formerly @BLTLINE)JPM, 29-Jul-86 14:25:06	Removed Reserve clause (now in Extensions.dfn)JPM, 18-Jul-86  9:17:04	Added STK ¬ TOS in Bank1Fault codeJPM, 17-Jul-86 14:49:09	Reactivated image processing codes}{ 	Copyright (C) 1986, 1987 by Xerox Corporation.  All rights reserved.}{Macro for causing an ESC code trap}MacroDef[UnimplBank2ESCRange,(ESCStd, CANCELBR[Bank2ESCOpcodeTrap,0F], c3, at[1#1])];Bank2ESCx:	Xbus ¬ TT LRot0, XDisp, push, DISP4[Bank2ESCHi],	c2, at[addrBank2ESCx];{emulator codes -- always in bank 0}Bank2ESCHi:	UnimplBank2ESCRange[0];	UnimplBank2ESCRange[1];	UnimplBank2ESCRange[2];	UnimplBank2ESCRange[3];	UnimplBank2ESCRange[7];	UnimplBank2ESCRange[8];	UnimplBank2ESCRange[9];{floating point}	UnimplBank2ESCRange[5];{	Bank2ESCRange[4], Bank2ESCRange[E] handled in VFptLinks.mc}{Cedar}	UnimplBank2ESCRange[6];{image processing}{	Bank2ESCRange[A] handled in ImageProcessingLinks.mc}{RES support}{	Bank2ESCRange[B] handled in RESSupportLinks.mc}{unassigned}	UnimplBank2ESCRange[C];	UnimplBank2ESCRange[D];	UnimplBank2ESCRange[F];Bank2ESCOpcodeTrap:	PC ¬ PC - 1, Bank ¬ r0100, {= bank0 in low 4 bits}	c1, at[Bank2ESCOpcodeTrap];Bank2ESCb:	T ¬ TT + 0FF + 1, GOTOBANK0[ESCc],			c2, at[Bank2ESCb];{paths back to bank 0}{Bank2Fault: go to fault handler}{Parameters:	T contains fault type (qPageFault or qWriteProtect)	faulted address already stored in [uFaultParm1, uFaultParm0]}Bank2Fault:	PC ¬ PC - 1, Bank ¬ r0100 {= bank0 in low 4 bits}, push, c3, at[Bank2Fault];Bank2Faultc1:	Rx ¬ pFault, STK ¬ TOS, pop, GOTOBANK0[SaveRegs],	c1, at[Bank2Faultc1];{Bank2Interrupt: go to interrupt handler}Bank2Interrupt:	Bank ¬ bank0,						c1, at[Bank2Interrupt];Bank2Intc2:	PC ¬ PC - 1, GOTOBANK0[RefillInt],			c2, at[Bank2Intc2];{Bank2NxtInstc1: dispatch on next opcode}Bank2NxtInstc1:	Bank ¬ bank0,						c1, at[Bank2NxtInstc1];Bank2NxtInstc2:	IBDisp, GOTOBANK0[DISPNIonly],				c2, at[Bank2NxtInstc2];{special entry & exit points for BandBLT/TrapZ}{BandBLTNormalEntry:	Bank ¬ bank0, GOTO[TrapzReturn],			c1, at[addrBandBLTNormalEntry];BandBLTIntEntry:	Bank ¬ bank0, GOTO[TrapzReturn],			c1, at[addrBandBLTIntEntry];}TrapzReturn:	GOTOBANK1[TrapzReturn]{GOTOBANK0[TrapzReturn]},		c2, at[TrapzReturn];