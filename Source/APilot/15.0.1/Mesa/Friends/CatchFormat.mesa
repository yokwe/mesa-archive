-- Copyright (C) 1981, 1983  by Xerox Corporation. All rights reserved. -- CatchFormat.mesa, Edited by--   JGS	11-Nov-81 15:53:26--   RES  	 9-Jun-83 15:50:38--   RXJ     	14-Jul-83 11:47:27DIRECTORY  PrincOps USING [BytePC, FSIndex, localbase, LocalFrameHandle, PrefixHandle];  CatchFormat: DEFINITIONS =  BEGIN   Codebase: TYPE = PrincOps.PrefixHandle;    CatchAction: TYPE = MACHINE DEPENDENT {    reject(0), resume(1), enable(2), exit(3),    last(65535)};    CatchIndex: TYPE = NATURAL;  CatchNull: CatchIndex = LAST[NATURAL];    EnableItem: TYPE = RECORD [    start: PrincOps.BytePC,    length: CARDINAL,    index: CatchIndex,    alsoNested: BOOLEAN];      EnableIndex: TYPE = CARDINAL[0..LAST[CARDINAL]/SIZE[EnableItem]);    EnableTableBody: TYPE = RECORD [SEQUENCE count: EnableIndex OF EnableItem];      EnableTable: TYPE = Codebase RELATIVE POINTER TO EnableTableBody;  EnableHandle: TYPE = LONG POINTER TO EnableTableBody;    -- if et[i].alsoNested = TRUE for any i IN [0..et.count) then  --   et+SIZE[EnableTableBody[et.count]] is a valid EnableTable     CatchEVBody: TYPE = RECORD [SEQUENCE count: CatchIndex OF PrincOps.BytePC];      CatchEV: TYPE = Codebase RELATIVE POINTER TO CatchEVBody;  nullCatchEV: CatchEV = LOOPHOLE[0];    CatchEVHandle: TYPE = LONG POINTER TO CatchEVBody;  sigOffset: CARDINAL = PrincOps.localbase + 1;  msgOffset: CARDINAL = PrincOps.localbase + 3;    CatchFrame: TYPE = MACHINE DEPENDENT RECORD [    staticLink(PrincOps.localbase): PrincOps.LocalFrameHandle,    signal(sigOffset): SIGNAL,    message(msgOffset): POINTER];    -- the LocalVariables of a catch frame    CatchFrameHandle: TYPE = POINTER TO CatchFrame;    CallCatch: TYPE = PROCEDURE RETURNS [CatchAction];    -- this is the effective type of a catch phrase.    -- signal and message are stored by the signal handler before calling    defaultFsi: PrincOps.FSIndex = 1;    END.