-- Copyright (C) 1983  by Xerox Corporation. All rights reserved. -- Frame.Mesa  Edited by RXJ      on 17-Jun-83 14:06:16DIRECTORY  PrincOps USING [    BytePC, codebaseHighOffset, codebaseLowOffset, GlobalFrameHandle,    GlobalWord, globalOffset, globalWordOffset, LocalFrameHandle, LocalWord,    localWordOffset, pcOffset, PrefixHandle, returnOffset, ShortControlLink],  ESCAlpha USING [aAF, aFF, bROB, bWOB],  Mopcodes USING [zDUP, zESC, zESCL, zEXCH, zGA0, zLA0];Frame: DEFINITIONS =  BEGIN OPEN PrincOps, ESCAlpha, Mopcodes;  GetReturnLink: PROCEDURE RETURNS [ShortControlLink] = MACHINE CODE    BEGIN zLA0; zESCL, bROB, returnOffset END;  GetReturnFrame: PROCEDURE RETURNS [LocalFrameHandle] = LOOPHOLE[GetReturnLink];  SetReturnLink: PROCEDURE [ShortControlLink] = MACHINE CODE    BEGIN zLA0; zESCL, bWOB, returnOffset END;  SetReturnFrame: PROCEDURE [LocalFrameHandle] = LOOPHOLE[SetReturnLink];  MyLocalFrame: PROCEDURE RETURNS [LocalFrameHandle] = MACHINE CODE BEGIN zLA0 END;  MyGlobalFrame: PROCEDURE RETURNS [GlobalFrameHandle] = MACHINE CODE BEGIN zGA0 END;  ReadLocalWord: PROCEDURE [LocalFrameHandle] RETURNS [LocalWord] = MACHINE CODE    BEGIN zESCL, bROB, localWordOffset END;  ReadReturnLink: PROCEDURE [LocalFrameHandle] RETURNS [ShortControlLink] = MACHINE CODE    BEGIN zESCL, bROB, returnOffset END;  ReadGlobalLink: PROCEDURE [LocalFrameHandle] RETURNS [GlobalFrameHandle] = MACHINE CODE    BEGIN zESCL, bROB, globalOffset END;  ReadPC: PROCEDURE [LocalFrameHandle] RETURNS [BytePC] = MACHINE CODE    BEGIN zESCL, bROB, pcOffset END;  WriteLocalWord: PROCEDURE [word: LocalWord, lf: LocalFrameHandle] = MACHINE CODE    BEGIN zESCL, bWOB, localWordOffset END;  WriteReturnLink: PROCEDURE [cl: ShortControlLink, lf: LocalFrameHandle] = MACHINE CODE    BEGIN zESCL, bWOB, returnOffset END;  WriteGlobalLink: PROCEDURE [gf: GlobalFrameHandle, lf: LocalFrameHandle] =    MACHINE CODE BEGIN zESCL, bWOB, globalOffset END;  WritePC: PROCEDURE [pc: BytePC, lf: LocalFrameHandle] = MACHINE CODE    BEGIN zESCL, bWOB, pcOffset END;  ReadGlobalWord: PROCEDURE [GlobalFrameHandle] RETURNS [GlobalWord] =    MACHINE CODE BEGIN zESCL, bROB, globalWordOffset END;  ReadCodebaseLow: PROCEDURE [GlobalFrameHandle] RETURNS [UNSPECIFIED] =    MACHINE CODE BEGIN zESCL, bROB, codebaseLowOffset END;  ReadCodebaseHigh: PROCEDURE [GlobalFrameHandle] RETURNS [UNSPECIFIED] =    MACHINE CODE BEGIN zESCL, bROB, codebaseHighOffset END;  ReadCodebase: PROCEDURE [GlobalFrameHandle] RETURNS [PrefixHandle] =    MACHINE CODE BEGIN    zDUP; zESCL, bROB, codebaseLowOffset; zEXCH; zESCL, bROB, codebaseHighOffset    END;      WriteGlobalWord: PROCEDURE [word: GlobalWord, gf: GlobalFrameHandle] =    MACHINE CODE BEGIN zESCL, bWOB, globalWordOffset END;  WriteCodebaseLow: PROCEDURE [u: UNSPECIFIED, gf: GlobalFrameHandle] =    MACHINE CODE BEGIN zESCL, bWOB, codebaseLowOffset END;  WriteCodebaseHigh: PROCEDURE [u: UNSPECIFIED, gf: GlobalFrameHandle] =    MACHINE CODE BEGIN zESCL, bWOB, codebaseHighOffset END;  Alloc: PROCEDURE [CARDINAL] RETURNS [POINTER] = MACHINE CODE BEGIN zESC, aAF END;  Free: PROCEDURE [POINTER] = MACHINE CODE BEGIN zESC, aFF END;  END.