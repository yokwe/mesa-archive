-- Inline.mesa  (last edited by: RXJ      on 30-Mar-83 12:13:15)-- Copyright (C) Xerox Corporation 1982. All rights reserved.DIRECTORY  Environment USING [LongNumber],  ESCAlpha USING [    aBLTLR, aDAND, aDIOR, aDSHIFT, aDXOR, aLUDIV, aROTATE, aSDDIV,    aUDIV, aUDDIV, aXOR],  Mopcodes USING [    zAND, zBLT, zBLTL, zESC, zLIN1, zMUL, zIOR, zREC, zREC2, zSHIFT];Inline: DEFINITIONS =  BEGIN OPEN ESCAlpha, Mopcodes;  LongCARDINAL: TYPE = LONG CARDINAL;  LongNumber: TYPE = Environment.LongNumber;  COPY: PROCEDURE [from: POINTER, nwords: CARDINAL, to: POINTER] = MACHINE CODE    BEGIN zBLT END;  LongCOPY: PROCEDURE [from: LONG POINTER, nwords: CARDINAL, to: LONG POINTER] =    MACHINE CODE BEGIN zBLTL END;  LongCOPYReverse: PROCEDURE [from: LONG POINTER, nwords: CARDINAL, to: LONG POINTER] =    MACHINE CODE BEGIN Mopcodes.zESC, ESCAlpha.aBLTLR END;  DIVMOD: PROCEDURE [num, den: CARDINAL] RETURNS [quotient, remainder: CARDINAL] =    MACHINE CODE BEGIN zESC, aUDIV; zREC END;  LDIVMOD: PROCEDURE [numlow: WORD, numhigh: CARDINAL, den: CARDINAL]    RETURNS [quotient, remainder: CARDINAL] =    MACHINE CODE BEGIN zESC, aLUDIV; zREC END;  LongMult: PROCEDURE [CARDINAL, CARDINAL] RETURNS [product: LONG CARDINAL] =    MACHINE CODE BEGIN zMUL; zREC END;  LongDiv: PROCEDURE [num: LONG CARDINAL, den: CARDINAL] RETURNS [CARDINAL] =    MACHINE CODE BEGIN zESC, aLUDIV END;  LongDivMod: PROCEDURE [num: LONG CARDINAL, den: CARDINAL]    RETURNS [quotient, remainder: CARDINAL] =    MACHINE CODE BEGIN zESC, aLUDIV; zREC END;  BitOp: TYPE = PROCEDURE [UNSPECIFIED, UNSPECIFIED] RETURNS [UNSPECIFIED];  BITAND: BitOp = MACHINE CODE BEGIN zAND END;  BITOR: BitOp = MACHINE CODE BEGIN zIOR END;  BITXOR: BitOp = MACHINE CODE BEGIN zESC, aXOR END;  BITNOT: PROCEDURE [UNSPECIFIED] RETURNS [UNSPECIFIED] = MACHINE CODE    BEGIN zLIN1; zESC, aXOR END;  BITSHIFT: PROCEDURE [value: UNSPECIFIED, count: INTEGER] RETURNS [UNSPECIFIED] =    MACHINE CODE BEGIN zSHIFT END;  BITROTATE: PROCEDURE [value: UNSPECIFIED, count: INTEGER] RETURNS [UNSPECIFIED] =    MACHINE CODE BEGIN zESC, aROTATE END;  LowHalf: PROCEDURE [u: LONG UNSPECIFIED] RETURNS [UNSPECIFIED] = INLINE    BEGIN RETURN[LOOPHOLE[u, LongNumber].lowbits] END;  HighHalf: PROCEDURE [u: LONG UNSPECIFIED] RETURNS [UNSPECIFIED] = INLINE    BEGIN RETURN[LOOPHOLE[u, LongNumber].highbits] END;  BytePair: TYPE = MACHINE DEPENDENT RECORD [high, low: [0..377B]];  LowByte: PROCEDURE [u: UNSPECIFIED] RETURNS [UNSPECIFIED] = INLINE    BEGIN RETURN[LOOPHOLE[u, BytePair].low] END;  HighByte: PROCEDURE [u: UNSPECIFIED] RETURNS [UNSPECIFIED] = INLINE    BEGIN RETURN[LOOPHOLE[u, BytePair].high] END;  UDDivMod: PROCEDURE [    num, den: LONG CARDINAL] RETURNS [quotient, remainder: LONG CARDINAL] =    MACHINE CODE BEGIN zESC, aUDDIV; zREC2 END;  SDDivMod: PROCEDURE [    num, den: LONG INTEGER] RETURNS [quotient, remainder: LONG INTEGER] =    MACHINE CODE BEGIN zESC, aSDDIV; zREC2 END;  DBitOp: TYPE = PROCEDURE [    LONG UNSPECIFIED, LONG UNSPECIFIED] RETURNS [LONG UNSPECIFIED];  DBITAND: DBitOp = MACHINE CODE BEGIN zESC, aDAND END;  DBITOR: DBitOp = MACHINE CODE BEGIN zESC, aDIOR END;  DBITXOR: DBitOp = MACHINE CODE BEGIN zESC, aDXOR END;  DBITNOT: PROCEDURE [LONG UNSPECIFIED] RETURNS [LONG UNSPECIFIED] = MACHINE CODE    BEGIN zLIN1; zLIN1; zESC, aDXOR END;  DBITSHIFT: PROCEDURE [    value: LONG UNSPECIFIED, count: INTEGER] RETURNS [LONG UNSPECIFIED] =    MACHINE CODE BEGIN zESC, aDSHIFT END;  END.LOGTime: May 22, 1979  4:47 PM	By: HXL  	Action: Created file by renaming Mesa>System>InlineDefs.mesaTime: June 7, 1979  5:46 PM	By: PXM    	Action: Fixed shift count in HighByteTime: January 25, 1980  4:01 PM	By: FXH    	Action: Equated Long number to Env.longNumberTime: January 27, 1981  5:33 PM	By: RXJ     	Action: Made High/LowMumble be INLINE instead of MACHINE CODE.Time: 22-Jul-81 12:01:07	By: JGS	Action: Added double operationsTime: 30-Mar-83 12:12:57	By: RXJ     	Action: Added LongCOPYReverse