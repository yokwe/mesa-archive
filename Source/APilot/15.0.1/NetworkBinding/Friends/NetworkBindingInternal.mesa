-- File: NetworkBindingInternal.mesa - last edit:-- AOF                 19-Jun-87 12:05:00-- kam                  3-Jun-86 11:02:58-- Copyright (C) 1986, 1987 by Xerox Corporation. All rights reserved.DIRECTORY  Courier USING [Description],  Environment USING [bytesPerWord],  NetworkBinding USING [    defaultHops, Responses, nullPredicate, PredicateRecord],  NetworkBindingProtocol USING [    CallMessage, ClientInfo, Cookie, ReturnMessage, AbortMessage, HostsRecord],  NSTypes USING [    bytesPerExchangeHeader, maxDataBytesPerExchange],  System USING [HostNumber, broadcastHostNumber, nullHostNumber];NetworkBindingInternal: DEFINITIONS =  BEGIN  CallMessage: TYPE = LONG POINTER TO NetworkBindingProtocol.CallMessage;  ClientInfo: TYPE = LONG POINTER TO NetworkBindingProtocol.ClientInfo;  ReturnMessage: TYPE = LONG POINTER TO NetworkBindingProtocol.ReturnMessage;  AbortMessage: TYPE = LONG POINTER TO NetworkBindingProtocol.AbortMessage;  Hosts: TYPE = LONG POINTER TO NetworkBindingProtocol.HostsRecord;  HostsSubList: TYPE = RECORD[    pointer: Hosts, startIndex, stopIndexPlusOne: NATURAL];  InitialHostsList: TYPE = RECORD[    two: CARDINAL ¬ 2,    low: System.HostNumber ¬ System.nullHostNumber,    high: System.HostNumber ¬ System.broadcastHostNumber];  <<  The only lengths not included in 'fixedBytesInLocateCall' are the lengths  of the hosts record and the client predicate's cookie.  >>   fixedBytesInLocateCall: NATURAL = NSTypes.bytesPerExchangeHeader +    (Environment.bytesPerWord * (      SIZE[NetworkBindingProtocol.CallMessage] -      SIZE[NetworkBindingProtocol.HostsRecord] -      SIZE[NetworkBindingProtocol.Cookie]));  <<  The only length not included in 'fixedBytesInReturn' is the length  of the the client response's cookie.  >>   fixedBytesInReturn: NATURAL = NSTypes.bytesPerExchangeHeader +    (Environment.bytesPerWord * (      SIZE[NetworkBindingProtocol.ReturnMessage] -      SIZE[NetworkBindingProtocol.Cookie]));  initialLocateStartIndex: NATURAL =    (SIZE[NetworkBindingProtocol.ClientInfo] * Environment.bytesPerWord);  initialLocateStopIndex: NATURAL =    NSTypes.maxDataBytesPerExchange - fixedBytesInLocateCall;  ThreeCardinals: TYPE = RECORD[one, two, three: CARDINAL];  SetSequenceLength: PROC[s: LONG POINTER, l: NATURAL] = INLINE    {LOOPHOLE[s, LONG POINTER TO CARDINAL]­ ¬ l};  <<  Use this with descretion.  Don't (and I mean DON'T) ask for every workstation  within a radius of 16 hops.  Probably you should not use this procedure with  'maxHops' greater than 3 or 4.  The result will be returned as a concatenation of answers that would have  been returned with successive calls to BindToAllOnNet using a expanding  ring broadcast (i.e., sorted by hop-count--processorid).  >>  BindToAllNearby: PROCEDURE [    predicate: NetworkBinding.PredicateRecord ¬ NetworkBinding.nullPredicate,    responseDescription: Courier.Description ¬ NIL,    maxHops: CARDINAL ¬ NetworkBinding.defaultHops,    zone: UNCOUNTED ZONE ¬ NIL]    RETURNS [responses: NetworkBinding.Responses];  <<  We didn't even get finished with the specification stage before we  gunned version 1 of this protocol. We still have a full XDE release based  on version 1. So this implementation will permit clients to use version 1  the protocol providing they don't ask for a response. The servers are also  willing to answer version 1 or version 2 requests.  The following procedure will disable (the default is enabled) the version  adjustment feature.  >>  VersionAdjustmentAllowed: PROCEDURE [allowed: BOOLEAN ¬ TRUE];  StartProtocol: PROCEDURE [] RETURNS[started: BOOLEAN];  StopProtocol: PROCEDURE[] RETURNS[stopped: BOOLEAN];    END...