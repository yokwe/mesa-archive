--File = TTYPortIOFaceDove.mesa-- last edited --	DMS	18-Sep-85 15:35:00 / Remove eight byte buffer and trimmings to go to One Byte Buffer--	JPM	29-Jul-85 10:03:54 / Opie redesign conversion--	DMS	12-Jul-85  9:19:40 / Changes to correspond with TTyIOFace.asm-------------------------------------------------------------------------------- Description:--TTYPortIOFaceDove contains the IORegion (IOPage equivalent on the Dlion) which--is a region of memory that is permanently mapped into contiguous Real--Memory. This IORegion houses the well defined structures in shared memory and--allows communication between Mesa's TTYPortHeadDove and the IOP's TTYPortHandler--software.--******************************************************************************DIRECTORY  DoveInputOutput USING [Byte, ByteSwappedWord, ClientCondition, IOPCondition, NotifyMask, TaskContextBlock];TTYPortIOFaceDove: DEFINITIONS =BEGIN--------------------------------------------------------------------------------	FUNCTION  CONTEXT  BLOCK  DEFINITION  FOR  TTYPort------------------------------------------------------------------------------FunctionContextBlock: TYPE =  MACHINE DEPENDENT RECORD[ txTcb:		DoveInputOutput.TaskContextBlock,  specRxTcb:		DoveInputOutput.TaskContextBlock,  rxTaskChBTcb:		DoveInputOutput.TaskContextBlock,  ttyLockMask:		WORD,  ttyWorkMask:		DoveInputOutput.NotifyMask,  ttyClientCondition:	DoveInputOutput.ClientCondition,  ttyWorkCondition:	DoveInputOutput.IOPCondition,  txBuffer:		CHARACTER,  rxBuffer:		CHARACTER,  ttyWorkList:		WorkListType,	--work list for handler  --parameters for i8254 and related hardware  ttyBaudRate:		DoveInputOutput.ByteSwappedWord,	--Baud rate value of i8254 timer 1 (Ch B/DCE)  wr1:			WR1ByteType,  wr3:			WR3ByteType,	--Write Register 3 for Channel B of MPSC  wr4:			WR4ByteType,	--Write Register 4 for Channel B of MPSC  wr5:			WR5ByteType,	--Write Register 5 for Channel B of MPSC  --status from i8254 and related hardware  iopSystemInputPort:	InputPortHighByte,	--Input port of the IOP for External status  rr0:			RR0ByteType,	--Read Register 0 for Channel B of MPSC  rr1:			RR1ByteType,	--Read Register 1 for Channel B of MPSC  rr2:			DoveInputOutput.Byte,	--Read Register 2 for Channel B of MPSC    ttyStatusWord:	TTYStatusWord,    eepromImage:		RSEEPromConfigImageB  ];				------------------------------------------------------TTYStatusWord: TYPE = MACHINE DEPENDENT RECORD[ temp1:		BOOLEAN	,  ttyChnlBOn:		BOOLEAN _ FALSE,  ttyTxBufEmpty:	BOOLEAN _ TRUE,  ttyRxBufFull:		BOOLEAN _ FALSE,  temp2:		BOOLEAN,  temp3:		BOOLEAN,  ttyInterruptFail:	BOOLEAN _ FALSE,  ttyDataLost:		BOOLEAN _ FALSE,  temp4:		BOOLEAN,  temp5:		BOOLEAN,  temp6:		BOOLEAN,  temp7:		BOOLEAN,  temp8:		BOOLEAN,  temp9:		BOOLEAN,  temp10:		BOOLEAN,  temp11:		BOOLEAN ];WorkListType: TYPE = MACHINE DEPENDENT RECORD[ writeBaudRate:	BOOLEAN,  writeReg3:		BOOLEAN,  writeReg4:		BOOLEAN,  writeReg5:		BOOLEAN,  workToBeDone:		BOOLEAN,  writeReg1:		BOOLEAN,  temp2:		BOOLEAN,  temp3:		BOOLEAN,  temp4:		BOOLEAN,  temp5:		BOOLEAN,  temp6:		BOOLEAN,  temp7:		BOOLEAN,  temp8:		BOOLEAN,  temp9:		BOOLEAN,  temp10:		BOOLEAN,  temp11:		BOOLEAN  ];WR1ByteType: TYPE = MACHINE DEPENDENT RECORD[ waitEnable: BOOLEAN,  notUsed:BOOLEAN _ FALSE,  waitOnRxOrTx: WaitOn,  interruptCondition: IntConditionType,  statusAffectsVector: BOOLEAN,  txIntDMAenable: BOOLEAN,  extInterruptEnable: BOOLEAN];  WaitOn: TYPE = MACHINE DEPENDENT{waitOnTx(0),waitOnRx(1)};IntConditionType: TYPE = MACHINE DEPENDENT{rxIntDMAdisable,rxIntOn1stCharOrSpecCondition,intOnAllRxParityAffectsVector,intOnAllRxParityNotAffectVector};WR3ByteType: TYPE = MACHINE DEPENDENT RECORD[ rxCharLength: CharLengthType,  autoEnable: BOOLEAN _ FALSE,  unused: [0..17B] _ 0,  rxEnable: BOOLEAN ];CharLengthType: TYPE = MACHINE DEPENDENT  {ch5bits, ch7bits, ch6bits, ch8bits};WR4ByteType: TYPE = MACHINE DEPENDENT RECORD[ clockRate: ClockRateType _ x16clk,  unused: [0..3] _ 0,  stopBits: StopBitsType,  parity: ParityType ];ClockRateType: TYPE = MACHINE DEPENDENT  {x1clk, x16clk, x32clk, x64clk};StopBitsType: TYPE = MACHINE DEPENDENT  {oneStopBit(1), oneAndHalfStopBit(2), twoStopBit(3)};ParityType: TYPE = MACHINE DEPENDENT  {none(0), parityOdd(1), parityEven(3)};WR5ByteType: TYPE = MACHINE DEPENDENT RECORD[ dataSetReady: BOOLEAN, -- DTR on chip  txCharLength: CharLengthType,  sendBreak: BOOLEAN,  txEnable: BOOLEAN,  unused: [0..1] _ 0,  clearToSend: BOOLEAN, -- RTS on chip  unusedAlso: [0..1] _ 0 ];InputPortHighByte: TYPE = MACHINE DEPENDENT RECORD[ unusedByRS232ChB: [0..177B],  nDataTerminalReady: BOOLEAN ];RR0ByteType: TYPE = MACHINE DEPENDENT RECORD[ breakDetected: BOOLEAN,  txUnderrun: BOOLEAN,  requestToSend: BOOLEAN, -- CTS on chip  syncDetected: BOOLEAN,  carrierDetect: BOOLEAN,  txBuferEmpty: BOOLEAN,  interruptPending: BOOLEAN,  rxCharAvailable: BOOLEAN ];RR1ByteType: TYPE = MACHINE DEPENDENT RECORD[ unused: [0..1], -- for SDLC  asyncFramingError: BOOLEAN,  rxOverrun: BOOLEAN,  parityError: BOOLEAN,  unusedAlso: [0..7], -- for bit-synchronous  txAllSent: BOOLEAN ];RSEEPromConfigImageB: TYPE = MACHINE DEPENDENT RECORD[ type:	RS232ChannelType,  attributes:	ARRAY [1..4] OF WORD ];RS232ChannelType: TYPE = MACHINE DEPENDENT  {none(0), DCE(2), (LAST [CARDINAL])};	END.