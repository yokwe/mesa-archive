--File: GrayBlt.mesa--Last Edit: Monahan, 5-Sep-86 11:39:30--Copyright (C) 1986 by Xerox Corporation.  All rights reserved.DIRECTORYBitBlt USING [BitAddress],Environment USING [Byte],ESCAlphaExtras USING [aGRAYBLT, aGRAYSUM, aGRAYTHRSHLD],Inline USING [DBITAND],Mopcodes USING [zESC];GrayBlt: DEFINITIONS  IMPORTS Inline =  BEGINByteAddress: TYPE = MACHINE DEPENDENT RECORD [  word(0): LONG POINTER,  reserved(2:0..14): [0..77777B] ¬ 0,  byte(2:15..15): [0..1]];GrayBltFlags: TYPE = MACHINE DEPENDENT RECORD [  direction(0:0..0): Direction ¬ forward,  disjoint(0:1..1): BOOLEAN ¬ FALSE,  disjointItems(0:2..2): BOOLEAN ¬ FALSE,  srcFunc(0:3..4): SrcFunc ¬ null,  dstFunc(0:5..6): DstFunc ¬ set,  reserved(0:7..15): [0..777B] ¬ 0];Direction: TYPE = MACHINE DEPENDENT {forward, backward};SrcFunc: TYPE = MACHINE DEPENDENT {  null,    -- srcByteTemp ¬ srcByte  invert,  -- srcByteTemp ¬ 255 - srcByte  trc};    -- srcByteTemp ¬ trc[srcByte]DstFunc: TYPE = MACHINE DEPENDENT {  set,       -- dstByte ¬ srcByteTemp  add,       -- dstByte ¬ MIN [dstByte + srcByteTemp, 255]  subtract,  -- dstByte ¬ MAX [dstByte - srcByteTemp, 0]  average};  -- dstByte ¬ (dstByte + srcByteTemp) / 2TRC: TYPE = LONG POINTER TO TRCMap;TRCMap: TYPE = PACKED ARRAY Environment.Byte OF Environment.Byte;--TablesGBptr: TYPE = LONG POINTER TO GBTable;Sumptr: TYPE = LONG POINTER TO SumTable;Threshptr: TYPE = LONG POINTER TO ThresholdTable;GBTable: TYPE = MACHINE DEPENDENT RECORD [  dst(0): ByteAddress,  dstBpl(3): INTEGER, -- Bytes per line; negative iff flags.direction = backward  src(4): ByteAddress,  srcBpl(7): INTEGER, -- Bytes per line; negative iff flags.direction = backward  width(8): NATURAL, -- In Bytes  height(9): NATURAL, -- In scanlines  flags(10): GrayBltFlags,  trc(11): TRC ¬ NIL ]; -- trc map needed iff flags.srcFunc = trcSumTable: TYPE = MACHINE DEPENDENT RECORD [  src(0): ByteAddress,  srcBpl(3): NATURAL, --Bytes per line  width(4): NATURAL, -- In Bytes  height(5): NATURAL ]; -- In scanlinesThresholdTable: TYPE = MACHINE DEPENDENT RECORD [  dst(0): BitBlt.BitAddress,  dstBpl(3): NATURAL, --Bits per line  src(4): ByteAddress,  srcBpl(7): NATURAL, --Bytes per line  width(8): NATURAL, -- In src Bytes, dest Bits  height(9): NATURAL, -- In scanlines  reserved(10:0..7): [0..377B] ¬ 0,  srcCuttoffValue(10:8..15): Environment.Byte ];-- ********************************************************--Alignment issues-- ********************************************************tableAlignment: PRIVATE CARDINAL = 16;tableAlignmentMask: PRIVATE LONG INTEGER = -tableAlignment; -- same as ~(tableAlignment - 1)GBTableSpace: TYPE = ARRAY [1 .. (SIZE[GBTable] + tableAlignment)) OF WORD;SumTableSpace: TYPE = ARRAY [1 .. (SIZE[SumTable] + tableAlignment)) OF WORD;ThresholdTableSpace: TYPE = ARRAY [1 .. (SIZE[ThresholdTable] + tableAlignment)) OF WORD;AlignedGBTablePtr: PROC [sPtr: LONG POINTER TO GBTableSpace] RETURNS [GBptr] = INLINE  {RETURN[Inline.DBITAND[(sPtr + tableAlignment - 1), tableAlignmentMask]]};AlignedSumTablePtr: PROC [sPtr: LONG POINTER TO SumTableSpace] RETURNS [Sumptr] = INLINE  {RETURN[Inline.DBITAND[(sPtr + tableAlignment - 1), tableAlignmentMask]]};AlignedThresholdTablePtr: PROC [sPtr: LONG POINTER TO ThresholdTableSpace] RETURNS [Threshptr] = INLINE  {RETURN[Inline.DBITAND[(sPtr + tableAlignment - 1), tableAlignmentMask]]};-- ********************************************************--Procedures MicroCode-- ********************************************************GrayBlt: PROCEDURE [ptr: GBptr] = MACHINE CODE  {Mopcodes.zESC, ESCAlphaExtras.aGRAYBLT};Sum: PROCEDURE [ptr: Sumptr] RETURNS [LONG CARDINAL] = MACHINE CODE  {Mopcodes.zESC, ESCAlphaExtras.aGRAYSUM}; -- WARNING: use only for assignments; arbitrary expressions may failThreshold: PROCEDURE [ptr: Threshptr] = MACHINE CODE  {Mopcodes.zESC, ESCAlphaExtras.aGRAYTHRSHLD};--Procedures Software-- ********************************************************SoftwareGrayBlt: PROCEDURE [ptr: GBptr];SoftwareSum: PROCEDURE [ptr: Sumptr] RETURNS [LONG CARDINAL];SoftwareThreshold: PROCEDURE [ptr: Threshptr];END.LOG27-Feb-86 -- JGoldfield -- Created.23-May-86 -- Monahan -- Revised record fields for consistency, added actual opcodes, removed test procedures.14-Jul-86 -- Monahan -- Changed order of dstFunc enums (to match uCode).15-Aug-86 -- Monahan -- Added alignment procs.5-Sep-86 -- Monahan -- Changed name, added software versions of procedures.