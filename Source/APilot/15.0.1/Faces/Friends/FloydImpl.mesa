-- File: FloydImpl.mesa - last edit:-- JPM			 17-Aug-87 12:46:01-- Copyright (C) 1986, 1987 by Xerox Corporation. All rights reserved.DIRECTORY  Environment USING [bitsPerWord, Byte],  ESCAlphaExtras USING [aFLOYD],  Floyd USING [FTptr],  Frame USING [GetReturnFrame, ReadPC, WritePC],  Inline USING [BITSHIFT],  PrincOps USING [ESCTrapTable];FloydImpl: PROGRAM  IMPORTS Frame, Inline  EXPORTS Floyd =  BEGIN  -- TYPEs  BitWord: TYPE = PACKED ARRAY [0 .. Environment.bitsPerWord) OF BOOLEAN;  ByteSeqPtr: TYPE = LONG POINTER TO RECORD [    PACKED SEQUENCE COMPUTED CARDINAL OF Environment.Byte ];  -- PUBLIC PROCs  SoftwareFloyd: PUBLIC PROCEDURE [ptr: Floyd.FTptr] =    BEGIN    threshold: INTEGER = Inline.BITSHIFT [ptr.threshold, 4];    maxValue: INTEGER = Inline.BITSHIFT [ptr.maxValue, 4];    zeroBitVal: BOOLEAN = ptr.invert;    oneBitVal: BOOLEAN = NOT zeroBitVal;    dstPtr: LONG POINTER TO BitWord ¬ ptr.outBuffAddress.word;    dstIndex: NATURAL ¬ ptr.outBuffAddress.bit;    srcPtr: ByteSeqPtr ¬ ptr.inBuffAddress.word;    srcIndex: NATURAL ¬ ptr.inBuffAddress.byte;    errPtr: LONG POINTER TO INTEGER ¬ ptr.errorBuff;    hold: BitWord ¬ dstPtr­;    pix: INTEGER ¬ errPtr­;    rtErr, midErr, errDiv16, err3Div16, err5Div16: INTEGER ¬ 0;    THROUGH [0 .. ptr.pixelCount) DO      IF dstIndex >= Environment.bitsPerWord THEN	BEGIN	dstPtr­ ¬ hold;	hold ¬ (dstPtr ¬ dstPtr + 1)­;	dstIndex ¬ 0	END;      pix ¬ Inline.BITSHIFT [srcPtr[srcIndex], 4]        + (pix - err5Div16 - err3Div16 - errDiv16)	+ (errPtr + 1)­;      IF pix < threshold THEN hold[dstIndex] ¬ zeroBitVal ELSE	BEGIN	pix ¬ pix - maxValue;	hold[dstIndex] ¬ oneBitVal	END;      err5Div16 ¬ Inline.BITSHIFT [ABS[pix], -2];      err3Div16 ¬ Inline.BITSHIFT [err5Div16, -1];      errDiv16 ¬ Inline.BITSHIFT [err3Div16, -1];      IF pix < 0 THEN	BEGIN        err5Div16 ¬ - err5Div16;        err3Div16 ¬ - err3Div16;        errDiv16 ¬ - errDiv16	END;      errPtr­ ¬ midErr + (err3Div16 ¬ err3Div16 + errDiv16);      midErr ¬ rtErr + (err5Div16 ¬ err5Div16 + errDiv16);      rtErr ¬ errDiv16;      errPtr ¬ errPtr + 1;      srcIndex ¬ srcIndex + 1;      dstIndex ¬ dstIndex + 1    ENDLOOP;    dstPtr­ ¬ hold;    errPtr­ ¬ midErr    END;  -- PRIVATE PROC (for trap table)    -- since this is called as trap instruction, we gotta    -- bump the pc.  Note that it is minimal stack, which    -- means we don't have to bother dumping state.  FLOYD: PROC [ptr: Floyd.FTptr] =    BEGIN    Frame.WritePC [      pc: [(Frame.ReadPC [Frame.GetReturnFrame [] ] + 2)],      lf: Frame.GetReturnFrame [] ];    SoftwareFloyd [ptr]    END;  -- main code  PrincOps.ESCTrapTable[ESCAlphaExtras.aFLOYD] ¬ LOOPHOLE[FLOYD]  END. -- of FloydImplLOG19-Sep-86 -- JPM -- Created.31-Oct-86 -- JPM -- Modified error calculation so that propagated errors sum to total error; use maxValue from argument record.21-Apr-87 -- JPM -- Remodified error calculation so that downward errors are truncated toward 0.11-Aug-87 -- JPM -- Incorporate XSIS suggestions (left-shift everything 4 bits for better precision, compute fewer intermediate values, preset forward error from error buffer)17-Aug-87 -- JPM -- Back off the "compute fewer intermediate values" change, to stay compatible with microcode